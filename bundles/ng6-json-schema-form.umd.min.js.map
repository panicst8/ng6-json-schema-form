{"version":3,"sources":["null","ng://ng6-json-schema-form/lib/shared/validator.functions.ts","ng://ng6-json-schema-form/lib/shared/utility.functions.ts","ng://ng6-json-schema-form/lib/shared/jsonpointer.functions.ts","ng://ng6-json-schema-form/lib/shared/merge-schemas.function.ts","ng://ng6-json-schema-form/lib/shared/json-schema.functions.ts","ng://ng6-json-schema-form/lib/shared/format-regex.constants.ts","ng://ng6-json-schema-form/lib/shared/json.validators.ts","ng://ng6-json-schema-form/lib/shared/form-group.functions.ts","ng://ng6-json-schema-form/lib/shared/layout.functions.ts","ng://ng6-json-schema-form/lib/locale/en-validation-messages.ts","ng://ng6-json-schema-form/lib/locale/fr-validation-messages.ts","ng://ng6-json-schema-form/lib/json-schema-form.service.ts","ng://ng6-json-schema-form/lib/widget-library/add-reference.component.ts","ng://ng6-json-schema-form/lib/widget-library/one-of.component.ts","ng://ng6-json-schema-form/lib/widget-library/button.component.ts","ng://ng6-json-schema-form/lib/widget-library/checkbox.component.ts","ng://ng6-json-schema-form/lib/shared/convert-schema-to-draft6.function.ts","ng://ng6-json-schema-form/lib/shared/date.functions.ts","ng://ng6-json-schema-form/lib/shared/orderable.directive.ts","ng://ng6-json-schema-form/lib/widget-library/checkboxes.component.ts","ng://ng6-json-schema-form/lib/widget-library/file.component.ts","ng://ng6-json-schema-form/lib/widget-library/input.component.ts","ng://ng6-json-schema-form/lib/widget-library/message.component.ts","ng://ng6-json-schema-form/lib/widget-library/none.component.ts","ng://ng6-json-schema-form/lib/widget-library/number.component.ts","ng://ng6-json-schema-form/lib/widget-library/radios.component.ts","ng://ng6-json-schema-form/lib/widget-library/root.component.ts","ng://ng6-json-schema-form/lib/widget-library/section.component.ts","ng://ng6-json-schema-form/lib/widget-library/select.component.ts","ng://ng6-json-schema-form/lib/widget-library/select-framework.component.ts","ng://ng6-json-schema-form/lib/widget-library/select-widget.component.ts","ng://ng6-json-schema-form/lib/widget-library/submit.component.ts","ng://ng6-json-schema-form/lib/widget-library/tabs.component.ts","ng://ng6-json-schema-form/lib/widget-library/template.component.ts","ng://ng6-json-schema-form/lib/widget-library/textarea.component.ts","ng://ng6-json-schema-form/lib/widget-library/widget-library.service.ts","ng://ng6-json-schema-form/lib/framework-library/framework.ts","ng://ng6-json-schema-form/lib/framework-library/framework-library.service.ts","ng://ng6-json-schema-form/lib/json-schema-form.component.ts","ng://ng6-json-schema-form/lib/widget-library/hidden.component.ts","ng://ng6-json-schema-form/lib/widget-library/tab.component.ts","ng://ng6-json-schema-form/lib/widget-library/index.ts","ng://ng6-json-schema-form/lib/widget-library/widget-library.module.ts","ng://ng6-json-schema-form/lib/framework-library/no-framework/no-framework.component.ts","ng://ng6-json-schema-form/lib/framework-library/no-framework/no.framework.ts","ng://ng6-json-schema-form/lib/framework-library/no-framework/no-framework.module.ts","ng://ng6-json-schema-form/lib/json-schema-form.module.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-root.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-section.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-add-reference.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-one-of.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-button.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-button-group.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-checkbox.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-checkboxes.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-chip-list.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-datepicker.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-file.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-input.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-number.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-radios.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-select.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-slider.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-stepper.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-tabs.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-textarea.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.component.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-design.framework.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/index.ts","ng://ng6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.module.ts","ng://ng6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.component.ts","ng://ng6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3.framework.ts","ng://ng6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.module.ts","ng://ng6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.component.ts","ng://ng6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4.framework.ts","ng://ng6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","_executeValidators","control","validators","invert","map","validator","_executeAsyncValidators","_mergeObjects","objects","_i","mergedObject","objects_1","tslib_1.__values","objects_1_1","currentObject","isObject","_a","keys","_b","key","currentValue","mergedValue","isDefined","isBoolean","xor","getType","_mergeErrors","arrayOfErrors","mergedErrors","isEmpty","undefined","hasValue","isArray","isString","isNumber","strict","isNaN","isInteger","option","item","toString","isDate","isMap","isSet","isType","type","console","isPrimitive","toJavaScriptType","types","strictIntegers","inArray","parseInt","parseFloat","toISOString","slice","getTime","toSchemaType","includes","testValue","isPromise","object","then","isObservable","subscribe","toObservable","observable","from","Observable","array","allIn","subItem","value1","value2","addClasses","oldClasses","newClasses","badType","toSet","Set","split","combinedSet","forEach","c","add","join","copy","errors","Map","fn","recurse","rootObject","forEachCopy","newObject","hasOwn","property","has","mergeFilteredObject","targetObject","sourceObject","excludeKeys","keyFn","valFn","val","uniqueItems","items","returnItems","items_1","items_1_1","commonItems","arrays","filter","arrays_1","arrays_1_1","fixTitle","name","toTitleCase","replace","input","forceWords","forceArray","forceArrayLower","w","toLowerCase","noInitialCase","toUpperCase","prevLastChar","trim","word","idx","search","newWord","forceWord","indexOf","JsonPointer","get","pointer","startSlice","endSlice","getBoolean","keyArray","parse","subObject","keyArray_1","keyArray_1_1","getCopy","objectToCopy","forEachDeepCopy","getFirst","defaultValue","items_2","items_2_1","isJsonPointer","getFirstCopy","set","insert","match","lastKey","splice","setCopy","insertCopy","remove","pop","parentObject","dict","results","forEachDeep","bottomUp","v","newPointer","escape","unescape","compile","_this","toKey","every","test","isSubPointer","shortPointer","longPointer","trueIfMatching","invalid","toIndexedPointer","genericPointer","indexArray","arrayMap","indexedPointer_1","arrayIndex_1","stringIndex","indexArray_1","indexArray_1_1","pointerIndex","toGenericPointer","indexedPointer","pointerArray","subPointer","toControlPointer","dataPointer","formGroup","controlMustExist","dataPointerArray","controlPointerArray","subGroup","dataPointerArray_1","dataPointerArray_1_1","controls","toSchemaPointer","schema","firstKey","shift","properties","additionalProperties","arrayItem","additionalItems","toDataPointer","schemaPointer","pointerSuffix","secondKey","parseObjectPath","path","index","parts","nextDot","nextOB","quote","charAt","nextCB","RegExp","Injectable","mergeSchemas","schemas","some","combinedSchema","schemas_1","schemas_1_1","x","y","combinedValue","schemaValue","_.isEqual","allOf","item1","findIndex","item2","combinedObject","subKey","definitions","_d","_e","required","combinedDependency","schemaDependency","dependencies","gcd_1","multipleOf","Math","min","max","notAnyOf","reduce","notAnyOfArray","notSchema","anyOf","not","_g","_h","patternProperties","combinedObject_1","combinedKey","nonMatchingKey","_k","_l","combinedTypes","buildSchemaFromLayout","layout","buildSchemaFromData","data","requireAllFields","isRoot","newSchema","getFieldType","fieldType","integer","null","buildSubSchema","$schema","size","a","minItems","getFromSchema","returnType","subSchema","subSchemaFound","removeRecursiveReferences","recursiveRefMap","possibleReferences","toPointer","fromPointer","getInputType","layoutNode","controlType","checkInlineType","schemaType","maxItems","getTitleMapFromOneOf","color","date","date-time","email","uri","format","oneOf","isInputRequired","listPointerArray","keyName","nextToLastKey","parentSchema","updateInputOptions","jsf","options","newOptions","fixUiKeys","formOptions","defautWidgetOptions","newTitleMap","flatList","titleMap","enum","enumNames","typeahead","autocomplete","tagsinput","validateOnly","title","const","newTitleMap_1","group","getControlValidators","prop","ucLimit","eLimit","limit","exclusive","resolveSchemaReferences","schemaRefLibrary","schemaRecursiveRefMap","dataRecursiveRefMap","refLinks","refMapSet","refMap","refLibrary","subSchemaPointer","refPointer","ref","getSubSchema","checkRefLinks","fromRef1","toRef1","fromRef2","toRef2","refLink","fromRef","toRef","compiledSchema","$ref","fromDataRef","toDataRef","tupleItems","usedPointers","_.cloneDeep","refPointer_1","ptr","refSchema","extraKeys","combineAllOf","fixRequiredArrayProperties","mergedSchema","itemsObject_1","jsonSchemaFormatTests","time","hostname","ipv4","ipv6","uri-reference","uri-template","url","uuid","json-pointer","relative-json-pointer","regex","str","JsonValidators","nullValidator","requiredType","allowedValues","isEqual","enumValue","inputValue","requiredValue","constValue","minLength","minimumLength","currentLength","maxLength","maximumLength","pattern","wholeString","requiredPattern","requiredFormat","isValid","formatTest","minimum","minimumValue","exclusiveMinimum","exclusiveMinimumValue","maximum","maximumValue","exclusiveMaximum","exclusiveMaximumValue","multipleOfValue","minProperties","minimumProperties","currentProperties","maxProperties","maximumProperties","allErrors","requiringField","requiredFields","requiringFieldErrors","requiredFields_1","requiredFields_1_1","requiredField","requirements","requiredFieldErrors","requirement","parameter","minimumItems","currentItems","maximumItems","unique","sorted","sort","duplicateItems","contains","requiredItem","composeAnyOf","presentValidators","composeOneOf","arrayOfValids","composeAllOf","combinedErrors","composeNot","compose","composeAsync","observables","forkJoin","actual","requiredTrue","buildFormGroupTemplate","nodeValue","setValues","templatePointer","setSchemaDefaults","formValues","shortDataPointer","dataMap","nodeOptions","propertyKeys_1","unnamedKeys","fieldsRequired","setRequiredFields","additionalItemsPointer","schemaRefPointer","itemRecursive","itemRefPointer","templateRefLibrary","itemOptions","arrayLength","schemaRef","newTemplate","disabled","buildFormGroup","template","validatorFns","validatorFn","parameters","groupControls_1","newControl","FormGroup","FormArray","_.filter","_.map","FormControl","formControlTemplate","requiredArray","formatFormData","formData","returnEmptyFields","fixErrors","formattedData","genericPointer_1","newValue","keySchemaType","getControl","returnGroup","formControl","buildLayout","widgetLibrary","hasSubmitButton","formLayout","mapLayout","layoutItem","layoutPointer","newNode","_id","_.uniqueId","widget","legend","validationMessages","errorMessages","validationMessage","code","newKey","nodeSchema","findDataPointer_1","searchItem","childDataPointer","lastIndexOf","buildLayoutFromSchema","LastKey","recursive_1","nodeDataMap","hasWidget","oldWidgetType","dataType","listItems","copyValueTo","getWidget","itemRefPointer_1","arrayItemGroup","unshift","arrayItemType","removable","orderable","arrayListItems","layoutRefLibrary","recursiveReference","getLayoutNode","addable","buttonText","fieldStyle","style","parentType","hasRootReference","fullLayout","forRefLibrary","dataPointerPrefix","newNodeType","lastDataKey","newSection_1","keySchemaPointer","innerItem","additionalItemsSchemaPointer","newItem","itemSchemaPointer","prefix","dataRef","newLayout","rootLayout","indexPad","realIndex","newLayoutPointer","itemsArray","tabs","refNode","newLayoutNode","subNode","buildTitleMap","enumList","fieldRequired","hasEmptyValue","name_1","name_2","name_3","name_4","name_5","groupTitleMap","enValidationMessages","log10","frValidationMessages","JsonSchemaFormService","jsonPointers","unknownFormats","Ajv","ajvOptions","Subject","","addSubmit","debug","disableInvalidSubmit","formDisabled","formReadonly","framework","loadExternalAssets","pristine","success","supressPropertyTitles","setLayoutDefaults","validateOnRender","widgets","enableErrorState","enableSuccessState","feedback","feedbackOnRender","notitle","readonly","setLanguage","language","defaultFormOptions","getData","getSchema","getLayout","resetAllValues","JsonFormCompatibility","ReactJsonSchemaFormCompatibility","AngularSchemaFormCompatibility","tpldata","validateFormData","formGroupTemplate","validData","validationErrors","buildRemoteError","value_1","value_1_1","err","setErrors","emitEvent","validateData","updateSubscriptions","compiledErrors","ajvErrors","dataPath","message","dataChanges","isValidChanges","validationErrorChanges","compileAjvSchema","formValueSubscription","unsubscribe","valueChanges","formValue","setOptions","addOptions","defaultOptions","globalDefaults_1","suffix","ajv","removeSchema","setTpldata","newTpldata","parseText","text","values","parseExpression","expression","delim","all","term","setArrayItemTitle","parentCtx","childNode","parentNode","parentValues","getFormControlValue","isArrayItem","childValue","setItemTitle","ctx","getFormControlGroup","dataIndex","evaluateCondition","arrayIndex","result","condition","model","functionBody","Function","dynFn","initializeControl","bind","getFormControl","boundControl","controlName","getFormControlName","controlValue","controlDisabled","errorMessage","status","formatErrors","showErrors","statusChanges","getDataPointer","addSpaces","string","formatError","errorKey","errorProperty","updateValue","setValue","markAsDirty","targetControl","updateArrayCheckboxList","checkboxList","formArray","removeAt","checkboxList_1","checkboxList_1_1","checkboxItem","checked","newFormControl","getLayoutArray","getLayoutPointer","getParentNode","layoutIndex","isControlBound","controlGroup","addItem","newFormGroup","addControl","moveArrayItem","oldIndex","newIndex","at","updateValueAndValidity","layoutArray","removeItem","removeControl","AddReferenceComponent","ngOnInit","defineProperty","event","preventDefault","parent","itemCount","Component","args","selector","changeDetection","ChangeDetectionStrategy","Default","Input","OneOfComponent","target","ButtonComponent","onClick","CheckboxComponent","trueValue","falseValue","convertSchemaToDraft6","draft","changed","simpleTypes","contentEncoding","media","binaryEncoding","extends","disallow","maxDecimal","pow","divisibleBy","minimumCanEqual","maximumCanEqual","properties_1","requiredKeys_1","optional","requires","dependencies_1","id","$id","addToDescription","description","arrayKeys","numberKeys","objectKeys","stringKeys","filterKeys_1","number","newType","tslib_1.__spread","default","typeSchema","newKey_1","dateToString","dateFormat","stringToDate","getFullYear","getMonth","getDay","getDate","last","1","2","3","ordinal","dateString","findDate","dateParts","part","thisYear","Date","year","foundDate","OrderableDirective","elementRef","ngZone","element","nativeElement","draggable","arrayLayoutIndex","runOutsideAngular","addEventListener","dataTransfer","effectAllowed","sourceArrayIndex","sessionStorage","setItem","dropEffect","overParentElement","overChildElement","getItem","classList","destArrayIndex","Directive","ElementRef","NgZone","CheckboxesComponent","layoutOrientation","formArray_1","FileComponent","InputComponent","MessageComponent","help","helpvalue","msg","NoneComponent","NumberComponent","allowDecimal","RadiosComponent","radiosList","RootComponent","isDraggable","node","isOrderable","getFlexAttribute","attribute","flex","showWidget","styles","SectionComponent","expanded","expandable","containerType","toggleExpanded","flexActive","displayFlex","display","SelectComponent","selectList","SelectFrameworkComponent","componentFactory","updateComponent","ngOnChanges","newComponent","widgetContainer","createComponent","resolveComponentFactory","instance","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","SelectWidgetComponent","SubmitComponent","TabsComponent","updateControl","select","selectedItem","lastItem","showAddTab","setTabTitle","TemplateComponent","TextareaComponent","WidgetLibraryService","none","root","select-framework","select-widget","password","tel","datetime","datetime-local","month","range","week","checkbox","file","hidden","image","radio","reset","submit","button","textarea","checkboxes","checkboxes-inline","checkboxbuttons","radios","radios-inline","radiobuttons","section","div","fieldset","one-of","tabarray","tab","html","advancedfieldset","authfieldset","optionfieldset","selectfieldset","conditional","actions","updown","alt-datetime","alt-date","wizard","textline","setActiveWidgets","activeWidgets","frameworkWidgets","registeredWidgets","widgetName","usedAliases","setDefaultWidget","defaultWidget","widgetSet","hasDefaultWidget","registerWidget","unRegisterWidget","unRegisterAllWidgets","unRegisterFrameworkWidgets","registerFrameworkWidgets","getAllWidgets","Framework","FrameworkLibraryService","frameworks","frameworkLibrary","defaultFramework","setFramework","setLoadExternalAssets","activeFramework","hasFramework","getFramework","getFrameworkWidgets","getFrameworkStylesheets","load","stylesheets","getFrameworkScripts","scripts","Inject","decorators","JSON_SCHEMA_FORM_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","JsonSchemaFormComponent","multi","changeDetector","sanitizer","form","JSONSchema","UISchema","EventEmitter","objectWrap","setFormValues","bypassSecurityTrustResourceUrl","stylesheet","script","updateForm","writeValue","formValuesInput","registerOnChange","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","initializeForm","formInitialized","changedInput","previousInputs","resetFirst","startsWith","newFormValues","activateForm","patchValue","submitForm","onSubmit","emit","ngModel","initializeOptions","initializeSchema","initializeLayout","initializeData","debugOutput","JSON","stringify","fixJsonFormOptions","alternateLayout","uiSchema","customFormItems","groupPointer","itemPointer","onChanges","markForCheck","formSchema","validateOnRender_1","touchAll_1","markAsTouched","OnPush","providers","ChangeDetectorRef","DomSanitizer","Output","HiddenComponent","TabComponent","BASIC_WIDGETS","WidgetLibraryModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","declarations","exports","entryComponents","NoFrameworkComponent","tslib_1.__extends","NoFrameworkModule","useClass","NoFramework","JsonSchemaFormModule","loadFrameworks","FlexLayoutRootComponent","FlexLayoutSectionComponent","fxLayout","fxLayoutWrap","MaterialAddReferenceComponent","MaterialOneOfComponent","MaterialButtonComponent","MaterialButtonGroupComponent","MaterialCheckboxComponent","showSlideToggle","MaterialCheckboxesComponent","horizontalList","checkedItems","updateAllValues","MaterialChipListComponent","MaterialDatepickerComponent","setControlDate","placeholder","dateValue","MaterialFileComponent","MaterialInputComponent","MaterialNumberComponent","MaterialRadiosComponent","flexDirection","MaterialSelectComponent","MaterialSliderComponent","MaterialStepperComponent","MaterialTabsComponent","MaterialTextareaComponent","MaterialDesignFrameworkComponent","widgetOptions","parentArray","initializeFramework","frameworkInitialized","dynamicTitle","updateTitle","widgetLayoutNode","button-group","chip-list","slider","stepper","any-of","card","expansion-panel","MATERIAL_FRAMEWORK_COMPONENTS","ANGULAR_MATERIAL_MODULES","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatExpansionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatNativeDateModule","MatRadioModule","MatSelectModule","MatSliderModule","MatSlideToggleModule","MatStepperModule","MatTabsModule","MatTooltipModule","MaterialDesignFrameworkModule","MaterialDesignFramework","FlexLayoutModule","Bootstrap3FrameworkComponent","isInputWidget","setTitle","htmlClass","labelHtmlClass","activeClass","fieldAddonLeft","prepend","fieldAddonRight","append","itemLabelHtmlClass","fieldHtmlClass","messageLocation","icon","updateHelpBlock","thisVar","helpBlock","dirty","Bootstrap3FrameworkModule","Bootstrap3Framework","Bootstrap4FrameworkComponent","Bootstrap4FrameworkModule","Bootstrap4Framework","toPromise"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Observable, from } from 'rxjs';\n\n/**\n * Validator utility function library:\n *\n * Validator and error utilities:\n *   _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors\n *\n * Individual value checking:\n *   isDefined, hasValue, isEmpty\n *\n * Individual type checking:\n *   isString, isNumber, isInteger, isBoolean, isFunction, isObject, isArray,\n *   isMap, isSet, isPromise, isObservable\n *\n * Multiple type checking and fixing:\n *   getType, isType, isPrimitive, toJavaScriptType, toSchemaType,\n *   _toPromise, toObservable\n *\n * Utility functions:\n *   inArray, xor\n *\n * Typescript types and interfaces:\n *   SchemaPrimitiveType, SchemaType, JavaScriptPrimitiveType, JavaScriptType,\n *   PrimitiveValue, PlainObject, IValidatorFn, AsyncIValidatorFn\n *\n * Note: 'IValidatorFn' is short for 'invertable validator function',\n *   which is a validator functions that accepts an optional second\n *   argument which, if set to TRUE, causes the validator to perform\n *   the opposite of its original function.\n */\n\nexport type SchemaPrimitiveType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null';\nexport type SchemaType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null' | 'object' | 'array';\nexport type JavaScriptPrimitiveType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined';\nexport type JavaScriptType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined' | 'object' | 'array' |\n  'map' | 'set' | 'arguments' | 'date' | 'error' | 'function' | 'json' |\n  'math' | 'regexp'; // Note: this list is incomplete\nexport type PrimitiveValue = string | number | boolean | null | undefined;\nexport interface PlainObject { [k: string]: any; }\n\nexport type IValidatorFn = (c: AbstractControl, i?: boolean) => PlainObject;\nexport type AsyncIValidatorFn = (c: AbstractControl, i?: boolean) => any;\n\n/**\n * '_executeValidators' utility function\n *\n * Validates a control against an array of validators, and returns\n * an array of the same length containing a combination of error messages\n * (from invalid validators) and null values (from valid validators)\n *\n * //  { AbstractControl } control - control to validate\n * //  { IValidatorFn[] } validators - array of validators\n * //  { boolean } invert - invert?\n * // { PlainObject[] } - array of nulls and error message\n */\nexport function _executeValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_executeAsyncValidators' utility function\n *\n * Validates a control against an array of async validators, and returns\n * an array of observabe results of the same length containing a combination of\n * error messages (from invalid validators) and null values (from valid ones)\n *\n * //  { AbstractControl } control - control to validate\n * //  { AsyncIValidatorFn[] } validators - array of async validators\n * //  { boolean } invert - invert?\n * //  - array of observable nulls and error message\n */\nexport function _executeAsyncValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_mergeObjects' utility function\n *\n * Recursively Merges one or more objects into a single object with combined keys.\n * Automatically detects and ignores null and undefined inputs.\n * Also detects duplicated boolean 'not' keys and XORs their values.\n *\n * //  { PlainObject[] } objects - one or more objects to merge\n * // { PlainObject } - merged object\n */\nexport function _mergeObjects(...objects) {\n  const mergedObject: PlainObject = { };\n  for (const currentObject of objects) {\n    if (isObject(currentObject)) {\n      for (const key of Object.keys(currentObject)) {\n        const currentValue = currentObject[key];\n        const mergedValue = mergedObject[key];\n        mergedObject[key] = !isDefined(mergedValue) ? currentValue :\n          key === 'not' && isBoolean(mergedValue, 'strict') &&\n            isBoolean(currentValue, 'strict') ? xor(mergedValue, currentValue) :\n          getType(mergedValue) === 'object' && getType(currentValue) === 'object' ?\n            _mergeObjects(mergedValue, currentValue) :\n            currentValue;\n      }\n    }\n  }\n  return mergedObject;\n}\n\n/**\n * '_mergeErrors' utility function\n *\n * Merges an array of objects.\n * Used for combining the validator errors returned from 'executeValidators'\n *\n * //  { PlainObject[] } arrayOfErrors - array of objects\n * // { PlainObject } - merged object, or null if no usable input objectcs\n */\nexport function _mergeErrors(arrayOfErrors) {\n  const mergedErrors = _mergeObjects(...arrayOfErrors);\n  return isEmpty(mergedErrors) ? null : mergedErrors;\n}\n\n/**\n * 'isDefined' utility function\n *\n * Checks if a variable contains a value of any type.\n * Returns true even for otherwise 'falsey' values of 0, '', and false.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined or null, otherwise true\n */\nexport function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * 'hasValue' utility function\n *\n * Checks if a variable contains a value.\n * Returs false for null, undefined, or a zero-length strng, '',\n * otherwise returns true.\n * (Stricter than 'isDefined' because it also returns false for '',\n * though it stil returns true for otherwise 'falsey' values 0 and false.)\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function hasValue(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\n/**\n * 'isEmpty' utility function\n *\n * Similar to !hasValue, but also returns true for empty arrays and objects.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function isEmpty(value) {\n  if (isArray(value)) { return !value.length; }\n  if (isObject(value)) { return !Object.keys(value).length; }\n  return value === undefined || value === null || value === '';\n}\n\n/**\n * 'isString' utility function\n *\n * Checks if a value is a string.\n *\n * //   value - the value to check\n * // { boolean } - true if string, false if not\n */\nexport function isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * 'isNumber' utility function\n *\n * Checks if a value is a regular number, numeric string, or JavaScript Date.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { boolean } - true if number, false if not\n */\nexport function isNumber(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) && value !== value / 0;\n}\n\n/**\n * 'isInteger' utility function\n *\n * Checks if a value is an integer.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // {boolean } - true if number, false if not\n */\nexport function isInteger(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) &&  value !== value / 0 && value % 1 === 0;\n}\n\n/**\n * 'isBoolean' utility function\n *\n * Checks if a value is a boolean.\n *\n * //   value - the value to check\n * //  { any = null } option - if 'strict', also checks JavaScript type\n *                              if TRUE or FALSE, checks only for that value\n * // { boolean } - true if boolean, false if not\n */\nexport function isBoolean(value, option: any = null) {\n  if (option === 'strict') { return value === true || value === false; }\n  if (option === true) {\n    return value === true || value === 1 || value === 'true' || value === '1';\n  }\n  if (option === false) {\n    return value === false || value === 0 || value === 'false' || value === '0';\n  }\n  return value === true || value === 1 || value === 'true' || value === '1' ||\n    value === false || value === 0 || value === 'false' || value === '0';\n}\n\nexport function isFunction(item: any): boolean {\n  return typeof item === 'function';\n}\n\nexport function isObject(item: any): boolean {\n  return item !== null && typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Object]';\n}\n\nexport function isArray(item: any): boolean {\n  return Array.isArray(item) ||\n    Object.prototype.toString.call(item) === '[object Array]';\n}\n\nexport function isDate(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Date]';\n}\n\nexport function isMap(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Map]';\n}\n\nexport function isSet(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Set]';\n}\n\nexport function isSymbol(item: any): boolean {\n  return typeof item === 'symbol';\n}\n\n/**\n * 'getType' function\n *\n * Detects the JSON Schema Type of a value.\n * By default, detects numbers and integers even if formatted as strings.\n * (So all integers are also numbers, and any number may also be a string.)\n * However, it only detects true boolean values (to detect boolean values\n * in non-boolean formats, use isBoolean() instead).\n *\n * If passed a second optional parameter of 'strict', it will only detect\n * numbers and integers if they are formatted as JavaScript numbers.\n *\n * Examples:\n * getType('10.5') = 'number'\n * getType(10.5) = 'number'\n * getType('10') = 'integer'\n * getType(10) = 'integer'\n * getType('true') = 'string'\n * getType(true) = 'boolean'\n * getType(null) = 'null'\n * getType({ }) = 'object'\n * getType([]) = 'array'\n *\n * getType('10.5', 'strict') = 'string'\n * getType(10.5, 'strict') = 'number'\n * getType('10', 'strict') = 'string'\n * getType(10, 'strict') = 'integer'\n * getType('true', 'strict') = 'string'\n * getType(true, 'strict') = 'boolean'\n *\n * //   value - value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { SchemaType }\n */\nexport function getType(value, strict: any = false) {\n  if (!isDefined(value)) { return 'null'; }\n  if (isArray(value)) { return 'array'; }\n  if (isObject(value)) { return 'object'; }\n  if (isBoolean(value, 'strict')) { return 'boolean'; }\n  if (isInteger(value, strict)) { return 'integer'; }\n  if (isNumber(value, strict)) { return 'number'; }\n  if (isString(value) || (!strict && isDate(value))) { return 'string'; }\n  return null;\n}\n\n/**\n * 'isType' function\n *\n * Checks wether an input (probably string) value contains data of\n * a specified JSON Schema type\n *\n * //  { PrimitiveValue } value - value to check\n * //  { SchemaPrimitiveType } type - type to check\n * // { boolean }\n */\nexport function isType(value, type) {\n  switch (type) {\n    case 'string':\n      return isString(value) || isDate(value);\n    case 'number':\n      return isNumber(value);\n    case 'integer':\n      return isInteger(value);\n    case 'boolean':\n      return isBoolean(value);\n    case 'null':\n      return !hasValue(value);\n    default:\n      console.error(`isType error: \"${type}\" is not a recognized type.`);\n      return null;\n  }\n}\n\n/**\n * 'isPrimitive' function\n *\n * Checks wether an input value is a JavaScript primitive type:\n * string, number, boolean, or null.\n *\n * //   value - value to check\n * // { boolean }\n */\nexport function isPrimitive(value) {\n  return (isString(value) || isNumber(value) ||\n    isBoolean(value, 'strict') || value === null);\n}\n\n/**\n * 'toJavaScriptType' function\n *\n * Converts an input (probably string) value to a JavaScript primitive type -\n * 'string', 'number', 'boolean', or 'null' - before storing in a JSON object.\n *\n * Does not coerce values (other than null), and only converts the types\n * of values that would otherwise be valid.\n *\n * If the optional third parameter 'strictIntegers' is TRUE, and the\n * JSON Schema type 'integer' is specified, it also verifies the input value\n * is an integer and, if it is, returns it as a JaveScript number.\n * If 'strictIntegers' is FALSE (or not set) the type 'integer' is treated\n * exactly the same as 'number', and allows decimals.\n *\n * Valid Examples:\n * toJavaScriptType('10',   'number' ) = 10   // '10'   is a number\n * toJavaScriptType('10',   'integer') = 10   // '10'   is also an integer\n * toJavaScriptType( 10,    'integer') = 10   //  10    is still an integer\n * toJavaScriptType( 10,    'string' ) = '10' //  10    can be made into a string\n * toJavaScriptType('10.5', 'number' ) = 10.5 // '10.5' is a number\n *\n * Invalid Examples:\n * toJavaScriptType('10.5', 'integer') = null // '10.5' is not an integer\n * toJavaScriptType( 10.5,  'integer') = null //  10.5  is still not an integer\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - types to convert to\n * //  { boolean = false } strictIntegers - if FALSE, treat integers as numbers\n * // { PrimitiveValue }\n */\nexport function toJavaScriptType(value, types, strictIntegers = true)  {\n  if (!isDefined(value)) { return null; }\n  if (isString(types)) { types = [types]; }\n  if (strictIntegers && inArray('integer', types)) {\n    if (isInteger(value, 'strict')) { return value; }\n    if (isInteger(value)) { return parseInt(value, 10); }\n  }\n  if (inArray('number', types) || (!strictIntegers && inArray('integer', types))) {\n    if (isNumber(value, 'strict')) { return value; }\n    if (isNumber(value)) { return parseFloat(value); }\n  }\n  if (inArray('string', types)) {\n    if (isString(value)) { return value; }\n    // If value is a date, and types includes 'string',\n    // convert the date to a string\n    if (isDate(value)) { return value.toISOString().slice(0, 10); }\n    if (isNumber(value)) { return value.toString(); }\n  }\n  // If value is a date, and types includes 'integer' or 'number',\n  // but not 'string', convert the date to a number\n  if (isDate(value) && (inArray('integer', types) || inArray('number', types))) {\n    return value.getTime();\n  }\n  if (inArray('boolean', types)) {\n    if (isBoolean(value, true)) { return true; }\n    if (isBoolean(value, false)) { return false; }\n  }\n  return null;\n}\n\n/**\n * 'toSchemaType' function\n *\n * Converts an input (probably string) value to the \"best\" JavaScript\n * equivalent available from an allowed list of JSON Schema types, which may\n * contain 'string', 'number', 'integer', 'boolean', and/or 'null'.\n * If necssary, it does progressively agressive type coersion.\n * It will not return null unless null is in the list of allowed types.\n *\n * Number conversion examples:\n * toSchemaType('10', ['number','integer','string']) = 10 // integer\n * toSchemaType('10', ['number','string']) = 10 // number\n * toSchemaType('10', ['string']) = '10' // string\n * toSchemaType('10.5', ['number','integer','string']) = 10.5 // number\n * toSchemaType('10.5', ['integer','string']) = '10.5' // string\n * toSchemaType('10.5', ['integer']) = 10 // integer\n * toSchemaType(10.5, ['null','boolean','string']) = '10.5' // string\n * toSchemaType(10.5, ['null','boolean']) = true // boolean\n *\n * String conversion examples:\n * toSchemaType('1.5x', ['boolean','number','integer','string']) = '1.5x' // string\n * toSchemaType('1.5x', ['boolean','number','integer']) = '1.5' // number\n * toSchemaType('1.5x', ['boolean','integer']) = '1' // integer\n * toSchemaType('1.5x', ['boolean']) = true // boolean\n * toSchemaType('xyz', ['number','integer','boolean','null']) = true // boolean\n * toSchemaType('xyz', ['number','integer','null']) = null // null\n * toSchemaType('xyz', ['number','integer']) = 0 // number\n *\n * Boolean conversion examples:\n * toSchemaType('1', ['integer','number','string','boolean']) = 1 // integer\n * toSchemaType('1', ['number','string','boolean']) = 1 // number\n * toSchemaType('1', ['string','boolean']) = '1' // string\n * toSchemaType('1', ['boolean']) = true // boolean\n * toSchemaType('true', ['number','string','boolean']) = 'true' // string\n * toSchemaType('true', ['boolean']) = true // boolean\n * toSchemaType('true', ['number']) = 0 // number\n * toSchemaType(true, ['number','string','boolean']) = true // boolean\n * toSchemaType(true, ['number','string']) = 'true' // string\n * toSchemaType(true, ['number']) = 1 // number\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - allowed types to convert to\n * // { PrimitiveValue }\n */\nexport function toSchemaType(value, types) {\n  if (!isArray(<SchemaPrimitiveType>types)) {\n    types = <SchemaPrimitiveType[]>[types];\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('null') && !hasValue(value)) {\n    return null;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && !isBoolean(value, 'strict')) {\n    return value;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) {\n    const testValue = toJavaScriptType(value, 'integer');\n    if (testValue !== null) { return +testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) {\n    const testValue = toJavaScriptType(value, 'number');\n    if (testValue !== null) { return +testValue; }\n  }\n  if (\n    (isString(value) || isNumber(value, 'strict')) &&\n    (<SchemaPrimitiveType[]>types).includes('string')\n  ) { // Convert number to string\n    return toJavaScriptType(value, 'string');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && isBoolean(value)) {\n    return toJavaScriptType(value, 'boolean');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('string')) { // Convert null & boolean to string\n    if (value === null) { return ''; }\n    const testValue = toJavaScriptType(value, 'string');\n    if (testValue !== null) { return testValue; }\n  }\n  if ((\n    (<SchemaPrimitiveType[]>types).includes('number') ||\n    (<SchemaPrimitiveType[]>types).includes('integer'))\n  ) {\n    if (value === true) { return 1; } // Convert boolean & null to number\n    if (value === false || value === null || value === '') { return 0; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) { // Convert mixed string to number\n    const testValue = parseFloat(<string>value);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) { // Convert string or number to integer\n    const testValue = parseInt(<string>value, 10);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean')) { // Convert anything to boolean\n    return !!value;\n  }\n  if ((\n      (<SchemaPrimitiveType[]>types).includes('number') ||\n      (<SchemaPrimitiveType[]>types).includes('integer')\n    ) && !(<SchemaPrimitiveType[]>types).includes('null')\n  ) {\n    return 0; // If null not allowed, return 0 for non-convertable values\n  }\n}\n\n/**\n * 'isPromise' function\n *\n * //   object\n * // { boolean }\n */\nexport function isPromise(object): object is Promise<any> {\n  return !!object && typeof object.then === 'function';\n}\n\n/**\n * 'isObservable' function\n *\n * //   object\n * // { boolean }\n */\nexport function isObservable(object): object is Observable<any> {\n  return !!object && typeof object.subscribe === 'function';\n}\n\n/**\n * '_toPromise' function\n *\n * //  { object } object\n * // { Promise<any> }\n */\nexport function _toPromise(object): Promise<any> {\n  return isPromise(object) ? object : object.toPromise();\n}\n\n/**\n * 'toObservable' function\n *\n * //  { object } object\n * // { Observable<any> }\n */\nexport function toObservable(object): Observable<any> {\n  const observable = isPromise(object) ? from(object) : object;\n  if (isObservable(observable)) { return observable; }\n  console.error('toObservable error: Expected validator to return Promise or Observable.');\n  return new Observable();\n}\n\n/**\n * 'inArray' function\n *\n * Searches an array for an item, or one of a list of items, and returns true\n * as soon as a match is found, or false if no match.\n *\n * If the optional third parameter allIn is set to TRUE, and the item to find\n * is an array, then the function returns true only if all elements from item\n * are found in the array list, and false if any element is not found. If the\n * item to find is not an array, setting allIn to TRUE has no effect.\n *\n * //  { any|any[] } item - the item to search for\n * //   array - the array to search\n * //  { boolean = false } allIn - if TRUE, all items must be in array\n * // { boolean } - true if item(s) in array, false otherwise\n */\nexport function inArray(item, array, allIn = false) {\n  if (!isDefined(item) || !isArray(array)) { return false; }\n  return isArray(item) ?\n    item[allIn ? 'every' : 'some'](subItem => array.includes(subItem)) :\n    array.includes(item);\n}\n\n/**\n * 'xor' utility function - exclusive or\n *\n * Returns true if exactly one of two values is truthy.\n *\n * //   value1 - first value to check\n * //   value2 - second value to check\n * // { boolean } - true if exactly one input value is truthy, false if not\n */\nexport function xor(value1, value2) {\n  return (!!value1 && !value2) || (!value1 && !!value2);\n}\n","import {\n  hasValue, inArray, isArray, isDefined, isObject, isEmpty, isMap, isSet,\n  isString, PlainObject\n} from './validator.functions';\n\n/**\n * Utility function library:\n *\n * addClasses, copy, forEach, forEachCopy, hasOwn, mergeFilteredObject,\n * uniqueItems, commonItems, fixTitle, toTitleCase\n*/\n\n/**\n * 'addClasses' function\n *\n * Merges two space-delimited lists of CSS classes and removes duplicates.\n *\n * // {string | string[] | Set<string>} oldClasses\n * // {string | string[] | Set<string>} newClasses\n * // {string | string[] | Set<string>} - Combined classes\n */\nexport function addClasses(\n  oldClasses: string | string[] | Set<string>,\n  newClasses: string | string[] | Set<string>\n): string | string[] | Set<string> {\n  const badType = i => !isSet(i) && !isArray(i) && !isString(i);\n  if (badType(newClasses)) { return oldClasses; }\n  if (badType(oldClasses)) { oldClasses = ''; }\n  const toSet = i => isSet(i) ? i : isArray(i) ? new Set(i) : new Set(i.split(' '));\n  const combinedSet: Set<any> = toSet(oldClasses);\n  const newSet: Set<any> = toSet(newClasses);\n  newSet.forEach(c => combinedSet.add(c));\n  if (isSet(oldClasses)) { return combinedSet; }\n  if (isArray(oldClasses)) { return Array.from(combinedSet); }\n  return Array.from(combinedSet).join(' ');\n}\n\n/**\n * 'copy' function\n *\n * Makes a shallow copy of a JavaScript object, array, Map, or Set.\n * If passed a JavaScript primitive value (string, number, boolean, or null),\n * it returns the value.\n *\n * // {Object|Array|string|number|boolean|null} object - The object to copy\n * // {boolean = false} errors - Show errors?\n * // {Object|Array|string|number|boolean|null} - The copied object\n */\nexport function copy(object: any, errors = false): any {\n  if (typeof object !== 'object' || object === null) { return object; }\n  if (isMap(object))    { return new Map(object); }\n  if (isSet(object))    { return new Set(object); }\n  if (isArray(object))  { return [ ...object ];   }\n  if (isObject(object)) { return { ...object };   }\n  if (errors) {\n    console.error('copy error: Object to copy must be a JavaScript object or value.');\n  }\n  return object;\n}\n\n/**\n * 'forEach' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator funciton on each item.\n *\n * The iterator function is called with four values:\n * 1. The current item's value\n * 2. The current item's key\n * 3. The parent object, which contains the current item\n * 4. The root object\n *\n * Setting the optional third parameter to 'top-down' or 'bottom-up' will cause\n * it to also recursively iterate over items in sub-objects or sub-arrays in the\n * specified direction.\n *\n * // {Object|Array} object - The object or array to iterate over\n * // {function} fn - the iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {void}\n */\nexport function forEach(\n  object: any, fn: (v: any, k?: string | number, c?: any, rc?: any) => any,\n  recurse: boolean | string = false, rootObject: any = object, errors = false\n): void {\n  if (isEmpty(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof fn === 'function') {\n    for (const key of Object.keys(object)) {\n      const value = object[key];\n      if (recurse === 'bottom-up' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n      fn(value, key, object, rootObject);\n      if (recurse === 'top-down' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n    }\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEach error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEach error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'forEachCopy' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator function on each item. Returns a new object or array\n * with the same keys or indexes as the original, and values set to the results\n * of the iterator function.\n *\n * Does NOT recursively iterate over items in sub-objects or sub-arrays.\n *\n * // {Object | Array} object - The object or array to iterate over\n * // {function} fn - The iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {Object | Array} - The resulting object or array\n */\nexport function forEachCopy(\n  object: any, fn: (v: any, k?: string | number, o?: any, p?: string) => any,\n  errors = false\n): any {\n  if (!hasValue(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof object !== 'function') {\n    const newObject: any = isArray(object) ? [] : {};\n    for (const key of Object.keys(object)) {\n      newObject[key] = fn(object[key], key, object);\n    }\n    return newObject;\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEachCopy error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEachCopy error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'hasOwn' utility function\n *\n * Checks whether an object or array has a particular property.\n *\n * // {any} object - the object to check\n * // {string} property - the property to look for\n * // {boolean} - true if object has property, false if not\n */\nexport function hasOwn(object: any, property: string): boolean {\n  if (!object || !['number', 'string', 'symbol'].includes(typeof property) ||\n    (!isObject(object) && !isArray(object) && !isMap(object) && !isSet(object))\n  ) { return false; }\n  if (isMap(object) || isSet(object)) { return object.has(property); }\n  if (typeof property === 'number') {\n    if (isArray(object)) { return object[<number>property]; }\n    property = property + '';\n  }\n  return object.hasOwnProperty(property);\n}\n\n/**\n * 'mergeFilteredObject' utility function\n *\n * Shallowly merges two objects, setting key and values from source object\n * in target object, excluding specified keys.\n *\n * Optionally, it can also use functions to transform the key names and/or\n * the values of the merging object.\n *\n * // {PlainObject} targetObject - Target object to add keys and values to\n * // {PlainObject} sourceObject - Source object to copy keys and values from\n * // {string[]} excludeKeys - Array of keys to exclude\n * // {(string: string) => string = (k) => k} keyFn - Function to apply to keys\n * // {(any: any) => any = (v) => v} valueFn - Function to apply to values\n * // {PlainObject} - Returns targetObject\n */\nexport function mergeFilteredObject(\n  targetObject: PlainObject,\n  sourceObject: PlainObject,\n  excludeKeys = <string[]>[],\n  keyFn = (key: string): string => key,\n  valFn = (val: any): any => val\n): PlainObject {\n  if (!isObject(sourceObject)) { return targetObject; }\n  if (!isObject(targetObject)) { targetObject = {}; }\n  for (const key of Object.keys(sourceObject)) {\n    if (!inArray(key, excludeKeys) && isDefined(sourceObject[key])) {\n      targetObject[keyFn(key)] = valFn(sourceObject[key]);\n    }\n  }\n  return targetObject;\n}\n\n/**\n * 'uniqueItems' function\n *\n * Accepts any number of string value inputs,\n * and returns an array of all input vaues, excluding duplicates.\n *\n * // {...string} ...items -\n * // {string[]} -\n */\nexport function uniqueItems(...items): string[] {\n  const returnItems = [];\n  for (const item of items) {\n    if (!returnItems.includes(item)) { returnItems.push(item); }\n  }\n  return returnItems;\n}\n\n/**\n * 'commonItems' function\n *\n * Accepts any number of strings or arrays of string values,\n * and returns a single array containing only values present in all inputs.\n *\n * // {...string|string[]} ...arrays -\n * // {string[]} -\n */\nexport function commonItems(...arrays): string[] {\n  let returnItems = null;\n  for (let array of arrays) {\n    if (isString(array)) { array = [array]; }\n    returnItems = returnItems === null ? [ ...array ] :\n      returnItems.filter(item => array.includes(item));\n    if (!returnItems.length) { return []; }\n  }\n  return returnItems;\n}\n\n/**\n * 'fixTitle' function\n *\n *\n * // {string} input -\n * // {string} -\n */\nexport function fixTitle(name: string): string {\n  return name && toTitleCase(name.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' '));\n}\n\n/**\n * 'toTitleCase' function\n *\n * Intelligently converts an input string to Title Case.\n *\n * Accepts an optional second parameter with a list of additional\n * words and abbreviations to force into a particular case.\n *\n * This function is built on prior work by John Gruber and David Gouch:\n * http://daringfireball.net/2008/08/title_case_update\n * https://github.com/gouch/to-title-case\n *\n * // {string} input -\n * // {string|string[]} forceWords? -\n * // {string} -\n */\nexport function toTitleCase(input: string, forceWords?: string|string[]): string {\n  if (!isString(input)) { return input; }\n  let forceArray: string[] = ['a', 'an', 'and', 'as', 'at', 'but', 'by', 'en',\n   'for', 'if', 'in', 'nor', 'of', 'on', 'or', 'per', 'the', 'to', 'v', 'v.',\n   'vs', 'vs.', 'via'];\n  if (isString(forceWords)) { forceWords = (<string>forceWords).split('|'); }\n  if (isArray(forceWords)) { forceArray = forceArray.concat(forceWords); }\n  const forceArrayLower: string[] = forceArray.map(w => w.toLowerCase());\n  const noInitialCase: boolean =\n    input === input.toUpperCase() || input === input.toLowerCase();\n  let prevLastChar = '';\n  input = input.trim();\n  return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, (word, idx) => {\n    if (!noInitialCase && word.slice(1).search(/[A-Z]|\\../) !== -1) {\n      return word;\n    } else {\n      let newWord: string;\n      const forceWord: string =\n        forceArray[forceArrayLower.indexOf(word.toLowerCase())];\n      if (!forceWord) {\n        if (noInitialCase) {\n          if (word.slice(1).search(/\\../) !== -1) {\n            newWord = word.toLowerCase();\n          } else {\n            newWord = word[0].toUpperCase() + word.slice(1).toLowerCase();\n          }\n        } else {\n          newWord = word[0].toUpperCase() + word.slice(1);\n        }\n      } else if (\n        forceWord === forceWord.toLowerCase() && (\n          idx === 0 || idx + word.length === input.length ||\n          prevLastChar === ':' || input[idx - 1].search(/[^\\s-]/) !== -1 ||\n          (input[idx - 1] !== '-' && input[idx + word.length] === '-')\n        )\n      ) {\n        newWord = forceWord[0].toUpperCase() + forceWord.slice(1);\n      } else {\n        newWord = forceWord;\n      }\n      prevLastChar = word.slice(-1);\n      return newWord;\n    }\n  });\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  isDefined, isEmpty, isObject, isArray, isMap, isNumber, isString\n} from './validator.functions';\nimport { hasOwn, copy } from './utility.functions';\n\n/**\n * 'JsonPointer' class\n *\n * Some utilities for using JSON Pointers with JSON objects\n * https://tools.ietf.org/html/rfc6901\n *\n * get, getCopy, getFirst, set, setCopy, insert, insertCopy, remove, has, dict,\n * forEachDeep, forEachDeepCopy, escape, unescape, parse, compile, toKey,\n * isJsonPointer, isSubPointer, toIndexedPointer, toGenericPointer,\n * toControlPointer, toSchemaPointer, toDataPointer, parseObjectPath\n *\n * Some functions based on manuelstofer's json-pointer utilities\n * https://github.com/manuelstofer/json-pointer\n */\nexport type Pointer = string | string[];\n\n@Injectable()\nexport class JsonPointer {\n\n  /**\n   * 'get' function\n   *\n   * Uses a JSON Pointer to retrieve a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static get(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    if (object === null) { return getBoolean ? false : undefined; }\n    let keyArray: any[] = this.parse(pointer, errors);\n    if (typeof object === 'object' && keyArray !== null) {\n      let subObject = object;\n      if (startSlice >= keyArray.length || endSlice <= -keyArray.length) { return object; }\n      if (startSlice <= -keyArray.length) { startSlice = 0; }\n      if (!isDefined(endSlice) || endSlice >= keyArray.length) { endSlice = keyArray.length; }\n      keyArray = keyArray.slice(startSlice, endSlice);\n      for (let key of keyArray) {\n        if (key === '-' && isArray(subObject) && subObject.length) {\n          key = subObject.length - 1;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else if (typeof subObject === 'object' && subObject !== null &&\n          hasOwn(subObject, key)\n        ) {\n          subObject = subObject[key];\n        } else {\n          if (errors) {\n            console.error(`get error: \"${key}\" key not found in object.`);\n            console.error(pointer);\n            console.error(object);\n          }\n          return getBoolean ? false : undefined;\n        }\n      }\n      return getBoolean ? true : subObject;\n    }\n    if (errors && keyArray === null) {\n      console.error(`get error: Invalid JSON Pointer: ${pointer}`);\n    }\n    if (errors && typeof object !== 'object') {\n      console.error('get error: Invalid object:');\n      console.error(object);\n    }\n    return getBoolean ? false : undefined;\n  }\n\n  /**\n   * 'getCopy' function\n   *\n   * Uses a JSON Pointer to deeply clone a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static getCopy(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    const objectToCopy =\n      this.get(object, pointer, startSlice, endSlice, getBoolean, errors);\n    return this.forEachDeepCopy(objectToCopy);\n  }\n\n  /**\n   * 'getFirst' function\n   *\n   * Takes an array of JSON Pointers and objects,\n   * checks each object for a value specified by the pointer,\n   * and returns the first value found.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  { boolean = false } getCopy - Return a copy instead?\n   * //  - First value found\n   */\n  static getFirst(items, defaultValue: any = null, getCopy = false) {\n    if (isEmpty(items)) { return; }\n    if (isArray(items)) {\n      for (let item of items) {\n        if (isEmpty(item)) { continue; }\n        if (isArray(item) && item.length >= 2) {\n          if (isEmpty(item[0]) || isEmpty(item[1])) { continue; }\n          const value = getCopy ?\n            this.getCopy(item[0], item[1]) :\n            this.get(item[0], item[1]);\n          if (value) { return value; }\n          continue;\n        }\n        console.error('getFirst error: Input not in correct format.\\n' +\n          'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n        return;\n      }\n      return defaultValue;\n    }\n    if (isMap(items)) {\n      for (let [object, pointer] of items) {\n        if (object === null || !this.isJsonPointer(pointer)) { continue; }\n        const value = getCopy ?\n          this.getCopy(object, pointer) :\n          this.get(object, pointer);\n        if (value) { return value; }\n      }\n      return defaultValue;\n    }\n    console.error('getFirst error: Input not in correct format.\\n' +\n      'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n    return defaultValue;\n  }\n\n  /**\n   * 'getFirstCopy' function\n   *\n   * Similar to getFirst, but always returns a copy.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  - Copy of first value found\n   */\n  static getFirstCopy(items, defaultValue: any = null) {\n    const firstCopy = this.getFirst(items, defaultValue, true);\n    return firstCopy;\n  }\n\n  /**\n   * 'set' function\n   *\n   * Uses a JSON Pointer to set a value on an object.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing\n   * value (if any) at that location.\n   *\n   * So set([1, 2, 3], '/1', 4) => [1, 4, 3]\n   * and\n   * So set([1, 2, 3], '/1', 4, true) => [1, 4, 2, 3]\n   *\n   * //  { object } object - The object to set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The new value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The original object, modified with the set value\n   */\n  static set(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let subObject = object;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject = subObject[key];\n        }\n      }\n      let lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return object;\n    }\n    console.error(`set error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'setCopy' function\n   *\n   * Copies an object and uses a JSON Pointer to set a value on the copy.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing value.\n   *\n   * //  { object } object - The object to copy and set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The new object with the set value\n   */\n  static setCopy(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null) {\n      let newObject = copy(object);\n      let subObject = newObject;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject.set(key, copy(subObject.get(key)));\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject[key] = copy(subObject[key]);\n          subObject = subObject[key];\n        }\n      }\n      let lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return newObject;\n    }\n    console.error(`setCopy error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'insert' function\n   *\n   * Calls 'set' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insert(object, pointer, value) {\n    const updatedObject = this.set(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'insertCopy' function\n   *\n   * Calls 'setCopy' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insertCopy(object, pointer, value) {\n    const updatedObject = this.setCopy(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'remove' function\n   *\n   * Uses a JSON Pointer to remove a key and its attribute from an object\n   *\n   * //  { object } object - object to delete attribute from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { object }\n   */\n  static remove(object, pointer) {\n    let keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let lastKey = keyArray.pop();\n      let parentObject = this.get(object, keyArray);\n      if (isArray(parentObject)) {\n        if (lastKey === '-') { lastKey = parentObject.length - 1; }\n        parentObject.splice(lastKey, 1);\n      } else if (isObject(parentObject)) {\n        delete parentObject[lastKey];\n      }\n      return object;\n    }\n    console.error(`remove error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'has' function\n   *\n   * Tests if an object has a value at the location specified by a JSON Pointer\n   *\n   * //  { object } object - object to chek for value\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { boolean }\n   */\n  static has(object, pointer) {\n    const hasValue = this.get(object, pointer, 0, null, true);\n    return hasValue;\n  }\n\n  /**\n   * 'dict' function\n   *\n   * Returns a (pointer -> value) dictionary for an object\n   *\n   * //  { object } object - The object to create a dictionary from\n   * // { object } - The resulting dictionary object\n   */\n  static dict(object) {\n    let results: any = {};\n    this.forEachDeep(object, (value, pointer) => {\n      if (typeof value !== 'object') { results[pointer] = value; }\n    });\n    return results;\n  }\n\n  /**\n   * 'forEachDeep' function\n   *\n   * Iterates over own enumerable properties of an object or items in an array\n   * and invokes an iteratee function for each key/value or index/value pair.\n   * By default, iterates over items within objects and arrays after calling\n   * the iteratee function on the containing object or array itself.\n   *\n   * The iteratee is invoked with three arguments: (value, pointer, rootObject),\n   * where pointer is a JSON pointer indicating the location of the current\n   * value within the root object, and rootObject is the root object initially\n   * submitted to th function.\n   *\n   * If a third optional parameter 'bottomUp' is set to TRUE, the iterator\n   * function will be called on sub-objects and arrays after being\n   * called on their contents, rather than before, which is the default.\n   *\n   * This function can also optionally be called directly on a sub-object by\n   * including optional 4th and 5th parameterss to specify the initial\n   * root object and pointer.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, p?: string, o?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The modified object\n   */\n  static forEachDeep(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeep error: Iterator is not a function:`, fn);\n      return;\n    }\n    if (!bottomUp) { fn(object, pointer, rootObject); }\n    if (isObject(object) || isArray(object)) {\n      for (let key of Object.keys(object)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        this.forEachDeep(object[key], fn, bottomUp, newPointer, rootObject);\n      }\n    }\n    if (bottomUp) { fn(object, pointer, rootObject); }\n  }\n\n  /**\n   * 'forEachDeepCopy' function\n   *\n   * Similar to forEachDeep, but returns a copy of the original object, with\n   * the same keys and indexes, but with values replaced with the result of\n   * the iteratee function.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, k?: string, o?: any, p?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The copied object\n   */\n  static forEachDeepCopy(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeepCopy error: Iterator is not a function:`, fn);\n      return null;\n    }\n    if (isObject(object) || isArray(object)) {\n      let newObject = isArray(object) ? [ ...object ] : { ...object };\n      if (!bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      for (let key of Object.keys(newObject)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        newObject[key] = this.forEachDeepCopy(\n          newObject[key], fn, bottomUp, newPointer, rootObject\n        );\n      }\n      if (bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      return newObject;\n    } else {\n      return fn(object, pointer, rootObject);\n    }\n  }\n\n  /**\n   * 'escape' function\n   *\n   * Escapes a string reference key\n   *\n   * //  { string } key - string key to escape\n   * // { string } - escaped key\n   */\n  static escape(key) {\n    const escaped = key.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n    return escaped;\n  }\n\n  /**\n   * 'unescape' function\n   *\n   * Unescapes a string reference key\n   *\n   * //  { string } key - string key to unescape\n   * // { string } - unescaped key\n   */\n  static unescape(key) {\n    const unescaped = key.toString().replace(/~1/g, '/').replace(/~0/g, '~');\n    return unescaped;\n  }\n\n  /**\n   * 'parse' function\n   *\n   * Converts a string JSON Pointer into a array of keys\n   * (if input is already an an array of keys, it is returned unchanged)\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string[] } - JSON Pointer array of keys\n   */\n  static parse(pointer, errors = false) {\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`parse error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) { return <string[]>pointer; }\n    if (typeof pointer === 'string') {\n      if ((<string>pointer)[0] === '#') { pointer = pointer.slice(1); }\n      if (<string>pointer === '' || <string>pointer === '/') { return []; }\n      return (<string>pointer).slice(1).split('/').map(this.unescape);\n    }\n  }\n\n  /**\n   * 'compile' function\n   *\n   * Converts an array of keys into a JSON Pointer string\n   * (if input is already a string, it is normalized and returned)\n   *\n   * The optional second parameter is a default which will replace any empty keys.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { string | number = '' } defaultValue - Default value\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - JSON Pointer string\n   */\n  static compile(pointer, defaultValue = '', errors = false) {\n    if (pointer === '#') { return ''; }\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`compile error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) {\n      if ((<string[]>pointer).length === 0) { return ''; }\n      return '/' + (<string[]>pointer).map(\n        key => key === '' ? defaultValue : this.escape(key)\n      ).join('/');\n    }\n    if (typeof pointer === 'string') {\n      if (pointer[0] === '#') { pointer = pointer.slice(1); }\n      return pointer;\n    }\n  }\n\n  /**\n   * 'toKey' function\n   *\n   * Extracts name of the final key from a JSON Pointer.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - the extracted key\n   */\n  static toKey(pointer, errors = false) {\n    let keyArray = this.parse(pointer, errors);\n    if (keyArray === null) { return null; }\n    if (!keyArray.length) { return ''; }\n    return keyArray[keyArray.length - 1];\n  }\n\n  /**\n   * 'isJsonPointer' function\n   *\n   * Checks a string or array value to determine if it is a valid JSON Pointer.\n   * Returns true if a string is empty, or starts with '/' or '#/'.\n   * Returns true if an array contains only string values.\n   *\n   * //   value - value to check\n   * // { boolean } - true if value is a valid JSON Pointer, otherwise false\n   */\n  static isJsonPointer(value) {\n    if (isArray(value)) {\n      return value.every(key => typeof key === 'string');\n    } else if (isString(value)) {\n      if (value === '' || value === '#') { return true; }\n      if (value[0] === '/' || value.slice(0, 2) === '#/') {\n        return !/(~[^01]|~$)/g.test(value);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 'isSubPointer' function\n   *\n   * Checks whether one JSON Pointer is a subset of another.\n   *\n   * //  { Pointer } shortPointer - potential subset JSON Pointer\n   * //  { Pointer } longPointer - potential superset JSON Pointer\n   * //  { boolean = false } trueIfMatching - return true if pointers match?\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { boolean } - true if shortPointer is a subset of longPointer, false if not\n   */\n  static isSubPointer(\n    shortPointer, longPointer, trueIfMatching = false, errors = false\n  ) {\n    if (!this.isJsonPointer(shortPointer) || !this.isJsonPointer(longPointer)) {\n      if (errors) {\n        let invalid = ''\n        if (!this.isJsonPointer(shortPointer)) { invalid += ` 1: ${shortPointer}`; }\n        if (!this.isJsonPointer(longPointer)) { invalid += ` 2: ${longPointer}`; }\n        console.error(`isSubPointer error: Invalid JSON Pointer ${invalid}`);\n      }\n      return;\n    }\n    shortPointer = this.compile(shortPointer, '', errors);\n    longPointer = this.compile(longPointer, '', errors);\n    return shortPointer === longPointer ? trueIfMatching :\n      `${shortPointer}/` === longPointer.slice(0, shortPointer.length + 1);\n  }\n\n  /**\n   * 'toIndexedPointer' function\n   *\n   * Merges an array of numeric indexes and a generic pointer to create an\n   * indexed pointer for a specific item.\n   *\n   * For example, merging the generic pointer '/foo/-/bar/-/baz' and\n   * the array [4, 2] would result in the indexed pointer '/foo/4/bar/2/baz'\n   *\n   * \n   * //  { Pointer } genericPointer - The generic pointer\n   * //  { number[] } indexArray - The array of numeric indexes\n   * //  { Map<string, number> } arrayMap - An optional array map\n   * // { string } - The merged pointer with indexes\n   */\n  static toIndexedPointer(\n    genericPointer, indexArray, arrayMap: Map<string, number> = null\n  ) {\n    if (this.isJsonPointer(genericPointer) && isArray(indexArray)) {\n      let indexedPointer = this.compile(genericPointer);\n      if (isMap(arrayMap)) {\n        let arrayIndex = 0;\n        return indexedPointer.replace(/\\/\\-(?=\\/|$)/g, (key, stringIndex) =>\n          arrayMap.has((<string>indexedPointer).slice(0, stringIndex)) ?\n            '/' + indexArray[arrayIndex++] : key\n        );\n      } else {\n        for (let pointerIndex of indexArray) {\n          indexedPointer = indexedPointer.replace('/-', '/' + pointerIndex);\n        }\n        return indexedPointer;\n      }\n    }\n    if (!this.isJsonPointer(genericPointer)) {\n      console.error(`toIndexedPointer error: Invalid JSON Pointer: ${genericPointer}`);\n    }\n    if (!isArray(indexArray)) {\n      console.error(`toIndexedPointer error: Invalid indexArray: ${indexArray}`);\n    }\n  };\n\n  /**\n   * 'toGenericPointer' function\n   *\n   * Compares an indexed pointer to an array map and removes list array\n   * indexes (but leaves tuple arrray indexes and all object keys, including\n   * numeric keys) to create a generic pointer.\n   *\n   * For example, using the indexed pointer '/foo/1/bar/2/baz/3' and\n   * the arrayMap [['/foo', 0], ['/foo/-/bar', 3], ['/foo/-/bar/-/baz', 0]]\n   * would result in the generic pointer '/foo/-/bar/2/baz/-'\n   * Using the indexed pointer '/foo/1/bar/4/baz/3' and the same arrayMap\n   * would result in the generic pointer '/foo/-/bar/-/baz/-'\n   * (the bar array has 3 tuple items, so index 2 is retained, but 4 is removed)\n   *\n   * The structure of the arrayMap is: [['path to array', number of tuple items]...]\n   *\n   * \n   * //  { Pointer } indexedPointer - The indexed pointer (array or string)\n   * //  { Map<string, number> } arrayMap - The optional array map (for preserving tuple indexes)\n   * // { string } - The generic pointer with indexes removed\n   */\n  static toGenericPointer(indexedPointer, arrayMap = new Map<string, number>()) {\n    if (this.isJsonPointer(indexedPointer) && isMap(arrayMap)) {\n      let pointerArray = this.parse(indexedPointer);\n      for (let i = 1; i < pointerArray.length; i++) {\n        const subPointer = this.compile(pointerArray.slice(0, i));\n        if (arrayMap.has(subPointer) &&\n          arrayMap.get(subPointer) <= +pointerArray[i]\n        ) {\n          pointerArray[i] = '-';\n        }\n      }\n      return this.compile(pointerArray);\n    }\n    if (!this.isJsonPointer(indexedPointer)) {\n      console.error(`toGenericPointer error: invalid JSON Pointer: ${indexedPointer}`);\n    }\n    if (!isMap(arrayMap)) {\n      console.error(`toGenericPointer error: invalid arrayMap: ${arrayMap}`);\n    }\n  }\n\n  /**\n   * 'toControlPointer' function\n   *\n   * Accepts a JSON Pointer for a data object and returns a JSON Pointer for the\n   * matching control in an Angular FormGroup.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to a data object\n   * //  { FormGroup } formGroup - Angular FormGroup to get value from\n   * //  { boolean = false } controlMustExist - Only return if control exists?\n   * // { Pointer } - JSON Pointer (string) to the formGroup object\n   */\n  static toControlPointer(dataPointer, formGroup, controlMustExist = false) {\n    const dataPointerArray = this.parse(dataPointer);\n    let controlPointerArray: string[] = [];\n    let subGroup = formGroup;\n    if (dataPointerArray !== null) {\n      for (let key of dataPointerArray) {\n        if (hasOwn(subGroup, 'controls')) {\n          controlPointerArray.push('controls');\n          subGroup = subGroup.controls;\n        }\n        if (isArray(subGroup) && (key === '-')) {\n          controlPointerArray.push((subGroup.length - 1).toString());\n          subGroup = subGroup[subGroup.length - 1];\n        } else if (hasOwn(subGroup, key)) {\n          controlPointerArray.push(key);\n          subGroup = subGroup[key];\n        } else if (controlMustExist) {\n          console.error(`toControlPointer error: Unable to find \"${key}\" item in FormGroup.`);\n          console.error(dataPointer);\n          console.error(formGroup);\n          return;\n        } else {\n          controlPointerArray.push(key);\n          subGroup = { controls: {} };\n        }\n      }\n      return this.compile(controlPointerArray);\n    }\n    console.error(`toControlPointer error: Invalid JSON Pointer: ${dataPointer}`);\n  }\n\n  /**\n   * 'toSchemaPointer' function\n   *\n   * Accepts a JSON Pointer to a value inside a data object and a JSON schema\n   * for that object.\n   *\n   * Returns a Pointer to the sub-schema for the value inside the object's schema.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to an object\n   * //   schema - JSON schema for the object\n   * // { Pointer } - JSON Pointer (string) to the object's schema\n   */\n  static toSchemaPointer(dataPointer, schema) {\n    if (this.isJsonPointer(dataPointer) && typeof schema === 'object') {\n      const pointerArray = this.parse(dataPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (schema.type === 'object' || schema.properties || schema.additionalProperties) {\n        if ((schema.properties || {})[firstKey]) {\n          return `/properties/${this.escape(firstKey)}` +\n            this.toSchemaPointer(pointerArray, schema.properties[firstKey]);\n        } else  if (schema.additionalProperties) {\n          return '/additionalProperties' +\n            this.toSchemaPointer(pointerArray, schema.additionalProperties);\n        }\n      }\n      if ((schema.type === 'array' || schema.items) &&\n        (isNumber(firstKey) || firstKey === '-' || firstKey === '')\n      ) {\n        const arrayItem = firstKey === '-' || firstKey === '' ? 0 : +firstKey;\n        if (isArray(schema.items)) {\n          if (arrayItem < schema.items.length) {\n            return '/items/' + arrayItem +\n              this.toSchemaPointer(pointerArray, schema.items[arrayItem]);\n          } else if (schema.additionalItems) {\n            return '/additionalItems' +\n              this.toSchemaPointer(pointerArray, schema.additionalItems);\n          }\n        } else if (isObject(schema.items)) {\n          return '/items' + this.toSchemaPointer(pointerArray, schema.items);\n        } else if (isObject(schema.additionalItems)) {\n          return '/additionalItems' +\n            this.toSchemaPointer(pointerArray, schema.additionalItems);\n        }\n      }\n      console.error(`toSchemaPointer error: Data pointer ${dataPointer} ` +\n        `not compatible with schema ${schema}`);\n      return null;\n    }\n    if (!this.isJsonPointer(dataPointer)) {\n      console.error(`toSchemaPointer error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (typeof schema !== 'object') {\n      console.error(`toSchemaPointer error: Invalid JSON Schema: ${schema}`);\n    }\n    return null;\n  }\n\n  /**\n   * 'toDataPointer' function\n   *\n   * Accepts a JSON Pointer to a sub-schema inside a JSON schema and the schema.\n   *\n   * If possible, returns a generic Pointer to the corresponding value inside\n   * the data object described by the JSON schema.\n   *\n   * Returns null if the sub-schema is in an ambiguous location (such as\n   * definitions or additionalProperties) where the corresponding value\n   * location cannot be determined.\n   *\n   * //  { Pointer } schemaPointer - JSON Pointer (string or array) to a JSON schema\n   * //   schema - the JSON schema\n   * //  { boolean = false } errors - Show errors?\n   * // { Pointer } - JSON Pointer (string) to the value in the data object\n   */\n  static toDataPointer(schemaPointer, schema, errors = false) {\n    if (this.isJsonPointer(schemaPointer) && typeof schema === 'object' &&\n      this.has(schema, schemaPointer)\n    ) {\n      const pointerArray = this.parse(schemaPointer);\n      if (!pointerArray.length) { return ''; }\n      let dataPointer = '';\n      const firstKey = pointerArray.shift();\n      if (firstKey === 'properties' ||\n        (firstKey === 'items' && isArray(schema.items))\n      ) {\n        const secondKey = pointerArray.shift();\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n        return pointerSuffix === null ? null : '/' + secondKey + pointerSuffix;\n      } else if (firstKey === 'additionalItems' ||\n        (firstKey === 'items' && isObject(schema.items))\n      ) {\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey]);\n        return pointerSuffix === null ? null : '/-' + pointerSuffix;\n      } else if (['allOf', 'anyOf', 'oneOf'].includes(firstKey)) {\n        const secondKey = pointerArray.shift();\n        return this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n      } else if (firstKey === 'not') {\n        return this.toDataPointer(pointerArray, schema[firstKey]);\n      } else if (['contains', 'definitions', 'dependencies', 'additionalItems',\n        'additionalProperties', 'patternProperties', 'propertyNames'].includes(firstKey)\n      ) {\n        if (errors) { console.error(`toDataPointer error: Ambiguous location`); }\n      }\n      return '';\n    }\n    if (errors) {\n      if (!this.isJsonPointer(schemaPointer)) {\n        console.error(`toDataPointer error: Invalid JSON Pointer: ${schemaPointer}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Invalid JSON Schema: ${schema}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Pointer ${schemaPointer} invalid for Schema: ${schema}`);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 'parseObjectPath' function\n   *\n   * Parses a JavaScript object path into an array of keys, which\n   * can then be passed to compile() to convert into a string JSON Pointer.\n   *\n   * Based on mike-marcacci's excellent objectpath parse function:\n   * https://github.com/mike-marcacci/objectpath\n   *\n   * //  { Pointer } path - The object path to parse\n   * // { string[] } - The resulting array of keys\n   */\n  static parseObjectPath(path) {\n    if (isArray(path)) { return <string[]>path; }\n    if (this.isJsonPointer(path)) { return this.parse(path); }\n    if (typeof path === 'string') {\n      let index = 0;\n      let parts: string[] = [];\n      while (index < path.length) {\n        const nextDot = path.indexOf('.', index);\n        const nextOB = path.indexOf('[', index); // next open bracket\n        if (nextDot === -1 && nextOB === -1) { // last item\n          parts.push(path.slice(index));\n          index = path.length;\n        } else if (nextDot !== -1 && (nextDot < nextOB || nextOB === -1)) { // dot notation\n          parts.push(path.slice(index, nextDot));\n          index = nextDot + 1;\n        } else { // bracket notation\n          if (nextOB > index) {\n            parts.push(path.slice(index, nextOB));\n            index = nextOB;\n          }\n          const quote = path.charAt(nextOB + 1);\n          if (quote === '\"' || quote === \"'\") { // enclosing quotes\n            let nextCB = path.indexOf(quote + ']', nextOB); // next close bracket\n            while (nextCB !== -1 && path.charAt(nextCB - 1) === '\\\\') {\n              nextCB = path.indexOf(quote + ']', nextCB + 2);\n            }\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 2, nextCB)\n              .replace(new RegExp('\\\\' + quote, 'g'), quote));\n            index = nextCB + 2;\n          } else { // no enclosing quotes\n            let nextCB = path.indexOf(']', nextOB); // next close bracket\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 1, nextCB));\n            index = nextCB + 1;\n          }\n          if (path.charAt(index) === '.') { index++; }\n        }\n      }\n      return parts;\n    }\n    console.error('parseObjectPath error: Input object path must be a string.');\n  }\n}\n","import * as _ from 'lodash';\n\nimport {\n  isArray, isEmpty, isNumber, isObject, isString\n} from './validator.functions';\nimport { hasOwn, uniqueItems, commonItems } from './utility.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\n\n/**\n * 'mergeSchemas' function\n *\n * Merges multiple JSON schemas into a single schema with combined rules.\n *\n * If able to logically merge properties from all schemas,\n * returns a single schema object containing all merged properties.\n *\n * Example: ({ a: b, max: 1 }, { c: d, max: 2 }) => { a: b, c: d, max: 1 }\n *\n * If unable to logically merge, returns an allOf schema object containing\n * an array of the original schemas;\n *\n * Example: ({ a: b }, { a: d }) => { allOf: [ { a: b }, { a: d } ] }\n *\n * //   schemas - one or more input schemas\n * //  - merged schema\n */\nexport function mergeSchemas(...schemas) {\n  schemas = schemas.filter(schema => !isEmpty(schema));\n  if (schemas.some(schema => !isObject(schema))) { return null; }\n  const combinedSchema: any = {};\n  for (const schema of schemas) {\n    for (const key of Object.keys(schema)) {\n      const combinedValue = combinedSchema[key];\n      const schemaValue = schema[key];\n      if (!hasOwn(combinedSchema, key) || _.isEqual(combinedValue, schemaValue)) {\n        combinedSchema[key] = schemaValue;\n      } else {\n        switch (key) {\n          case 'allOf':\n            // Combine all items from both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.allOf = mergeSchemas(...combinedValue, ...schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'additionalItems': case 'additionalProperties':\n          case 'contains': case 'propertyNames':\n            // Merge schema objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema[key] = mergeSchemas(combinedValue, schemaValue);\n            // additionalProperties == false in any schema overrides all other values\n            } else if (\n              key === 'additionalProperties' &&\n              (combinedValue === false || schemaValue === false)\n            ) {\n              combinedSchema.combinedSchema = false;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'anyOf': case 'oneOf': case 'enum':\n            // Keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema[key] = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema[key].length) { return { allOf: [ ...schemas ] }; }\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'definitions':\n            // Combine keys from both objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // Don't combine matching keys with different values\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.definitions = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'dependencies':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys,\n            // converting from arrays to objects if necessary\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are arrays, include all items from both arrays,\n                // excluding duplicates\n                } else if (\n                  isArray(schemaValue[subKey]) && isArray(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    uniqueItems(...combinedObject[subKey], ...schemaValue[subKey]);\n                // If either key is an object, merge the schemas\n                } else if (\n                  (isArray(schemaValue[subKey]) || isObject(schemaValue[subKey])) &&\n                  (isArray(combinedObject[subKey]) || isObject(combinedObject[subKey]))\n                ) {\n                  // If either key is an array, convert it to an object first\n                  const required = isArray(combinedSchema.required) ?\n                    combinedSchema.required : [];\n                  const combinedDependency = isArray(combinedObject[subKey]) ?\n                    { required: uniqueItems(...required, combinedObject[subKey]) } :\n                    combinedObject[subKey];\n                  const schemaDependency = isArray(schemaValue[subKey]) ?\n                    { required: uniqueItems(...required, schemaValue[subKey]) } :\n                    schemaValue[subKey];\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedDependency, schemaDependency);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.dependencies = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'items':\n            // If arrays, keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema.items.length) { return { allOf: [ ...schemas ] }; }\n            // If both keys are objects, merge them\n            } else if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items = mergeSchemas(combinedValue, schemaValue);\n            // If object + array, combine object with each array item\n            } else if (isArray(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items =\n                combinedValue.map(item => mergeSchemas(item, schemaValue));\n            } else if (isObject(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items =\n                schemaValue.map(item => mergeSchemas(item, combinedValue));\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'multipleOf':\n            // TODO: Adjust to correctly handle decimal values\n            // If numbers, set to least common multiple\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              const gcd = (x, y) => !y ? x : gcd(y, x % y);\n              const lcm = (x, y) => (x * y) / gcd(x, y);\n              combinedSchema.multipleOf = lcm(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'maximum': case 'exclusiveMaximum': case 'maxLength':\n          case 'maxItems': case 'maxProperties':\n            // If numbers, set to lowest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.min(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'minimum': case 'exclusiveMinimum': case 'minLength':\n          case 'minItems': case 'minProperties':\n            // If numbers, set to highest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.max(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'not':\n            // Combine not values into anyOf array\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const notAnyOf = [combinedValue, schemaValue]\n                .reduce((notAnyOfArray, notSchema) =>\n                  isArray(notSchema.anyOf) &&\n                  Object.keys(notSchema).length === 1 ?\n                    [ ...notAnyOfArray, ...notSchema.anyOf ] :\n                    [ ...notAnyOfArray, notSchema ]\n                , []);\n              // TODO: Remove duplicate items from array\n              combinedSchema.not = { anyOf: notAnyOf };\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'patternProperties':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) && isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.patternProperties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'properties':\n            // Combine all keys from both objects\n            // unless additionalProperties === false\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              // If new schema has additionalProperties,\n              // merge or remove non-matching property keys in combined schema\n              if (hasOwn(schemaValue, 'additionalProperties')) {\n                Object.keys(combinedValue)\n                  .filter(combinedKey => !Object.keys(schemaValue).includes(combinedKey))\n                  .forEach(nonMatchingKey => {\n                    if (schemaValue.additionalProperties === false) {\n                      delete combinedObject[nonMatchingKey];\n                    } else if (isObject(schemaValue.additionalProperties)) {\n                      combinedObject[nonMatchingKey] = mergeSchemas(\n                        combinedObject[nonMatchingKey],\n                        schemaValue.additionalProperties\n                      );\n                    }\n                  });\n              }\n              for (const subKey of Object.keys(schemaValue)) {\n                if (_.isEqual(combinedObject[subKey], schemaValue[subKey]) || (\n                  !hasOwn(combinedObject, subKey) &&\n                  !hasOwn(combinedObject, 'additionalProperties')\n                )) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If combined schema has additionalProperties,\n                // merge or ignore non-matching property keys in new schema\n                } else if (\n                  !hasOwn(combinedObject, subKey) &&\n                  hasOwn(combinedObject, 'additionalProperties')\n                ) {\n                  // If combinedObject.additionalProperties === false,\n                  // do nothing (don't set key)\n                  // If additionalProperties is object, merge with new key\n                  if (isObject(combinedObject.additionalProperties)) {\n                    combinedObject[subKey] = mergeSchemas(\n                      combinedObject.additionalProperties, schemaValue[subKey]\n                    );\n                  }\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) &&\n                  isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.properties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'required':\n            // If arrays, include all items from both arrays, excluding duplicates\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.required = uniqueItems(...combinedValue, ...schemaValue);\n            // If booleans, aet true if either true\n            } else if (\n              typeof schemaValue === 'boolean' &&\n              typeof combinedValue === 'boolean'\n            ) {\n              combinedSchema.required = !!combinedValue || !!schemaValue;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case '$schema': case '$id': case 'id':\n            // Don't combine these keys\n          break;\n          case 'title': case 'description':\n            // Return the last value, overwriting any previous one\n            // These properties are not used for validation, so conflicts don't matter\n            combinedSchema[key] = schemaValue;\n          break;\n          case 'type':\n            if (\n              (isArray(schemaValue) || isString(schemaValue)) &&\n              (isArray(combinedValue) || isString(combinedValue))\n            ) {\n              const combinedTypes = commonItems(combinedValue, schemaValue);\n              if (!combinedTypes.length) { return { allOf: [ ...schemas ] }; }\n              combinedSchema.type = combinedTypes.length > 1 ? combinedTypes : combinedTypes[0];\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'uniqueItems':\n            // Set true if either true\n            combinedSchema.uniqueItems = !!combinedValue || !!schemaValue;\n          break;\n          default:\n            return { allOf: [ ...schemas ] };\n        }\n      }\n    }\n  }\n  return combinedSchema;\n}\n","import * as _ from 'lodash';\n\nimport {\n  getType, hasValue, inArray, isArray, isEmpty, isFunction, isNumber, isObject,\n  isString\n} from './validator.functions';\nimport {\n  forEach, hasOwn, mergeFilteredObject, uniqueItems, commonItems\n} from './utility.functions';\nimport { mergeSchemas } from './merge-schemas.function';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\nimport { JsonValidators } from './json.validators';\n\n/**\n * JSON Schema function library:\n *\n * buildSchemaFromLayout:   TODO: Write this function\n *\n * buildSchemaFromData:\n *\n * getFromSchema:\n *\n * removeRecursiveReferences:\n *\n * getInputType:\n *\n * checkInlineType:\n *\n * isInputRequired:\n *\n * updateInputOptions:\n *\n * getTitleMapFromOneOf:\n *\n * getControlValidators:\n *\n * resolveSchemaReferences:\n *\n * getSubSchema:\n *\n * combineAllOf:\n *\n * fixRequiredArrayProperties:\n */\n\n/**\n * 'buildSchemaFromLayout' function\n *\n * TODO: Build a JSON Schema from a JSON Form layout\n *\n * //   layout - The JSON Form layout\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromLayout(layout) {\n  return;\n  // let newSchema: any = { };\n  // const walkLayout = (layoutItems: any[], callback: Function): any[] => {\n  //   let returnArray: any[] = [];\n  //   for (let layoutItem of layoutItems) {\n  //     const returnItem: any = callback(layoutItem);\n  //     if (returnItem) { returnArray = returnArray.concat(callback(layoutItem)); }\n  //     if (layoutItem.items) {\n  //       returnArray = returnArray.concat(walkLayout(layoutItem.items, callback));\n  //     }\n  //   }\n  //   return returnArray;\n  // };\n  // walkLayout(layout, layoutItem => {\n  //   let itemKey: string;\n  //   if (typeof layoutItem === 'string') {\n  //     itemKey = layoutItem;\n  //   } else if (layoutItem.key) {\n  //     itemKey = layoutItem.key;\n  //   }\n  //   if (!itemKey) { return; }\n  //   //\n  // });\n}\n\n/**\n * 'buildSchemaFromData' function\n *\n * Build a JSON Schema from a data object\n *\n * //   data - The data object\n * //  { boolean = false } requireAllFields - Require all fields?\n * //  { boolean = true } isRoot - is root\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromData(\n  data, requireAllFields = false, isRoot = true\n) {\n  let newSchema: any = {};\n  const getFieldType = (value: any): string => {\n    const fieldType = getType(value, 'strict');\n    return { integer: 'number', null: 'string' }[fieldType] || fieldType;\n  };\n  const buildSubSchema = (value) =>\n    buildSchemaFromData(value, requireAllFields, false);\n  if (isRoot) { newSchema.$schema = 'http://json-schema.org/draft-06/schema#'; }\n  newSchema.type = getFieldType(data);\n  if (newSchema.type === 'object') {\n    newSchema.properties = {};\n    if (requireAllFields) { newSchema.required = []; }\n    for (let key of Object.keys(data)) {\n      newSchema.properties[key] = buildSubSchema(data[key]);\n      if (requireAllFields) { newSchema.required.push(key); }\n    }\n  } else if (newSchema.type === 'array') {\n    newSchema.items = data.map(buildSubSchema);\n    // If all items are the same type, use an object for items instead of an array\n    if ((new Set(data.map(getFieldType))).size === 1) {\n      newSchema.items = newSchema.items.reduce((a, b) => ({ ...a, ...b }), {});\n    }\n    if (requireAllFields) { newSchema.minItems = 1; }\n  }\n  return newSchema;\n}\n\n/**\n * 'getFromSchema' function\n *\n * Uses a JSON Pointer for a value within a data object to retrieve\n * the schema for that value within schema for the data object.\n *\n * The optional third parameter can also be set to return something else:\n * 'schema' (default): the schema for the value indicated by the data pointer\n * 'parentSchema': the schema for the value's parent object or array\n * 'schemaPointer': a pointer to the value's schema within the object's schema\n * 'parentSchemaPointer': a pointer to the schema for the value's parent object or array\n *\n * //   schema - The schema to get the sub-schema from\n * //  { Pointer } dataPointer - JSON Pointer (string or array)\n * //  { string = 'schema' } returnType - what to return?\n * //  - The located sub-schema\n */\nexport function getFromSchema(schema, dataPointer, returnType = 'schema') {\n  const dataPointerArray: any[] = JsonPointer.parse(dataPointer);\n  if (dataPointerArray === null) {\n    console.error(`getFromSchema error: Invalid JSON Pointer: ${dataPointer}`);\n    return null;\n  }\n  let subSchema = schema;\n  const schemaPointer = [];\n  const length = dataPointerArray.length;\n  if (returnType.slice(0, 6) === 'parent') { dataPointerArray.length--; }\n  for (let i = 0; i < length; ++i) {\n    const parentSchema = subSchema;\n    const key = dataPointerArray[i];\n    let subSchemaFound = false;\n    if (typeof subSchema !== 'object') {\n      console.error(`getFromSchema error: Unable to find \"${key}\" key in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return null;\n    }\n    if (subSchema.type === 'array' && (!isNaN(key) || key === '-')) {\n      if (hasOwn(subSchema, 'items')) {\n        if (isObject(subSchema.items)) {\n          subSchemaFound = true;\n          subSchema = subSchema.items;\n          schemaPointer.push('items');\n        } else if (isArray(subSchema.items)) {\n          if (!isNaN(key) && subSchema.items.length >= +key) {\n            subSchemaFound = true;\n            subSchema = subSchema.items[+key];\n            schemaPointer.push('items', key);\n          }\n        }\n      }\n      if (!subSchemaFound && isObject(subSchema.additionalItems)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalItems;\n        schemaPointer.push('additionalItems');\n      } else if (subSchema.additionalItems !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalItems');\n      }\n    } else if (subSchema.type === 'object') {\n      if (isObject(subSchema.properties) && hasOwn(subSchema.properties, key)) {\n        subSchemaFound = true\n        subSchema = subSchema.properties[key];\n        schemaPointer.push('properties', key);\n      } else if (isObject(subSchema.additionalProperties)) {\n        subSchemaFound = true\n        subSchema = subSchema.additionalProperties;\n        schemaPointer.push('additionalProperties');\n      } else if (subSchema.additionalProperties !== false) {\n        subSchemaFound = true\n        subSchema = { };\n        schemaPointer.push('additionalProperties');\n      }\n    }\n    if (!subSchemaFound) {\n      console.error(`getFromSchema error: Unable to find \"${key}\" item in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return;\n    }\n  }\n  return returnType.slice(-7) === 'Pointer' ? schemaPointer : subSchema;\n}\n\n/**\n * 'removeRecursiveReferences' function\n *\n * Checks a JSON Pointer against a map of recursive references and returns\n * a JSON Pointer to the shallowest equivalent location in the same object.\n *\n * Using this functions enables an object to be constructed with unlimited\n * recursion, while maintaing a fixed set of metadata, such as field data types.\n * The object can grow as large as it wants, and deeply recursed nodes can\n * just refer to the metadata for their shallow equivalents, instead of having\n * to add additional redundant metadata for each recursively added node.\n *\n * Example:\n *\n * pointer:         '/stuff/and/more/and/more/and/more/and/more/stuff'\n * recursiveRefMap: [['/stuff/and/more/and/more', '/stuff/and/more/']]\n * returned:        '/stuff/and/more/stuff'\n *\n * //  { Pointer } pointer -\n * //  { Map<string, string> } recursiveRefMap -\n * //  { Map<string, number> = new Map() } arrayMap - optional\n * // { string } -\n */\nexport function removeRecursiveReferences(\n  pointer, recursiveRefMap, arrayMap = new Map()\n) {\n  if (!pointer) { return ''; }\n  let genericPointer =\n    JsonPointer.toGenericPointer(JsonPointer.compile(pointer), arrayMap);\n  if (genericPointer.indexOf('/') === -1) { return genericPointer; }\n  let possibleReferences = true;\n  while (possibleReferences) {\n    possibleReferences = false;\n    recursiveRefMap.forEach((toPointer, fromPointer) => {\n      if (JsonPointer.isSubPointer(toPointer, fromPointer)) {\n        while (JsonPointer.isSubPointer(fromPointer, genericPointer, true)) {\n          genericPointer = JsonPointer.toGenericPointer(\n            toPointer + genericPointer.slice(fromPointer.length), arrayMap\n          );\n          possibleReferences = true;\n        }\n      }\n    });\n  }\n  return genericPointer;\n}\n\n/**\n * 'getInputType' function\n *\n * //   schema\n * //  { any = null } layoutNode\n * // { string }\n */\nexport function getInputType(schema, layoutNode: any = null) {\n  // x-schema-form = Angular Schema Form compatibility\n  // widget & component = React Jsonschema Form compatibility\n  let controlType = JsonPointer.getFirst([\n    [schema, '/x-schema-form/type'],\n    [schema, '/x-schema-form/widget/component'],\n    [schema, '/x-schema-form/widget'],\n    [schema, '/widget/component'],\n    [schema, '/widget']\n  ]);\n  if (isString(controlType)) { return checkInlineType(controlType, schema, layoutNode); }\n  let schemaType = schema.type;\n  if (schemaType) {\n    if (isArray(schemaType)) { // If multiple types listed, use most inclusive type\n      schemaType =\n        inArray('object', schemaType) && hasOwn(schema, 'properties') ? 'object' :\n        inArray('array', schemaType) && hasOwn(schema, 'items') ? 'array' :\n        inArray('array', schemaType) && hasOwn(schema, 'additionalItems') ? 'array' :\n        inArray('string', schemaType) ? 'string' :\n        inArray('number', schemaType) ? 'number' :\n        inArray('integer', schemaType) ? 'integer' :\n        inArray('boolean', schemaType) ? 'boolean' : 'unknown';\n    }\n    if (schemaType === 'boolean') { return 'checkbox'; }\n    if (schemaType === 'object') {\n      if (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) {\n        return 'section';\n      }\n      // TODO: Figure out how to handle additionalProperties\n      if (hasOwn(schema, '$ref')) { return '$ref'; }\n    }\n    if (schemaType === 'array') {\n      let itemsObject = JsonPointer.getFirst([\n        [schema, '/items'],\n        [schema, '/additionalItems']\n      ]) || {};\n      return hasOwn(itemsObject, 'enum') && schema.maxItems !== 1 ?\n        checkInlineType('checkboxes', schema, layoutNode) : 'array';\n    }\n    if (schemaType === 'null') { return 'none'; }\n    if (JsonPointer.has(layoutNode, '/options/titleMap') ||\n      hasOwn(schema, 'enum') || getTitleMapFromOneOf(schema, null, true)\n    ) { return 'select'; }\n    if (schemaType === 'number' || schemaType === 'integer') {\n      return (schemaType === 'integer' || hasOwn(schema, 'multipleOf')) &&\n        hasOwn(schema, 'maximum') && hasOwn(schema, 'minimum') ? 'range' : schemaType;\n    }\n    if (schemaType === 'string') {\n      return {\n        'color': 'color',\n        'date': 'date',\n        'date-time': 'datetime-local',\n        'email': 'email',\n        'uri': 'url',\n      }[schema.format] || 'text';\n    }\n  }\n  if (hasOwn(schema, '$ref')) { return '$ref'; }\n  if (isArray(schema.oneOf) || isArray(schema.anyOf)) { return 'one-of'; }\n  console.error(`getInputType error: Unable to determine input type for ${schemaType}`);\n  console.error('schema', schema);\n  if (layoutNode) { console.error('layoutNode', layoutNode); }\n  return 'none';\n}\n\n/**\n * 'checkInlineType' function\n *\n * Checks layout and schema nodes for 'inline: true', and converts\n * 'radios' or 'checkboxes' to 'radios-inline' or 'checkboxes-inline'\n *\n * //  { string } controlType -\n * //   schema -\n * //  { any = null } layoutNode -\n * // { string }\n */\nexport function checkInlineType(controlType, schema, layoutNode: any = null) {\n  if (!isString(controlType) || (\n    controlType.slice(0, 8) !== 'checkbox' && controlType.slice(0, 5) !== 'radio'\n  )) {\n    return controlType;\n  }\n  if (\n    JsonPointer.getFirst([\n      [layoutNode, '/inline'],\n      [layoutNode, '/options/inline'],\n      [schema, '/inline'],\n      [schema, '/x-schema-form/inline'],\n      [schema, '/x-schema-form/options/inline'],\n      [schema, '/x-schema-form/widget/inline'],\n      [schema, '/x-schema-form/widget/component/inline'],\n      [schema, '/x-schema-form/widget/component/options/inline'],\n      [schema, '/widget/inline'],\n      [schema, '/widget/component/inline'],\n      [schema, '/widget/component/options/inline'],\n    ]) === true\n  ) {\n    return controlType.slice(0, 5) === 'radio' ?\n      'radios-inline' : 'checkboxes-inline';\n  } else {\n    return controlType;\n  }\n}\n\n/**\n * 'isInputRequired' function\n *\n * Checks a JSON Schema to see if an item is required\n *\n * //   schema - the schema to check\n * //  { string } schemaPointer - the pointer to the item to check\n * // { boolean } - true if the item is required, false if not\n */\nexport function isInputRequired(schema, schemaPointer) {\n  if (!isObject(schema)) {\n    console.error('isInputRequired error: Input schema must be an object.');\n    return false;\n  }\n  const listPointerArray = JsonPointer.parse(schemaPointer);\n  if (isArray(listPointerArray)) {\n    if (!listPointerArray.length) { return schema.required === true; }\n    const keyName = listPointerArray.pop();\n    const nextToLastKey = listPointerArray[listPointerArray.length - 1];\n    if (['properties', 'additionalProperties', 'patternProperties', 'items', 'additionalItems']\n      .includes(nextToLastKey)\n    ) {\n      listPointerArray.pop();\n    }\n    const parentSchema = JsonPointer.get(schema, listPointerArray) || {};\n    if (isArray(parentSchema.required)) {\n      return parentSchema.required.includes(keyName);\n    }\n    if (parentSchema.type === 'array') {\n      return hasOwn(parentSchema, 'minItems') &&\n        isNumber(keyName) &&\n        +parentSchema.minItems > +keyName;\n    }\n  }\n  return false;\n};\n\n/**\n * 'updateInputOptions' function\n *\n * //   layoutNode\n * //   schema\n * //   jsf\n * // { void }\n */\nexport function updateInputOptions(layoutNode, schema, jsf) {\n  if (!isObject(layoutNode) || !isObject(layoutNode.options)) { return; }\n\n  // Set all option values in layoutNode.options\n  let newOptions: any = { };\n  const fixUiKeys = key => key.slice(0, 3).toLowerCase() === 'ui:' ? key.slice(3) : key;\n  mergeFilteredObject(newOptions, jsf.formOptions.defautWidgetOptions, [], fixUiKeys);\n  [ [ JsonPointer.get(schema, '/ui:widget/options'), [] ],\n    [ JsonPointer.get(schema, '/ui:widget'), [] ],\n    [ schema, [\n      'additionalProperties', 'additionalItems', 'properties', 'items',\n      'required', 'type', 'x-schema-form', '$ref'\n    ] ],\n    [ JsonPointer.get(schema, '/x-schema-form/options'), [] ],\n    [ JsonPointer.get(schema, '/x-schema-form'), ['items', 'options'] ],\n    [ layoutNode, [\n      '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n      'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n    ] ],\n    [ layoutNode.options, [] ],\n  ].forEach(([ object, excludeKeys ]) =>\n    mergeFilteredObject(newOptions, object, excludeKeys, fixUiKeys)\n  );\n  if (!hasOwn(newOptions, 'titleMap')) {\n    let newTitleMap: any = null;\n    newTitleMap = getTitleMapFromOneOf(schema, newOptions.flatList);\n    if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n    if (!hasOwn(newOptions, 'titleMap') && !hasOwn(newOptions, 'enum') && hasOwn(schema, 'items')) {\n      if (JsonPointer.has(schema, '/items/titleMap')) {\n        newOptions.titleMap = schema.items.titleMap;\n      } else if (JsonPointer.has(schema, '/items/enum')) {\n        newOptions.enum = schema.items.enum;\n        if (!hasOwn(newOptions, 'enumNames') && JsonPointer.has(schema, '/items/enumNames')) {\n          newOptions.enumNames = schema.items.enumNames;\n        }\n      } else if (JsonPointer.has(schema, '/items/oneOf')) {\n        newTitleMap = getTitleMapFromOneOf(schema.items, newOptions.flatList);\n        if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n      }\n    }\n  }\n\n  // If schema type is integer, enforce by setting multipleOf = 1\n  if (schema.type === 'integer' && !hasValue(newOptions.multipleOf)) {\n    newOptions.multipleOf = 1;\n  }\n\n  // Copy any typeahead word lists to options.typeahead.source\n  if (JsonPointer.has(newOptions, '/autocomplete/source')) {\n    newOptions.typeahead = newOptions.autocomplete;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/source')) {\n    newOptions.typeahead = newOptions.tagsinput;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/typeahead/source')) {\n    newOptions.typeahead = newOptions.tagsinput.typeahead;\n  }\n\n  layoutNode.options = newOptions;\n}\n\n/**\n * 'getTitleMapFromOneOf' function\n *\n * //  { schema } schema\n * //  { boolean = null } flatList\n * //  { boolean = false } validateOnly\n * // { validators }\n */\nexport function getTitleMapFromOneOf(\n  schema: any = {}, flatList: boolean = null, validateOnly = false\n) {\n  let titleMap = null;\n  const oneOf = schema.oneOf || schema.anyOf || null;\n  if (isArray(oneOf) && oneOf.every(item => item.title)) {\n    if (oneOf.every(item => isArray(item.enum) && item.enum.length === 1)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.enum[0] }));\n    } else if (oneOf.every(item => item.const)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.const }));\n    }\n\n    // if flatList !== false and some items have colons, make grouped map\n    if (flatList !== false && (titleMap || [])\n      .filter(title => ((title || {}).name || '').indexOf(': ')).length > 1\n    ) {\n\n      // Split name on first colon to create grouped map (name -> group: name)\n      const newTitleMap = titleMap.map(title => {\n        let [group, name] = title.name.split(/: (.+)/);\n        return group && name ? { ...title, group, name } : title;\n      });\n\n      // If flatList === true or at least one group has multiple items, use grouped map\n      if (flatList === true || newTitleMap.some((title, index) => index &&\n        hasOwn(title, 'group') && title.group === newTitleMap[index - 1].group\n      )) {\n        titleMap = newTitleMap;\n      }\n    }\n  }\n  return validateOnly ? false : titleMap;\n}\n\n/**\n * 'getControlValidators' function\n *\n * //  schema\n * // { validators }\n */\nexport function getControlValidators(schema) {\n  if (!isObject(schema)) { return null; }\n  let validators: any = { };\n  if (hasOwn(schema, 'type')) {\n    switch (schema.type) {\n      case 'string':\n        forEach(['pattern', 'format', 'minLength', 'maxLength'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'number': case 'integer':\n        forEach(['Minimum', 'Maximum'], (ucLimit) => {\n          let eLimit = 'exclusive' + ucLimit;\n          let limit = ucLimit.toLowerCase();\n          if (hasOwn(schema, limit)) {\n            let exclusive = hasOwn(schema, eLimit) && schema[eLimit] === true;\n            validators[limit] = [schema[limit], exclusive];\n          }\n        });\n        forEach(['multipleOf', 'type'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'object':\n        forEach(['minProperties', 'maxProperties', 'dependencies'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'array':\n        forEach(['minItems', 'maxItems', 'uniqueItems'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n    }\n  }\n  if (hasOwn(schema, 'enum')) { validators.enum = [schema.enum]; }\n  return validators;\n}\n\n/**\n * 'resolveSchemaReferences' function\n *\n * Find all $ref links in schema and save links and referenced schemas in\n * schemaRefLibrary, schemaRecursiveRefMap, and dataRecursiveRefMap\n *\n * //  schema\n * //  schemaRefLibrary\n * // { Map<string, string> } schemaRecursiveRefMap\n * // { Map<string, string> } dataRecursiveRefMap\n * // { Map<string, number> } arrayMap\n * // \n */\nexport function resolveSchemaReferences(\n  schema, schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, arrayMap\n) {\n  if (!isObject(schema)) {\n    console.error('resolveSchemaReferences error: schema must be an object.');\n    return;\n  }\n  const refLinks = new Set<string>();\n  const refMapSet = new Set<string>();\n  const refMap = new Map<string, string>();\n  const recursiveRefMap = new Map<string, string>();\n  const refLibrary: any = {};\n\n  // Search schema for all $ref links, and build full refLibrary\n  JsonPointer.forEachDeep(schema, (subSchema, subSchemaPointer) => {\n    if (hasOwn(subSchema, '$ref') && isString(subSchema['$ref'])) {\n      const refPointer = JsonPointer.compile(subSchema['$ref']);\n      refLinks.add(refPointer);\n      refMapSet.add(subSchemaPointer + '~~' + refPointer);\n      refMap.set(subSchemaPointer, refPointer);\n    }\n  });\n  refLinks.forEach(ref => refLibrary[ref] = getSubSchema(schema, ref));\n\n  // Follow all ref links and save in refMapSet,\n  // to find any multi-link recursive refernces\n  let checkRefLinks = true;\n  while (checkRefLinks) {\n    checkRefLinks = false;\n    Array.from(refMap).forEach(([fromRef1, toRef1]) => Array.from(refMap)\n      .filter(([fromRef2, toRef2]) =>\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef2, toRef1, true) &&\n        !refMapSet.has(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2)\n      )\n      .forEach(([fromRef2, toRef2]) => {\n        refMapSet.add(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2);\n        checkRefLinks = true;\n      })\n    );\n  }\n\n  // Build full recursiveRefMap\n  // First pass - save all internally recursive refs from refMapSet\n  Array.from(refMapSet)\n    .map(refLink => refLink.split('~~'))\n    .filter(([fromRef, toRef]) => JsonPointer.isSubPointer(toRef, fromRef))\n    .forEach(([fromRef, toRef]) => recursiveRefMap.set(fromRef, toRef));\n  // Second pass - create recursive versions of any other refs that link to recursive refs\n  Array.from(refMap)\n    .filter(([fromRef1, toRef1]) => Array.from(recursiveRefMap.keys())\n      .every(fromRef2 => !JsonPointer.isSubPointer(fromRef1, fromRef2, true))\n    )\n    .forEach(([fromRef1, toRef1]) => Array.from(recursiveRefMap)\n      .filter(([fromRef2, toRef2]) =>\n        !recursiveRefMap.has(fromRef1 + fromRef2.slice(toRef1.length)) &&\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef1, fromRef1, true)\n      )\n      .forEach(([fromRef2, toRef2]) => recursiveRefMap.set(\n        fromRef1 + fromRef2.slice(toRef1.length),\n        fromRef1 + toRef2.slice(toRef1.length)\n      ))\n    );\n\n  // Create compiled schema by replacing all non-recursive $ref links with\n  // thieir linked schemas and, where possible, combining schemas in allOf arrays.\n  let compiledSchema = { ...schema };\n  delete compiledSchema.definitions;\n  compiledSchema =\n    getSubSchema(compiledSchema, '', refLibrary, recursiveRefMap);\n\n  // Make sure all remaining schema $refs are recursive, and build final\n  // schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n  JsonPointer.forEachDeep(compiledSchema, (subSchema, subSchemaPointer) => {\n    if (isString(subSchema['$ref'])) {\n      let refPointer = JsonPointer.compile(subSchema['$ref']);\n      if (!JsonPointer.isSubPointer(refPointer, subSchemaPointer, true)) {\n        refPointer = removeRecursiveReferences(subSchemaPointer, recursiveRefMap);\n        JsonPointer.set(compiledSchema, subSchemaPointer, { $ref: `#${refPointer}` });\n      }\n      if (!hasOwn(schemaRefLibrary, 'refPointer')) {\n        schemaRefLibrary[refPointer] = !refPointer.length ? compiledSchema :\n          getSubSchema(compiledSchema, refPointer, schemaRefLibrary, recursiveRefMap);\n      }\n      if (!schemaRecursiveRefMap.has(subSchemaPointer)) {\n        schemaRecursiveRefMap.set(subSchemaPointer, refPointer);\n      }\n      const fromDataRef = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!dataRecursiveRefMap.has(fromDataRef)) {\n        const toDataRef = JsonPointer.toDataPointer(refPointer, compiledSchema);\n        dataRecursiveRefMap.set(fromDataRef, toDataRef);\n      }\n    }\n    if (subSchema.type === 'array' &&\n      (hasOwn(subSchema, 'items') || hasOwn(subSchema, 'additionalItems'))\n    ) {\n      const dataPointer = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!arrayMap.has(dataPointer)) {\n        const tupleItems = isArray(subSchema.items) ? subSchema.items.length : 0;\n        arrayMap.set(dataPointer, tupleItems);\n      }\n    }\n  }, true);\n  return compiledSchema;\n}\n\n/**\n * 'getSubSchema' function\n *\n * //   schema\n * //  { Pointer } pointer\n * //  { object } schemaRefLibrary\n * //  { Map<string, string> } schemaRecursiveRefMap\n * //  { string[] = [] } usedPointers\n * // \n */\nexport function getSubSchema(\n  schema, pointer, schemaRefLibrary = null,\n  schemaRecursiveRefMap: Map<string, string> = null, usedPointers: string[] = []\n) {\n  if (!schemaRefLibrary || !schemaRecursiveRefMap) {\n    return JsonPointer.getCopy(schema, pointer);\n  }\n  if (typeof pointer !== 'string') { pointer = JsonPointer.compile(pointer); }\n  usedPointers = [ ...usedPointers, pointer ];\n  let newSchema: any = null;\n  if (pointer === '') {\n    newSchema = _.cloneDeep(schema);\n  } else {\n    const shortPointer = removeRecursiveReferences(pointer, schemaRecursiveRefMap);\n    if (shortPointer !== pointer) { usedPointers = [ ...usedPointers, shortPointer ]; }\n    newSchema = JsonPointer.getFirstCopy([\n      [schemaRefLibrary, [shortPointer]],\n      [schema, pointer],\n      [schema, shortPointer]\n    ]);\n  }\n  return JsonPointer.forEachDeepCopy(newSchema, (subSchema, subPointer) => {\n    if (isObject(subSchema)) {\n\n      // Replace non-recursive $ref links with referenced schemas\n      if (isString(subSchema.$ref)) {\n        const refPointer = JsonPointer.compile(subSchema.$ref);\n        if (refPointer.length && usedPointers.every(ptr =>\n          !JsonPointer.isSubPointer(refPointer, ptr, true)\n        )) {\n          const refSchema = getSubSchema(\n            schema, refPointer, schemaRefLibrary, schemaRecursiveRefMap, usedPointers\n          );\n          if (Object.keys(subSchema).length === 1) {\n            return refSchema;\n          } else {\n            const extraKeys = { ...subSchema };\n            delete extraKeys.$ref;\n            return mergeSchemas(refSchema, extraKeys);\n          }\n        }\n      }\n\n      // TODO: Convert schemas with 'type' arrays to 'oneOf'\n\n      // Combine allOf subSchemas\n      if (isArray(subSchema.allOf)) { return combineAllOf(subSchema); }\n\n      // Fix incorrectly placed array object required lists\n      if (subSchema.type === 'array' && isArray(subSchema.required)) {\n        return fixRequiredArrayProperties(subSchema);\n      }\n    }\n    return subSchema;\n  }, true, <string>pointer);\n}\n\n/**\n * 'combineAllOf' function\n *\n * Attempt to convert an allOf schema object into\n * a non-allOf schema object with equivalent rules.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function combineAllOf(schema) {\n  if (!isObject(schema) || !isArray(schema.allOf)) { return schema; }\n  let mergedSchema = mergeSchemas(...schema.allOf);\n  if (Object.keys(schema).length > 1) {\n    const extraKeys = { ...schema };\n    delete extraKeys.allOf;\n    mergedSchema = mergeSchemas(mergedSchema, extraKeys);\n  }\n  return mergedSchema;\n}\n\n/**\n * 'fixRequiredArrayProperties' function\n *\n * Fixes an incorrectly placed required list inside an array schema, by moving\n * it into items.properties or additionalItems.properties, where it belongs.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function fixRequiredArrayProperties(schema) {\n  if (schema.type === 'array' && isArray(schema.required)) {\n    let itemsObject = hasOwn(schema.items, 'properties') ? 'items' :\n      hasOwn(schema.additionalItems, 'properties') ? 'additionalItems' : null;\n    if (itemsObject && !hasOwn(schema[itemsObject], 'required') && (\n      hasOwn(schema[itemsObject], 'additionalProperties') ||\n      schema.required.every(key => hasOwn(schema[itemsObject].properties, key))\n    )) {\n      schema = _.cloneDeep(schema);\n      schema[itemsObject].required = schema.required;\n      delete schema.required;\n    }\n  }\n  return schema;\n}\n","// updated from AJV fast format regular expressions:\n// https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n\nexport const jsonSchemaFormatTests = {\n\n  'date': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n\n  'time': /^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // Modified to allow incomplete entries, such as\n  // \"2000-03-14T01:59:26.535\" (needs \"Z\") or \"2000-03-14T01:59\" (needs \":00Z\")\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d(?::[0-5]\\d)?(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  'email': /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n\n  'hostname': /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,\n\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  'ipv4': /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  'ipv6': /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  'uri': /^(?:[a-z][a-z0-9+-.]*)(?::|\\/)\\/?[^\\s]*$/i,\n\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,\n\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  'uri-template': /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  // @todo Delete current URL in favour of the commented out URL rule when this ajv issue is fixed https://github.com/eslint/eslint/issues/7983.\n  // URL: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  'url': /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i,\n\n  // uuid: http://tools.ietf.org/html/rfc4122\n  'uuid': /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n\n  // optimized https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n  'color': /^\\s*(#(?:[\\da-f]{3}){1,2}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\))\\s*$/gi,\n\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  'json-pointer': /^(?:\\/(?:[^~/]|~0|~1)*)*$|^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n\n  'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n\n  'regex': function(str) {\n    if (/[^\\\\]\\\\Z/.test(str)) { return false; }\n    try {\n      new RegExp(str);\n      return true;\n    } catch(e) {\n      return false;\n    }\n  }\n\n};\n\nexport type JsonSchemaFormatNames =\n  'date'|'time'|'date-time'|'email'|'hostname'|'ipv4'|'ipv6'|\n  'uri'|'uri-reference'|'uri-template'|'url'|'uuid'|'color'|\n  'json-pointer'|'relative-json-pointer'|'regex';\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport * as _ from 'lodash';\n\nimport {\n  _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors,\n  isEmpty, isDefined, hasValue, isString, isNumber, isBoolean, isArray,\n  getType, isType, toJavaScriptType, toObservable, xor, SchemaPrimitiveType,\n  PlainObject, IValidatorFn, AsyncIValidatorFn\n} from './validator.functions';\nimport { forEachCopy } from './utility.functions';\nimport { jsonSchemaFormatTests, JsonSchemaFormatNames } from './format-regex.constants';\n\n/**\n * 'JsonValidators' class\n *\n * Provides an extended set of validators to be used by form controls,\n * compatible with standard JSON Schema validation options.\n * http://json-schema.org/latest/json-schema-validation.html\n *\n * Note: This library is designed as a drop-in replacement for the Angular\n * Validators library, and except for one small breaking change to the 'pattern'\n * validator (described below) it can even be imported as a substitute, like so:\n *\n *   import { JsonValidators as Validators } from 'json-validators';\n *\n * and it should work with existing code as a complete replacement.\n *\n * The one exception is the 'pattern' validator, which has been changed to\n * matche partial values by default (the standard 'pattern' validator wrapped\n * all patterns in '^' and '$', forcing them to always match an entire value).\n * However, the old behavior can be restored by simply adding '^' and '$'\n * around your patterns, or by passing an optional second parameter of TRUE.\n * This change is to make the 'pattern' validator match the behavior of a\n * JSON Schema pattern, which allows partial matches, rather than the behavior\n * of an HTML input control pattern, which does not.\n *\n * This library replaces Angular's validators and combination functions\n * with the following validators and transformation functions:\n *\n * Validators:\n *   For all formControls:     required (*), type, enum, const\n *   For text formControls:    minLength (*), maxLength (*), pattern (*), format\n *   For numeric formControls: maximum, exclusiveMaximum,\n *                             minimum, exclusiveMinimum, multipleOf\n *   For formGroup objects:    minProperties, maxProperties, dependencies\n *   For formArray arrays:     minItems, maxItems, uniqueItems, contains\n *   Not used by JSON Schema:  min (*), max (*), requiredTrue (*), email (*)\n * (Validators originally included with Angular are maked with (*).)\n *\n * NOTE / TODO: The dependencies validator is not complete.\n * NOTE / TODO: The contains validator is not complete.\n *\n * Validators not used by JSON Schema (but included for compatibility)\n * and their JSON Schema equivalents:\n *\n *   Angular validator | JSON Schema equivalent\n *   ------------------|-----------------------\n *     min(number)     |   minimum(number)\n *     max(number)     |   maximum(number)\n *     requiredTrue()  |   const(true)\n *     email()         |   format('email')\n *\n * Validator transformation functions:\n *   composeAnyOf, composeOneOf, composeAllOf, composeNot\n * (Angular's original combination funciton, 'compose', is also included for\n * backward compatibility, though it is functionally equivalent to composeAllOf,\n * asside from its more generic error message.)\n *\n * All validators have also been extended to accept an optional second argument\n * which, if passed a TRUE value, causes the validator to perform the opposite\n * of its original finction. (This is used internally to enable 'not' and\n * 'composeOneOf' to function and return useful error messages.)\n *\n * The 'required' validator has also been overloaded so that if called with\n * a boolean parameter (or no parameters) it returns the original validator\n * function (rather than executing it). However, if it is called with an\n * AbstractControl parameter (as was previously required), it behaves\n * exactly as before.\n *\n * This enables all validators (including 'required') to be constructed in\n * exactly the same way, so they can be automatically applied using the\n * equivalent key names and values taken directly from a JSON Schema.\n *\n * This source code is partially derived from Angular,\n * which is Copyright (c) 2014-2017 Google, Inc.\n * Use of this source code is therefore governed by the same MIT-style license\n * that can be found in the LICENSE file at https://angular.io/license\n *\n * Original Angular Validators:\n * https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n */\nexport class JsonValidators {\n\n  /**\n   * Validator functions:\n   *\n   * For all formControls:     required, type, enum, const\n   * For text formControls:    minLength, maxLength, pattern, format\n   * For numeric formControls: maximum, exclusiveMaximum,\n   *                           minimum, exclusiveMinimum, multipleOf\n   * For formGroup objects:    minProperties, maxProperties, dependencies\n   * For formArray arrays:     minItems, maxItems, uniqueItems, contains\n   *\n   * TODO: finish dependencies validator\n   */\n\n  /**\n   * 'required' validator\n   *\n   * This validator is overloaded, compared to the default required validator.\n   * If called with no parameters, or TRUE, this validator returns the\n   * 'required' validator function (rather than executing it). This matches\n   * the behavior of all other validators in this library.\n   *\n   * If this validator is called with an AbstractControl parameter\n   * (as was previously required) it behaves the same as Angular's default\n   * required validator, and returns an error if the control is empty.\n   *\n   * Old behavior: (if input type = AbstractControl)\n   * // {AbstractControl} control - required control\n   * // {{[key: string]: boolean}} - returns error message if no input\n   *\n   * New behavior: (if no input, or input type = boolean)\n   * // {boolean = true} required? - true to validate, false to disable\n   * // {IValidatorFn} - returns the 'required' validator function itself\n   */\n  static required(input: AbstractControl): ValidationErrors|null;\n  static required(input?: boolean): IValidatorFn;\n\n  static required(input?: AbstractControl|boolean): ValidationErrors|null|IValidatorFn {\n    if (input === undefined) { input = true; }\n    switch (input) {\n      case true: // Return required function (do not execute it yet)\n        return (control: AbstractControl, invert = false): ValidationErrors|null => {\n          if (invert) { return null; } // if not required, always return valid\n          return hasValue(control.value) ? null : { 'required': true };\n        };\n      case false: // Do nothing (if field is not required, it is always valid)\n        return JsonValidators.nullValidator;\n      default: // Execute required function\n        return hasValue((<AbstractControl>input).value) ? null : { 'required': true };\n    }\n  };\n\n  /**\n   * 'type' validator\n   *\n   * Requires a control to only accept values of a specified type,\n   * or one of an array of types.\n   *\n   * Note: SchemaPrimitiveType = 'string'|'number'|'integer'|'boolean'|'null'\n   *\n   * // {SchemaPrimitiveType|SchemaPrimitiveType[]} type - type(s) to accept\n   * // {IValidatorFn}\n   */\n  static type(requiredType: SchemaPrimitiveType|SchemaPrimitiveType[]): IValidatorFn {\n    if (!hasValue(requiredType)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isValid = isArray(requiredType) ?\n        (<SchemaPrimitiveType[]>requiredType).some(type => isType(currentValue, type)) :\n        isType(currentValue, <SchemaPrimitiveType>requiredType);\n      return xor(isValid, invert) ?\n        null : { 'type': { requiredType, currentValue } };\n    };\n  }\n\n  /**\n   * 'enum' validator\n   *\n   * Requires a control to have a value from an enumerated list of values.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null enum values.\n   *\n   * // {any[]} allowedValues - array of acceptable values\n   * // {IValidatorFn}\n   */\n  static enum(allowedValues: any[]): IValidatorFn {\n    if (!isArray(allowedValues)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqual = (enumValue, inputValue) =>\n        enumValue === inputValue ||\n        (isNumber(enumValue) && +inputValue === +enumValue) ||\n        (isBoolean(enumValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === enumValue) ||\n        (enumValue === null && !hasValue(inputValue)) ||\n        _.isEqual(enumValue, inputValue);\n      const isValid = isArray(currentValue) ?\n        currentValue.every(inputValue => allowedValues.some(enumValue =>\n          isEqual(enumValue, inputValue)\n        )) :\n        allowedValues.some(enumValue => isEqual(enumValue, currentValue));\n      return xor(isValid, invert) ?\n        null : { 'enum': { allowedValues, currentValue } };\n    };\n  }\n\n  /**\n   * 'const' validator\n   *\n   * Requires a control to have a specific value.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null values.\n   *\n   * TODO: modify to work with objects\n   *\n   * // {any[]} requiredValue - required value\n   * // {IValidatorFn}\n   */\n  static const(requiredValue: any): IValidatorFn {\n    if (!hasValue(requiredValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqual = (constValue, inputValue) =>\n        constValue === inputValue ||\n        isNumber(constValue) && +inputValue === +constValue ||\n        isBoolean(constValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === constValue ||\n        constValue === null && !hasValue(inputValue);\n      const isValid = isEqual(requiredValue, currentValue);\n      return xor(isValid, invert) ?\n        null : { 'const': { requiredValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minLength' validator\n   *\n   * Requires a control's text value to be greater than a specified length.\n   *\n   * // {number} minimumLength - minimum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static minLength(minimumLength: number): IValidatorFn {\n    if (!hasValue(minimumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let currentLength = isString(control.value) ? control.value.length : 0;\n      let isValid = currentLength >= minimumLength;\n      return xor(isValid, invert) ?\n        null : { 'minLength': { minimumLength, currentLength } };\n    };\n  };\n\n  /**\n   * 'maxLength' validator\n   *\n   * Requires a control's text value to be less than a specified length.\n   *\n   * // {number} maximumLength - maximum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static maxLength(maximumLength: number): IValidatorFn {\n    if (!hasValue(maximumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      let currentLength = isString(control.value) ? control.value.length : 0;\n      let isValid = currentLength <= maximumLength;\n      return xor(isValid, invert) ?\n        null : { 'maxLength': { maximumLength, currentLength } };\n    };\n  };\n\n  /**\n   * 'pattern' validator\n   *\n   * Note: NOT the same as Angular's default pattern validator.\n   *\n   * Requires a control's value to match a specified regular expression pattern.\n   *\n   * This validator changes the behavior of default pattern validator\n   * by replacing RegExp(`^${pattern}$`) with RegExp(`${pattern}`),\n   * which allows for partial matches.\n   *\n   * To return to the default funcitonality, and match the entire string,\n   * pass TRUE as the optional second parameter.\n   *\n   * // {string} pattern - regular expression pattern\n   * // {boolean = false} wholeString - match whole value string?\n   * // {IValidatorFn}\n   */\n  static pattern(pattern: string|RegExp, wholeString = false): IValidatorFn {\n    if (!hasValue(pattern)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let regex: RegExp;\n      let requiredPattern: string;\n      if (typeof pattern === 'string') {\n        requiredPattern = (wholeString) ? `^${pattern}$` : pattern;\n        regex = new RegExp(requiredPattern);\n      } else {\n        requiredPattern = pattern.toString();\n        regex = pattern;\n      }\n      let currentValue: string = control.value;\n      let isValid = isString(currentValue) ? regex.test(currentValue) : false;\n      return xor(isValid, invert) ?\n        null : { 'pattern': { requiredPattern, currentValue } };\n    };\n  }\n\n  /**\n   * 'format' validator\n   *\n   * Requires a control to have a value of a certain format.\n   *\n   * This validator currently checks the following formsts:\n   *   date, time, date-time, email, hostname, ipv4, ipv6,\n   *   uri, uri-reference, uri-template, url, uuid, color,\n   *   json-pointer, relative-json-pointer, regex\n   *\n   * Fast format regular expressions copied from AJV:\n   * https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n   *\n   * // {JsonSchemaFormatNames} requiredFormat - format to check\n   * // {IValidatorFn}\n   */\n  static format(requiredFormat: JsonSchemaFormatNames): IValidatorFn {\n    if (!hasValue(requiredFormat)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let isValid: boolean;\n      let currentValue: string|Date = control.value;\n      if (isString(currentValue)) {\n        const formatTest: Function|RegExp = jsonSchemaFormatTests[requiredFormat];\n        if (typeof formatTest === 'object') {\n          isValid = (<RegExp>formatTest).test(<string>currentValue);\n        } else if (typeof formatTest === 'function') {\n          isValid = (<Function>formatTest)(<string>currentValue);\n        } else {\n          console.error(`format validator error: \"${requiredFormat}\" is not a recognized format.`);\n          isValid = true;\n        }\n      } else {\n        // Allow JavaScript Date objects\n        isValid = ['date', 'time', 'date-time'].includes(requiredFormat) &&\n          Object.prototype.toString.call(currentValue) === '[object Date]';\n      }\n      return xor(isValid, invert) ?\n        null : { 'format': { requiredFormat, currentValue } };\n    };\n  }\n\n  /**\n   * 'minimum' validator\n   *\n   * Requires a control's numeric value to be greater than or equal to\n   * a minimum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a minimum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} minimum - minimum allowed value\n   * // {IValidatorFn}\n   */\n  static minimum(minimumValue: number): IValidatorFn {\n    if (!hasValue(minimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let currentValue = control.value;\n      let isValid = !isNumber(currentValue) || currentValue >= minimumValue;\n      return xor(isValid, invert) ?\n        null : { 'minimum': { minimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMinimum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMinimumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMinimum(exclusiveMinimumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMinimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let currentValue = control.value;\n      let isValid = !isNumber(currentValue) || +currentValue < exclusiveMinimumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMinimum': { exclusiveMinimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'maximum' validator\n   *\n   * Requires a control's numeric value to be less than or equal to\n   * a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} maximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static maximum(maximumValue: number): IValidatorFn {\n    if (!hasValue(maximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let currentValue = control.value;\n      let isValid = !isNumber(currentValue) || +currentValue <= maximumValue;\n      return xor(isValid, invert) ?\n        null : { 'maximum': { maximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMaximum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMaximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMaximum(exclusiveMaximumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMaximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let currentValue = control.value;\n      let isValid = !isNumber(currentValue) || +currentValue < exclusiveMaximumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMaximum': { exclusiveMaximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'multipleOf' validator\n   *\n   * Requires a control to have a numeric value that is a multiple\n   * of a specified number.\n   *\n   * // {number} multipleOfValue - number value must be a multiple of\n   * // {IValidatorFn}\n   */\n  static multipleOf(multipleOfValue: number): IValidatorFn {\n    if (!hasValue(multipleOfValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let currentValue = control.value;\n      let isValid = isNumber(currentValue) &&\n        currentValue % multipleOfValue === 0;\n      return xor(isValid, invert) ?\n        null : { 'multipleOf': { multipleOfValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minProperties' validator\n   *\n   * Requires a form group to have a minimum number of properties (i.e. have\n   * values entered in a minimum number of controls within the group).\n   *\n   * // {number} minimumProperties - minimum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static minProperties(minimumProperties: number): IValidatorFn {\n    if (!hasValue(minimumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let currentProperties = Object.keys(control.value).length || 0;\n      let isValid = currentProperties >= minimumProperties;\n      return xor(isValid, invert) ?\n        null : { 'minProperties': { minimumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'maxProperties' validator\n   *\n   * Requires a form group to have a maximum number of properties (i.e. have\n   * values entered in a maximum number of controls within the group).\n   *\n   * Note: Has no effect if the form group does not contain more than the\n   * maximum number of controls.\n   *\n   * // {number} maximumProperties - maximum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static maxProperties(maximumProperties: number): IValidatorFn {\n    if (!hasValue(maximumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      let currentProperties = Object.keys(control.value).length || 0;\n      let isValid = currentProperties <= maximumProperties;\n      return xor(isValid, invert) ?\n        null : { 'maxProperties': { maximumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'dependencies' validator\n   *\n   * Requires the controls in a form group to meet additional validation\n   * criteria, depending on the values of other controls in the group.\n   *\n   * Examples:\n   * https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies\n   *\n   * // {any} dependencies - required dependencies\n   * // {IValidatorFn}\n   */\n  static dependencies(dependencies: any): IValidatorFn {\n    if (getType(dependencies) !== 'object' || isEmpty(dependencies)) {\n      return JsonValidators.nullValidator;\n    }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let allErrors = _mergeObjects(\n        forEachCopy(dependencies, (value, requiringField) => {\n          if (!hasValue(control.value[requiringField])) { return null; }\n          let requiringFieldErrors: ValidationErrors = { };\n          let requiredFields: string[];\n          let properties: ValidationErrors = { };\n          if (getType(dependencies[requiringField]) === 'array') {\n            requiredFields = dependencies[requiringField];\n          } else if (getType(dependencies[requiringField]) === 'object') {\n            requiredFields = dependencies[requiringField]['required'] || [];\n            properties = dependencies[requiringField]['properties'] || { };\n          }\n\n          // Validate property dependencies\n          for (let requiredField of requiredFields) {\n            if (xor(!hasValue(control.value[requiredField]), invert)) {\n              requiringFieldErrors[requiredField] = { 'required': true };\n            }\n          }\n\n          // Validate schema dependencies\n          requiringFieldErrors = _mergeObjects(requiringFieldErrors,\n            forEachCopy(properties, (requirements, requiredField) => {\n              let requiredFieldErrors = _mergeObjects(\n                forEachCopy(requirements, (requirement, parameter) => {\n                  let validator: IValidatorFn = null;\n                  if (requirement === 'maximum' || requirement === 'minimum') {\n                    let exclusive = !!requirements['exclusiveM' + requirement.slice(1)];\n                    validator = JsonValidators[requirement](parameter, exclusive);\n                  } else if (typeof JsonValidators[requirement] === 'function') {\n                    validator = JsonValidators[requirement](parameter);\n                  }\n                  return !isDefined(validator) ?\n                    null : validator(control.value[requiredField]);\n                })\n              );\n              return isEmpty(requiredFieldErrors) ?\n                null : { [requiredField]: requiredFieldErrors };\n            })\n          );\n          return isEmpty(requiringFieldErrors) ?\n            null : { [requiringField]: requiringFieldErrors };\n        })\n      );\n      return isEmpty(allErrors) ? null : allErrors;\n    };\n  }\n\n  /**\n   * 'minItems' validator\n   *\n   * Requires a form array to have a minimum number of values.\n   *\n   * // {number} minimumItems - minimum number of items allowed\n   * // {IValidatorFn}\n   */\n  static minItems(minimumItems: number): IValidatorFn {\n    if (!hasValue(minimumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let currentItems = isArray(control.value) ? control.value.length : 0;\n      let isValid = currentItems >= minimumItems;\n      return xor(isValid, invert) ?\n        null : { 'minItems': { minimumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'maxItems' validator\n   *\n   * Requires a form array to have a maximum number of values.\n   *\n   * // {number} maximumItems - maximum number of items allowed\n   * // {IValidatorFn}\n   */\n  static maxItems(maximumItems: number): IValidatorFn {\n    if (!hasValue(maximumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      let currentItems = isArray(control.value) ? control.value.length : 0;\n      let isValid = currentItems <= maximumItems;\n      return xor(isValid, invert) ?\n        null : { 'maxItems': { maximumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'uniqueItems' validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static uniqueItems(unique = true): IValidatorFn {\n    if (!unique) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let sorted: any[] = control.value.slice().sort();\n      let duplicateItems = [];\n      for (let i = 1; i < sorted.length; i++) {\n        if (sorted[i - 1] === sorted[i] && duplicateItems.includes(sorted[i])) {\n          duplicateItems.push(sorted[i]);\n        }\n      }\n      let isValid = !duplicateItems.length;\n      return xor(isValid, invert) ?\n        null : { 'uniqueItems': { duplicateItems } };\n    };\n  }\n\n  /**\n   * 'contains' validator\n   *\n   * TODO: Complete this validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static contains(requiredItem = true): IValidatorFn {\n    if (!requiredItem) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value) || !isArray(control.value)) { return null; }\n      const currentItems = control.value;\n      // const isValid = currentItems.some(item =>\n      //\n      // );\n      const isValid = true;\n      return xor(isValid, invert) ?\n        null : { 'contains': { requiredItem, currentItems } };\n    };\n  }\n\n  /**\n   * No-op validator. Included for backward compatibility.\n   */\n  static nullValidator(control: AbstractControl): ValidationErrors|null {\n    return null;\n  }\n\n  /**\n   * Validator transformation functions:\n   * composeAnyOf, composeOneOf, composeAllOf, composeNot,\n   * compose, composeAsync\n   *\n   * TODO: Add composeAnyOfAsync, composeOneOfAsync,\n   *           composeAllOfAsync, composeNotAsync\n   */\n\n  /**\n   * 'composeAnyOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid if any one or more of the submitted validators are\n   * valid. If every validator is invalid, it returns combined errors from\n   * all validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAnyOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    let presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      let arrayOfErrors =\n        _executeValidators(control, presentValidators, invert).filter(isDefined);\n      let isValid = validators.length > arrayOfErrors.length;\n      return xor(isValid, invert) ?\n        null : _mergeObjects(...arrayOfErrors, { 'anyOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeOneOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if exactly one of the submitted validators\n   * is valid. Otherwise returns combined information from all validators,\n   * both valid and invalid.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeOneOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    let presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      let arrayOfErrors =\n        _executeValidators(control, presentValidators);\n      let validControls =\n        validators.length - arrayOfErrors.filter(isDefined).length;\n      let isValid = validControls === 1;\n      if (xor(isValid, invert)) { return null; }\n      let arrayOfValids =\n        _executeValidators(control, presentValidators, invert);\n      return _mergeObjects(...arrayOfErrors, ...arrayOfValids, { 'oneOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeAllOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if all the submitted validators are individually\n   * valid. Otherwise it returns combined errors from all invalid validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAllOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    let presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      let combinedErrors = _mergeErrors(\n        _executeValidators(control, presentValidators, invert)\n      );\n      let isValid = combinedErrors === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(combinedErrors, { 'allOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeNot' validator inversion function\n   *\n   * Accepts a single validator function and inverts its result.\n   * Returns valid if the submitted validator is invalid, and\n   * returns invalid if the submitted validator is valid.\n   * (Note: this function can itself be inverted\n   *   - e.g. composeNot(composeNot(validator)) -\n   *   but this can be confusing and is therefore not recommended.)\n   *\n   * // {IValidatorFn[]} validators - validator(s) to invert\n   * // {IValidatorFn} - new validator function that returns opposite result\n   */\n  static composeNot(validator: IValidatorFn): IValidatorFn {\n    if (!validator) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let error = validator(control, !invert);\n      let isValid = error === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(error, { 'not': !invert });\n    };\n  }\n\n  /**\n   * 'compose' validator combination function\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static compose(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    let presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null =>\n      _mergeErrors(_executeValidators(control, presentValidators, invert));\n  };\n\n  /**\n   * 'composeAsync' async validator combination function\n   *\n   * // {AsyncIValidatorFn[]} async validators - array of async validators\n   * // {AsyncIValidatorFn} - single combined async validator function\n   */\n  static composeAsync(validators: AsyncIValidatorFn[]): AsyncIValidatorFn {\n    if (!validators) { return null; }\n    let presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl) => {\n      const observables =\n        _executeAsyncValidators(control, presentValidators).map(toObservable);\n      return map.call(forkJoin(observables), _mergeErrors);\n    }\n  }\n\n  // Additional angular validators (not used by Angualr JSON Schema Form)\n  // From https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n\n  /**\n   * Validator that requires controls to have a value greater than a number.\n   */\n  static min(min: number): ValidatorFn {\n    if (!hasValue(min)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(min)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n      return isNaN(value) || value >= min ? null : { 'min': { min, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires controls to have a value less than a number.\n   */\n  static max(max: number): ValidatorFn {\n    if (!hasValue(max)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(max)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n      return isNaN(value) || value <= max ? null : { 'max': { max, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires control value to be true.\n   */\n  static requiredTrue(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    return control.value === true ? null : { 'required': true };\n  }\n\n  /**\n   * Validator that performs email validation.\n   */\n  static email(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    const EMAIL_REGEXP =\n      /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n  }\n}\n","import {\n  AbstractControl, FormArray, FormControl, FormGroup, ValidatorFn\n} from '@angular/forms';\n\nimport * as _ from 'lodash';\n\nimport {\n  hasValue, inArray, isArray, isEmpty, isDate, isObject, isDefined, isPrimitive,\n  toJavaScriptType, toSchemaType, SchemaPrimitiveType\n} from './validator.functions';\nimport { forEach, hasOwn } from './utility.functions';\nimport { Pointer, JsonPointer } from './jsonpointer.functions';\nimport { JsonValidators } from './json.validators';\nimport {\n  combineAllOf, getControlValidators, getSubSchema, removeRecursiveReferences\n} from './json-schema.functions';\n\n/**\n * FormGroup function library:\n *\n * buildFormGroupTemplate:  Builds a FormGroupTemplate from schema\n *\n * buildFormGroup:          Builds an Angular FormGroup from a FormGroupTemplate\n *\n * mergeValues:\n *\n * setRequiredFields:\n *\n * formatFormData:\n *\n * getControl:\n *\n * ---- TODO: ----\n * TODO: add buildFormGroupTemplateFromLayout function\n * buildFormGroupTemplateFromLayout: Builds a FormGroupTemplate from a form layout\n */\n\n/**\n * 'buildFormGroupTemplate' function\n *\n * Builds a template for an Angular FormGroup from a JSON Schema.\n *\n * TODO: add support for pattern properties\n * https://spacetelescope.github.io/understanding-json-schema/reference/object.html\n *\n * //  {any} jsf -\n * //  {any = null} nodeValue -\n * //  {boolean = true} mapArrays -\n * //  {string = ''} schemaPointer -\n * //  {string = ''} dataPointer -\n * //  {any = ''} templatePointer -\n * // {any} -\n */\nexport function buildFormGroupTemplate(\n  jsf: any, nodeValue: any = null, setValues = true,\n  schemaPointer = '', dataPointer = '', templatePointer = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (setValues) {\n    if (!isDefined(nodeValue) && (\n      jsf.formOptions.setSchemaDefaults === true ||\n      (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n    )) {\n      nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n    }\n  } else {\n    nodeValue = null;\n  }\n  // TODO: If nodeValue still not set, check layout for default value\n  const schemaType: string | string[] = JsonPointer.get(schema, '/type');\n  let controlType =\n    (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) &&\n      schemaType === 'object' ? 'FormGroup' :\n    (hasOwn(schema, 'items') || hasOwn(schema, 'additionalItems')) &&\n      schemaType === 'array' ? 'FormArray' :\n    !schemaType && hasOwn(schema, '$ref') ? '$ref' : 'FormControl';\n  const shortDataPointer =\n    removeRecursiveReferences(dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap);\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeOptions = jsf.dataMap.get(shortDataPointer);\n  if (!nodeOptions.has('schemaType')) {\n    nodeOptions.set('schemaPointer', schemaPointer);\n    nodeOptions.set('schemaType', schema.type);\n    if (schema.format) {\n      nodeOptions.set('schemaFormat', schema.format);\n      if (!schema.type) { nodeOptions.set('schemaType', 'string'); }\n    }\n    if (controlType) {\n      nodeOptions.set('templatePointer', templatePointer);\n      nodeOptions.set('templateType', controlType);\n    }\n  }\n  let controls: any;\n  let validators = getControlValidators(schema);\n  switch (controlType) {\n\n    case 'FormGroup':\n      controls = {};\n      if (hasOwn(schema, 'ui:order') || hasOwn(schema, 'properties')) {\n        let propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n        if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n          const unnamedKeys = Object.keys(schema.properties)\n            .filter(key => !propertyKeys.includes(key));\n          for (let i = propertyKeys.length - 1; i >= 0; i--) {\n            if (propertyKeys[i] === '*') {\n              propertyKeys.splice(i, 1, ...unnamedKeys);\n            }\n          }\n        }\n        propertyKeys\n          .filter(key => hasOwn(schema.properties, key) ||\n            hasOwn(schema, 'additionalProperties')\n          )\n          .forEach(key => controls[key] = buildFormGroupTemplate(\n            jsf, JsonPointer.get(nodeValue, [<string>key]), setValues,\n            schemaPointer + (hasOwn(schema.properties, key) ?\n              '/properties/' + key : '/additionalProperties'\n            ),\n            dataPointer + '/' + key,\n            templatePointer + '/controls/' + key\n          ));\n        jsf.formOptions.fieldsRequired = setRequiredFields(schema, controls);\n      }\n      return { controlType, controls, validators };\n\n    case 'FormArray':\n      controls = [];\n      const minItems =\n        Math.max(schema.minItems || 0, nodeOptions.get('minItems') || 0);\n      const maxItems =\n        Math.min(schema.maxItems || 1000, nodeOptions.get('maxItems') || 1000);\n      let additionalItemsPointer: string = null;\n      if (isArray(schema.items)) { // 'items' is an array = tuple items\n        const tupleItems = nodeOptions.get('tupleItems') ||\n          (isArray(schema.items) ? Math.min(schema.items.length, maxItems) : 0);\n        for (let i = 0; i < tupleItems; i++) {\n          if (i < minItems) {\n            controls.push(buildFormGroupTemplate(\n              jsf, isArray(nodeValue) ? nodeValue[i] : nodeValue, setValues,\n              schemaPointer + '/items/' + i,\n              dataPointer + '/' + i,\n              templatePointer + '/controls/' + i\n            ));\n          } else {\n            const schemaRefPointer = removeRecursiveReferences(\n              schemaPointer + '/items/' + i, jsf.schemaRecursiveRefMap\n            );\n            const itemRefPointer = removeRecursiveReferences(\n              shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n            );\n            const itemRecursive = itemRefPointer !== shortDataPointer + '/' + i;\n            if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n              jsf.templateRefLibrary[itemRefPointer] = null;\n              jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n                jsf, null, setValues,\n                schemaRefPointer,\n                itemRefPointer,\n                templatePointer + '/controls/' + i\n              );\n            }\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaPointer + '/items/' + i,\n                  dataPointer + '/' + i,\n                  templatePointer + '/controls/' + i\n                ) :\n              itemRecursive ?\n                null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n\n        // If 'additionalItems' is an object = additional list items (after tuple items)\n        if (schema.items.length < maxItems && isObject(schema.additionalItems)) {\n          additionalItemsPointer = schemaPointer + '/additionalItems';\n        }\n\n      // If 'items' is an object = list items only (no tuple items)\n      } else {\n        additionalItemsPointer = schemaPointer + '/items';\n      }\n\n      if (additionalItemsPointer) {\n        const schemaRefPointer = removeRecursiveReferences(\n          additionalItemsPointer, jsf.schemaRecursiveRefMap\n        );\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = itemRefPointer !== shortDataPointer + '/-';\n        if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n          jsf.templateRefLibrary[itemRefPointer] = null;\n          jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n            jsf, null, setValues,\n            schemaRefPointer,\n            itemRefPointer,\n            templatePointer + '/controls/-'\n          );\n        }\n        // const itemOptions = jsf.dataMap.get(itemRefPointer) || new Map();\n        const itemOptions = nodeOptions;\n        if (!itemRecursive || hasOwn(validators, 'required')) {\n          const arrayLength = Math.min(Math.max(\n            itemRecursive ? 0 :\n              (itemOptions.get('tupleItems') + itemOptions.get('listItems')) || 0,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), maxItems);\n          for (let i = controls.length; i < arrayLength; i++) {\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaRefPointer,\n                  dataPointer + '/-',\n                  templatePointer + '/controls/-'\n                ) :\n                itemRecursive ?\n                  null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n      }\n      return { controlType, controls, validators };\n\n    case '$ref':\n      const schemaRef = JsonPointer.compile(schema.$ref);\n      const dataRef = JsonPointer.toDataPointer(schemaRef, schema);\n      const refPointer = removeRecursiveReferences(\n        dataRef, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      if (refPointer && !hasOwn(jsf.templateRefLibrary, refPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.templateRefLibrary[refPointer] = null;\n        const newTemplate = buildFormGroupTemplate(jsf, setValues, setValues, schemaRef);\n        if (newTemplate) {\n          jsf.templateRefLibrary[refPointer] = newTemplate;\n        } else {\n          delete jsf.templateRefLibrary[refPointer];\n        }\n      }\n      return null;\n\n    case 'FormControl':\n      const value = {\n        value: setValues && isPrimitive(nodeValue) ? nodeValue : null,\n        disabled: nodeOptions.get('disabled') || false\n      };\n      return { controlType, value, validators };\n\n    default:\n      return null;\n  }\n}\n\n/**\n * 'buildFormGroup' function\n *\n * // {any} template -\n * // {AbstractControl}\n*/\nexport function buildFormGroup(template: any): AbstractControl {\n  let validatorFns: ValidatorFn[] = [];\n  let validatorFn: ValidatorFn = null;\n  if (hasOwn(template, 'validators')) {\n    forEach(template.validators, (parameters, validator) => {\n      if (typeof JsonValidators[validator] === 'function') {\n        validatorFns.push(JsonValidators[validator].apply(null, parameters));\n      }\n    });\n    if (validatorFns.length &&\n      inArray(template.controlType, ['FormGroup', 'FormArray'])\n    ) {\n      validatorFn = validatorFns.length > 1 ?\n        JsonValidators.compose(validatorFns) : validatorFns[0];\n    }\n  }\n  if (hasOwn(template, 'controlType')) {\n    switch (template.controlType) {\n      case 'FormGroup':\n        let groupControls: { [key: string]: AbstractControl } = {};\n        forEach(template.controls, (controls, key) => {\n          let newControl: AbstractControl = buildFormGroup(controls);\n          if (newControl) { groupControls[key] = newControl; }\n        });\n        return new FormGroup(groupControls, validatorFn);\n      case 'FormArray':\n        return new FormArray(_.filter(_.map(template.controls,\n          controls => buildFormGroup(controls)\n        )), validatorFn);\n      case 'FormControl':\n        return new FormControl(template.value, validatorFns);\n    }\n  }\n  return null;\n}\n\n/**\n * 'mergeValues' function\n *\n * //  {any[]} ...valuesToMerge - Multiple values to merge\n * // {any} - Merged values\n */\nexport function mergeValues(...valuesToMerge) {\n  let mergedValues: any = null;\n  for (let currentValue of valuesToMerge) {\n    if (!isEmpty(currentValue)) {\n      if (typeof currentValue === 'object' &&\n        (isEmpty(mergedValues) || typeof mergedValues !== 'object')\n      ) {\n        if (isArray(currentValue)) {\n          mergedValues = [ ...currentValue ];\n        } else if (isObject(currentValue)) {\n          mergedValues = { ...currentValue };\n        }\n      } else if (typeof currentValue !== 'object') {\n        mergedValues = currentValue;\n      } else if (isObject(mergedValues) && isObject(currentValue)) {\n        Object.assign(mergedValues, currentValue);\n      } else if (isObject(mergedValues) && isArray(currentValue)) {\n        let newValues = [];\n        for (let value of currentValue) {\n          newValues.push(mergeValues(mergedValues, value));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isObject(currentValue)) {\n        let newValues = [];\n        for (let value of mergedValues) {\n          newValues.push(mergeValues(value, currentValue));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isArray(currentValue)) {\n        let newValues = [];\n        for (let i = 0; i < Math.max(mergedValues.length, currentValue.length); i++) {\n          if (i < mergedValues.length && i < currentValue.length) {\n            newValues.push(mergeValues(mergedValues[i], currentValue[i]));\n          } else if (i < mergedValues.length) {\n            newValues.push(mergedValues[i]);\n          } else if (i < currentValue.length) {\n            newValues.push(currentValue[i]);\n          }\n        }\n        mergedValues = newValues;\n      }\n    }\n  }\n  return mergedValues;\n}\n\n/**\n * 'setRequiredFields' function\n *\n * // {schema} schema - JSON Schema\n * // {object} formControlTemplate - Form Control Template object\n * // {boolean} - true if any fields have been set to required, false if not\n */\nexport function setRequiredFields(schema: any, formControlTemplate: any): boolean {\n  let fieldsRequired = false;\n  if (hasOwn(schema, 'required') && !isEmpty(schema.required)) {\n    fieldsRequired = true;\n    let requiredArray = isArray(schema.required) ? schema.required : [schema.required];\n    requiredArray = forEach(requiredArray,\n      key => JsonPointer.set(formControlTemplate, '/' + key + '/validators/required', [])\n    );\n  }\n  return fieldsRequired;\n\n  // TODO: Add support for patternProperties\n  // https://spacetelescope.github.io/understanding-json-schema/reference/object.html#pattern-properties\n}\n\n/**\n * 'formatFormData' function\n *\n * // {any} formData - Angular FormGroup data object\n * // {Map<string, any>} dataMap -\n * // {Map<string, string>} recursiveRefMap -\n * // {Map<string, number>} arrayMap -\n * // {boolean = false} fixErrors - if TRUE, tries to fix data\n * // {any} - formatted data object\n */\nexport function formatFormData(\n  formData: any, dataMap: Map<string, any>,\n  recursiveRefMap: Map<string, string>, arrayMap: Map<string, number>,\n  returnEmptyFields = false, fixErrors = false\n): any {\n  if (formData === null || typeof formData !== 'object') { return formData }\n  let formattedData = isArray(formData) ? [] : {};\n  JsonPointer.forEachDeep(formData, (value, dataPointer) => {\n\n    // If returnEmptyFields === true,\n    // add empty arrays and objects to all allowed keys\n    if (returnEmptyFields && isArray(value)) {\n      JsonPointer.set(formattedData, dataPointer, []);\n    } else if (returnEmptyFields && isObject(value) && !isDate(value)) {\n      JsonPointer.set(formattedData, dataPointer, {});\n    } else {\n      let genericPointer =\n        JsonPointer.has(dataMap, [dataPointer, 'schemaType']) ? dataPointer :\n          removeRecursiveReferences(dataPointer, recursiveRefMap, arrayMap);\n      if (JsonPointer.has(dataMap, [genericPointer, 'schemaType'])) {\n        const schemaType: SchemaPrimitiveType | SchemaPrimitiveType[] =\n          dataMap.get(genericPointer).get('schemaType');\n        if (schemaType === 'null') {\n          JsonPointer.set(formattedData, dataPointer, null);\n        } else if ((hasValue(value) || returnEmptyFields) &&\n          inArray(schemaType, ['string', 'integer', 'number', 'boolean'])\n        ) {\n          const newValue = (fixErrors || (value === null && returnEmptyFields)) ?\n            toSchemaType(value, schemaType) : toJavaScriptType(value, schemaType);\n          if (isDefined(newValue) || returnEmptyFields) {\n            JsonPointer.set(formattedData, dataPointer, newValue);\n          }\n\n        // If returnEmptyFields === false,\n        // only add empty arrays and objects to required keys\n        } else if (schemaType === 'object' && !returnEmptyFields) {\n          (dataMap.get(genericPointer).get('required') || []).forEach(key => {\n            const keySchemaType =\n              dataMap.get(`${genericPointer}/${key}`).get('schemaType');\n            if (keySchemaType === 'array') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, []);\n            } else if (keySchemaType === 'object') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, {});\n            }\n          });\n        }\n\n        // Finish incomplete 'date-time' entries\n        if (dataMap.get(genericPointer).get('schemaFormat') === 'date-time') {\n          // \"2000-03-14T01:59:26.535\" -> \"2000-03-14T01:59:26.535Z\" (add \"Z\")\n          if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}Z`);\n          // \"2000-03-14T01:59\" -> \"2000-03-14T01:59:00Z\" (add \":00Z\")\n          } else if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00Z`);\n          // \"2000-03-14\" -> \"2000-03-14T00:00:00Z\" (add \"T00:00:00Z\")\n          } else if (fixErrors && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00:00:00Z`);\n          }\n        }\n      } else if (typeof value !== 'object' || isDate(value) ||\n        (value === null && returnEmptyFields)\n      ) {\n        console.error('formatFormData error: ' +\n          `Schema type not found for form value at ${genericPointer}`);\n        console.error('dataMap', dataMap);\n        console.error('recursiveRefMap', recursiveRefMap);\n        console.error('genericPointer', genericPointer);\n      }\n    }\n  });\n  return formattedData;\n}\n\n/**\n * 'getControl' function\n *\n * Uses a JSON Pointer for a data object to retrieve a control from\n * an Angular formGroup or formGroup template. (Note: though a formGroup\n * template is much simpler, its basic structure is idential to a formGroup).\n *\n * If the optional third parameter 'returnGroup' is set to TRUE, the group\n * containing the control is returned, rather than the control itself.\n *\n * // {FormGroup} formGroup - Angular FormGroup to get value from\n * // {Pointer} dataPointer - JSON Pointer (string or array)\n * // {boolean = false} returnGroup - If true, return group containing control\n * // {group} - Located value (or null, if no control found)\n */\nexport function getControl(\n  formGroup: any, dataPointer: Pointer, returnGroup = false\n): any {\n  if (!isObject(formGroup) || !JsonPointer.isJsonPointer(dataPointer)) {\n    if (!JsonPointer.isJsonPointer(dataPointer)) {\n      // If dataPointer input is not a valid JSON pointer, check to\n      // see if it is instead a valid object path, using dot notaion\n      if (typeof dataPointer === 'string') {\n        const formControl = formGroup.get(dataPointer);\n        if (formControl) { return formControl; }\n      }\n      console.error(`getControl error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (!isObject(formGroup)) {\n      console.error(`getControl error: Invalid formGroup: ${formGroup}`);\n    }\n    return null;\n  }\n  let dataPointerArray = JsonPointer.parse(dataPointer);\n  if (returnGroup) { dataPointerArray = dataPointerArray.slice(0, -1); }\n\n  // If formGroup input is a real formGroup (not a formGroup template)\n  // try using formGroup.get() to return the control\n  if (typeof formGroup.get === 'function' &&\n    dataPointerArray.every(key => key.indexOf('.') === -1)\n  ) {\n    const formControl = formGroup.get(dataPointerArray.join('.'));\n    if (formControl) { return formControl; }\n  }\n\n  // If formGroup input is a formGroup template,\n  // or formGroup.get() failed to return the control,\n  // search the formGroup object for dataPointer's control\n  let subGroup = formGroup;\n  for (let key of dataPointerArray) {\n    if (hasOwn(subGroup, 'controls')) { subGroup = subGroup.controls; }\n    if (isArray(subGroup) && (key === '-')) {\n      subGroup = subGroup[subGroup.length - 1];\n    } else if (hasOwn(subGroup, key)) {\n      subGroup = subGroup[key];\n    } else {\n      console.error(`getControl error: Unable to find \"${key}\" item in FormGroup.`);\n      console.error(dataPointer);\n      console.error(formGroup);\n      return;\n    }\n  }\n  return subGroup;\n}\n","import { BehaviorSubject } from 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { TitleMapItem } from '../json-schema-form.service';\nimport {\n  inArray, isArray, isEmpty, isNumber, isObject, isDefined, isString\n} from './validator.functions';\nimport { copy, fixTitle, forEach, hasOwn } from './utility.functions';\nimport { Pointer, JsonPointer } from './jsonpointer.functions';\nimport {\n  getFromSchema, getInputType, getSubSchema, checkInlineType, isInputRequired,\n  removeRecursiveReferences, updateInputOptions\n} from './json-schema.functions';\nimport { buildFormGroupTemplate, getControl } from './form-group.functions';\n\n/**\n * Layout function library:\n *\n * buildLayout:            Builds a complete layout from an input layout and schema\n *\n * buildLayoutFromSchema:  Builds a complete layout entirely from an input schema\n *\n * mapLayout:\n *\n * getLayoutNode:\n *\n * buildTitleMap:\n */\n\n/**\n * 'buildLayout' function\n *\n * //   jsf\n * //   widgetLibrary\n * // \n */\nexport function buildLayout(jsf, widgetLibrary) {\n  let hasSubmitButton = !JsonPointer.get(jsf, '/formOptions/addSubmit');\n  const formLayout = mapLayout(jsf.layout, (layoutItem, index, layoutPointer) => {\n    let currentIndex = index;\n    let newNode: any = {\n      _id: _.uniqueId(),\n      options: {},\n    };\n    if (isObject(layoutItem)) {\n      Object.assign(newNode, layoutItem);\n      Object.keys(newNode)\n        .filter(option => !inArray(option, [\n          '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n          'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n        ]))\n        .forEach(option => {\n          newNode.options[option] = newNode[option];\n          delete newNode[option];\n        });\n      if (!hasOwn(newNode, 'type') && isString(newNode.widget)) {\n        newNode.type = newNode.widget;\n        delete newNode.widget;\n      }\n      if (!hasOwn(newNode.options, 'title')) {\n        if (hasOwn(newNode.options, 'legend')) {\n          newNode.options.title = newNode.options.legend;\n          delete newNode.options.legend;\n        }\n      }\n      if (!hasOwn(newNode.options, 'validationMessages')) {\n        if (hasOwn(newNode.options, 'errorMessages')) {\n          newNode.options.validationMessages = newNode.options.errorMessages;\n          delete newNode.options.errorMessages;\n\n        // Convert Angular Schema Form (AngularJS) 'validationMessage' to\n        // Angular JSON Schema Form 'validationMessages'\n        // TV4 codes from https://github.com/geraintluff/tv4/blob/master/source/api.js\n        } else if (hasOwn(newNode.options, 'validationMessage')) {\n          if (typeof newNode.options.validationMessage === 'string') {\n            newNode.options.validationMessages = newNode.options.validationMessage;\n          } else {\n            newNode.options.validationMessages = {};\n            Object.keys(newNode.options.validationMessage).forEach(key => {\n              const code = key + '';\n              const newKey =\n                code ===  '0'  ? 'type' :\n                code ===  '1'  ? 'enum' :\n                code === '100' ? 'multipleOf' :\n                code === '101' ? 'minimum' :\n                code === '102' ? 'exclusiveMinimum' :\n                code === '103' ? 'maximum' :\n                code === '104' ? 'exclusiveMaximum' :\n                code === '200' ? 'minLength' :\n                code === '201' ? 'maxLength' :\n                code === '202' ? 'pattern' :\n                code === '300' ? 'minProperties' :\n                code === '301' ? 'maxProperties' :\n                code === '302' ? 'required' :\n                code === '304' ? 'dependencies' :\n                code === '400' ? 'minItems' :\n                code === '401' ? 'maxItems' :\n                code === '402' ? 'uniqueItems' :\n                code === '500' ? 'format' : code + '';\n              newNode.options.validationMessages[newKey] = newNode.options.validationMessage[key];\n            });\n          }\n          delete newNode.options.validationMessage;\n        }\n      }\n    } else if (JsonPointer.isJsonPointer(layoutItem)) {\n      newNode.dataPointer = layoutItem;\n    } else if (isString(layoutItem)) {\n      newNode.key = layoutItem;\n    } else {\n      console.error('buildLayout error: Form layout element not recognized:');\n      console.error(layoutItem);\n      return null;\n    }\n    let nodeSchema: any = null;\n\n    // If newNode does not have a dataPointer, try to find an equivalent\n    if (!hasOwn(newNode, 'dataPointer')) {\n\n      // If newNode has a key, change it to a dataPointer\n      if (hasOwn(newNode, 'key')) {\n        newNode.dataPointer = newNode.key === '*' ? newNode.key :\n          JsonPointer.compile(JsonPointer.parseObjectPath(newNode.key), '-');\n        delete newNode.key;\n\n      // If newNode is an array, search for dataPointer in child nodes\n      } else if (hasOwn(newNode, 'type') && newNode.type.slice(-5) === 'array') {\n        const findDataPointer = (items) => {\n          if (items === null || typeof items !== 'object') { return; }\n          if (hasOwn(items, 'dataPointer')) { return items.dataPointer; }\n          if (isArray(items.items)) {\n            for (let item of items.items) {\n              if (hasOwn(item, 'dataPointer') && item.dataPointer.indexOf('/-') !== -1) {\n                return item.dataPointer;\n              }\n              if (hasOwn(item, 'items')) {\n                const searchItem = findDataPointer(item);\n                if (searchItem) { return searchItem; }\n              }\n            }\n          }\n        };\n        const childDataPointer = findDataPointer(newNode);\n        if (childDataPointer) {\n          newNode.dataPointer =\n            childDataPointer.slice(0, childDataPointer.lastIndexOf('/-'));\n        }\n      }\n    }\n\n    if (hasOwn(newNode, 'dataPointer')) {\n      if (newNode.dataPointer === '*') {\n        return buildLayoutFromSchema(jsf, widgetLibrary, jsf.formValues);\n      }\n      const nodeValue =\n        JsonPointer.get(jsf.formValues, newNode.dataPointer.replace(/\\/-/g, '/1'));\n\n      // TODO: Create function getFormValues(jsf, dataPointer, forRefLibrary)\n      // check formOptions.setSchemaDefaults and formOptions.setLayoutDefaults\n      // then set apropriate values from initialVaues, schema, or layout\n\n      newNode.dataPointer =\n        JsonPointer.toGenericPointer(newNode.dataPointer, jsf.arrayMap);\n      const LastKey = JsonPointer.toKey(newNode.dataPointer);\n      if (!newNode.name && isString(LastKey) && LastKey !== '-') {\n        newNode.name = LastKey;\n      }\n      const shortDataPointer = removeRecursiveReferences(\n        newNode.dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const recursive = !shortDataPointer.length ||\n        shortDataPointer !== newNode.dataPointer;\n      let schemaPointer: string;\n      if (!jsf.dataMap.has(shortDataPointer)) {\n        jsf.dataMap.set(shortDataPointer, new Map());\n      }\n      const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n      if (nodeDataMap.has('schemaPointer')) {\n        schemaPointer = nodeDataMap.get('schemaPointer');\n      } else {\n        schemaPointer = JsonPointer.toSchemaPointer(shortDataPointer, jsf.schema);\n        nodeDataMap.set('schemaPointer', schemaPointer);\n      }\n      nodeDataMap.set('disabled', !!newNode.options.disabled);\n      nodeSchema = JsonPointer.get(jsf.schema, schemaPointer);\n      if (nodeSchema) {\n        if (!hasOwn(newNode, 'type')) {\n          newNode.type = getInputType(nodeSchema, newNode);\n        } else if (!widgetLibrary.hasWidget(newNode.type)) {\n          const oldWidgetType = newNode.type;\n          newNode.type = getInputType(nodeSchema, newNode);\n          console.error(`error: widget type \"${oldWidgetType}\" ` +\n            `not found in library. Replacing with \"${newNode.type}\".`);\n        } else {\n          newNode.type = checkInlineType(newNode.type, nodeSchema, newNode);\n        }\n        if (nodeSchema.type === 'object' && isArray(nodeSchema.required)) {\n          nodeDataMap.set('required', nodeSchema.required);\n        }\n        newNode.dataType =\n          nodeSchema.type || (hasOwn(nodeSchema, '$ref') ? '$ref' : null);\n        updateInputOptions(newNode, nodeSchema, jsf);\n\n        // Present checkboxes as single control, rather than array\n        if (newNode.type === 'checkboxes' && hasOwn(nodeSchema, 'items')) {\n          updateInputOptions(newNode, nodeSchema.items, jsf);\n        } else if (newNode.dataType === 'array') {\n          newNode.options.maxItems = Math.min(\n            nodeSchema.maxItems || 1000, newNode.options.maxItems || 1000\n          );\n          newNode.options.minItems = Math.max(\n            nodeSchema.minItems || 0, newNode.options.minItems || 0\n          );\n          newNode.options.listItems = Math.max(\n            newNode.options.listItems || 0, isArray(nodeValue) ? nodeValue.length : 0\n          );\n          newNode.options.tupleItems =\n            isArray(nodeSchema.items) ? nodeSchema.items.length : 0;\n          if (newNode.options.maxItems < newNode.options.tupleItems) {\n            newNode.options.tupleItems = newNode.options.maxItems;\n            newNode.options.listItems = 0;\n          } else if (newNode.options.maxItems <\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.maxItems - newNode.options.tupleItems;\n          } else if (newNode.options.minItems >\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.minItems - newNode.options.tupleItems;\n          }\n          if (!nodeDataMap.has('maxItems')) {\n            nodeDataMap.set('maxItems', newNode.options.maxItems);\n            nodeDataMap.set('minItems', newNode.options.minItems);\n            nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n            nodeDataMap.set('listItems', newNode.options.listItems);\n          }\n          if (!jsf.arrayMap.has(shortDataPointer)) {\n            jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems)\n          }\n        }\n        if (isInputRequired(jsf.schema, schemaPointer)) {\n          newNode.options.required = true;\n          jsf.fieldsRequired = true;\n        }\n      } else {\n        // TODO: create item in FormGroup model from layout key (?)\n        updateInputOptions(newNode, {}, jsf);\n      }\n\n      if (!newNode.options.title && !/^\\d+$/.test(newNode.name)) {\n        newNode.options.title = fixTitle(newNode.name);\n      }\n\n      if (hasOwn(newNode.options, 'copyValueTo')) {\n        if (typeof newNode.options.copyValueTo === 'string') {\n          newNode.options.copyValueTo = [newNode.options.copyValueTo];\n        }\n        if (isArray(newNode.options.copyValueTo)) {\n          newNode.options.copyValueTo = newNode.options.copyValueTo.map(item =>\n            JsonPointer.compile(JsonPointer.parseObjectPath(item), '-')\n          );\n        }\n      }\n\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      nodeDataMap.set('inputType', newNode.type);\n      nodeDataMap.set('widget', newNode.widget);\n\n      if (newNode.dataType === 'array' &&\n        (hasOwn(newNode, 'items') || hasOwn(newNode, 'additionalItems'))\n      ) {\n        let itemRefPointer = removeRecursiveReferences(\n          newNode.dataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        if (!jsf.dataMap.has(itemRefPointer)) {\n          jsf.dataMap.set(itemRefPointer, new Map());\n        }\n        jsf.dataMap.get(itemRefPointer).set('inputType', 'section');\n\n        // Fix insufficiently nested array item groups\n        if (newNode.items.length > 1) {\n          let arrayItemGroup = [];\n          let arrayItemGroupTemplate = [];\n          let newIndex = 0;\n          for (let i = newNode.items.length - 1; i >= 0; i--) {\n            let subItem = newNode.items[i];\n            if (hasOwn(subItem, 'dataPointer') &&\n              subItem.dataPointer.slice(0, itemRefPointer.length) === itemRefPointer\n            ) {\n              let arrayItem = newNode.items.splice(i, 1)[0];\n              arrayItem.dataPointer = newNode.dataPointer + '/-' +\n                arrayItem.dataPointer.slice(itemRefPointer.length);\n              arrayItemGroup.unshift(arrayItem);\n              newIndex++;\n            } else {\n              subItem.arrayItem = true;\n              // TODO: Check schema to get arrayItemType and removable\n              subItem.arrayItemType = 'list';\n              subItem.removable = newNode.options.removable !== false;\n            }\n          }\n          if (arrayItemGroup.length) {\n            newNode.items.push({\n              _id: _.uniqueId(),\n              arrayItem: true,\n              arrayItemType: newNode.options.tupleItems > newNode.items.length ?\n                'tuple' : 'list',\n              items: arrayItemGroup,\n              options: { removable: newNode.options.removable !== false, },\n              dataPointer: newNode.dataPointer + '/-',\n              type: 'section',\n              widget: widgetLibrary.getWidget('section'),\n            });\n          }\n        } else {\n          // TODO: Fix to hndle multiple items\n          newNode.items[0].arrayItem = true;\n          if (!newNode.items[0].dataPointer) {\n            newNode.items[0].dataPointer =\n              JsonPointer.toGenericPointer(itemRefPointer, jsf.arrayMap);\n          }\n          if (!JsonPointer.has(newNode, '/items/0/options/removable')) {\n            newNode.items[0].options.removable = true;\n          }\n          if (newNode.options.orderable === false) {\n            newNode.items[0].options.orderable = false;\n          }\n          newNode.items[0].arrayItemType =\n            newNode.options.tupleItems ? 'tuple' : 'list';\n        }\n\n        if (isArray(newNode.items)) {\n          const arrayListItems =\n            newNode.items.filter(item => item.type !== '$ref').length -\n              newNode.options.tupleItems;\n          if (arrayListItems > newNode.options.listItems) {\n            newNode.options.listItems = arrayListItems;\n            nodeDataMap.set('listItems', arrayListItems);\n          }\n        }\n\n        if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n          jsf.layoutRefLibrary[itemRefPointer] =\n            _.cloneDeep(newNode.items[newNode.items.length - 1]);\n          if (recursive) {\n            jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n          }\n          forEach(jsf.layoutRefLibrary[itemRefPointer], (item, key) => {\n            if (hasOwn(item, '_id')) { item._id = null; }\n            if (recursive) {\n              if (hasOwn(item, 'dataPointer')) {\n                item.dataPointer = item.dataPointer.slice(itemRefPointer.length);\n              }\n            }\n          }, 'top-down');\n        }\n\n        // Add any additional default items\n        if (!newNode.recursiveReference || newNode.options.required) {\n          const arrayLength = Math.min(Math.max(\n            newNode.options.tupleItems + newNode.options.listItems,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), newNode.options.maxItems);\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: newNode.dataPointer,\n              recursiveReference: newNode.recursiveReference,\n            }, jsf, widgetLibrary));\n          }\n        }\n\n        // If needed, add button to add items to array\n        if (newNode.options.addable !== false &&\n          newNode.options.minItems < newNode.options.maxItems &&\n          (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n        ) {\n          let buttonText = 'Add';\n          if (newNode.options.title) {\n            if (/^add\\b/i.test(newNode.options.title)) {\n              buttonText = newNode.options.title;\n            } else {\n              buttonText += ' ' + newNode.options.title;\n            }\n          } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n            if (/^add\\b/i.test(newNode.name)) {\n              buttonText += ' ' + fixTitle(newNode.name);\n            } else {\n              buttonText = fixTitle(newNode.name);\n            }\n\n          // If newNode doesn't have a title, look for title of parent array item\n          } else {\n            const parentSchema =\n              getFromSchema(jsf.schema, newNode.dataPointer, 'parentSchema');\n            if (hasOwn(parentSchema, 'title')) {\n              buttonText += ' to ' + parentSchema.title;\n            } else {\n              const pointerArray = JsonPointer.parse(newNode.dataPointer);\n              buttonText += ' to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n            }\n          }\n          newNode.items.push({\n            _id: _.uniqueId(),\n            arrayItem: true,\n            arrayItemType: 'list',\n            dataPointer: newNode.dataPointer + '/-',\n            options: {\n              listItems: newNode.options.listItems,\n              maxItems: newNode.options.maxItems,\n              minItems: newNode.options.minItems,\n              removable: false,\n              title: buttonText,\n              tupleItems: newNode.options.tupleItems,\n            },\n            recursiveReference: recursive,\n            type: '$ref',\n            widget: widgetLibrary.getWidget('$ref'),\n            $ref: itemRefPointer,\n          });\n          if (isString(JsonPointer.get(newNode, '/style/add'))) {\n            newNode.items[newNode.items.length - 1].options.fieldStyle =\n              newNode.style.add;\n            delete newNode.style.add;\n            if (isEmpty(newNode.style)) { delete newNode.style; }\n          }\n        }\n      } else {\n        newNode.arrayItem = false;\n      }\n    } else if (hasOwn(newNode, 'type') || hasOwn(newNode, 'items')) {\n      const parentType: string =\n        JsonPointer.get(jsf.layout, layoutPointer, 0, -2).type;\n      if (!hasOwn(newNode, 'type')) {\n        newNode.type =\n          inArray(parentType, ['tabs', 'tabarray']) ? 'tab' : 'array';\n      }\n      newNode.arrayItem = parentType === 'array';\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      updateInputOptions(newNode, {}, jsf);\n    }\n    if (newNode.type === 'submit') { hasSubmitButton = true; }\n    return newNode;\n  });\n  if (jsf.hasRootReference) {\n    const fullLayout = _.cloneDeep(formLayout);\n    if (fullLayout[fullLayout.length - 1].type === 'submit') { fullLayout.pop(); }\n    jsf.layoutRefLibrary[''] = {\n      _id: null,\n      dataPointer: '',\n      dataType: 'object',\n      items: fullLayout,\n      name: '',\n      options: _.cloneDeep(jsf.formOptions.defautWidgetOptions),\n      recursiveReference: true,\n      required: false,\n      type: 'section',\n      widget: widgetLibrary.getWidget('section'),\n    };\n  }\n  if (!hasSubmitButton) {\n    formLayout.push({\n      _id: _.uniqueId(),\n      options: { title: 'Submit' },\n      type: 'submit',\n      widget: widgetLibrary.getWidget('submit'),\n    });\n  }\n  return formLayout;\n}\n\n/**\n * 'buildLayoutFromSchema' function\n *\n * //   jsf -\n * //   widgetLibrary -\n * //   nodeValue -\n * //  { string = '' } schemaPointer -\n * //  { string = '' } dataPointer -\n * //  { boolean = false } arrayItem -\n * //  { string = null } arrayItemType -\n * //  { boolean = null } removable -\n * //  { boolean = false } forRefLibrary -\n * //  { string = '' } dataPointerPrefix -\n * // \n */\nexport function buildLayoutFromSchema(\n  jsf, widgetLibrary, nodeValue = null, schemaPointer = '',\n  dataPointer = '', arrayItem = false, arrayItemType: string = null,\n  removable: boolean = null, forRefLibrary = false, dataPointerPrefix = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (!hasOwn(schema, 'type') && !hasOwn(schema, '$ref') &&\n    !hasOwn(schema, 'x-schema-form')\n  ) { return null; }\n  const newNodeType: string = getInputType(schema);\n  if (!isDefined(nodeValue) && (\n    jsf.formOptions.setSchemaDefaults === true ||\n    (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n  )) {\n    nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n  }\n  let newNode: any = {\n    _id: forRefLibrary ? null : _.uniqueId(),\n    arrayItem: arrayItem,\n    dataPointer: JsonPointer.toGenericPointer(dataPointer, jsf.arrayMap),\n    dataType: schema.type || (hasOwn(schema, '$ref') ? '$ref' : null),\n    options: {},\n    required: isInputRequired(jsf.schema, schemaPointer),\n    type: newNodeType,\n    widget: widgetLibrary.getWidget(newNodeType),\n  };\n  const lastDataKey = JsonPointer.toKey(newNode.dataPointer);\n  if (lastDataKey !== '-') { newNode.name = lastDataKey; }\n  if (newNode.arrayItem) {\n    newNode.arrayItemType = arrayItemType;\n    newNode.options.removable = removable !== false;\n  }\n  const shortDataPointer = removeRecursiveReferences(\n    dataPointerPrefix + dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n  );\n  const recursive = !shortDataPointer.length ||\n    shortDataPointer !== dataPointerPrefix + dataPointer;\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n  if (!nodeDataMap.has('inputType')) {\n    nodeDataMap.set('schemaPointer', schemaPointer);\n    nodeDataMap.set('inputType', newNode.type);\n    nodeDataMap.set('widget', newNode.widget);\n    nodeDataMap.set('disabled', !!newNode.options.disabled);\n  }\n  updateInputOptions(newNode, schema, jsf);\n  if (!newNode.options.title && newNode.name && !/^\\d+$/.test(newNode.name)) {\n    newNode.options.title = fixTitle(newNode.name);\n  }\n\n  if (newNode.dataType === 'object') {\n    if (isArray(schema.required) && !nodeDataMap.has('required')) {\n      nodeDataMap.set('required', schema.required);\n    }\n    if (isObject(schema.properties)) {\n      const newSection: any[] = [];\n      const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n      if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n        const unnamedKeys = Object.keys(schema.properties)\n          .filter(key => !propertyKeys.includes(key));\n        for (let i = propertyKeys.length - 1; i >= 0; i--) {\n          if (propertyKeys[i] === '*') {\n            propertyKeys.splice(i, 1, ...unnamedKeys);\n          }\n        }\n      }\n      propertyKeys\n        .filter(key => hasOwn(schema.properties, key) ||\n          hasOwn(schema, 'additionalProperties')\n        )\n        .forEach(key => {\n          const keySchemaPointer = hasOwn(schema.properties, key) ?\n            '/properties/' + key : '/additionalProperties';\n          const innerItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isObject(nodeValue) ? nodeValue[key] : null,\n            schemaPointer + keySchemaPointer,\n            dataPointer + '/' + key,\n            false, null, null, forRefLibrary, dataPointerPrefix\n          );\n          if (innerItem) {\n            if (isInputRequired(schema, '/' + key)) {\n              innerItem.options.required = true;\n              jsf.fieldsRequired = true;\n            }\n            newSection.push(innerItem);\n          }\n        });\n      if (dataPointer === '' && !forRefLibrary) {\n        newNode = newSection;\n      } else {\n        newNode.items = newSection;\n      }\n    }\n    // TODO: Add patternProperties and additionalProperties inputs?\n    // ... possibly provide a way to enter both key names and values?\n    // if (isObject(schema.patternProperties)) { }\n    // if (isObject(schema.additionalProperties)) { }\n\n  } else if (newNode.dataType === 'array') {\n    newNode.items = [];\n    let templateArray: any[] = [];\n    newNode.options.maxItems = Math.min(\n      schema.maxItems || 1000, newNode.options.maxItems || 1000\n    );\n    newNode.options.minItems = Math.max(\n      schema.minItems || 0, newNode.options.minItems || 0\n    );\n    if (!newNode.options.minItems && isInputRequired(jsf.schema, schemaPointer)) {\n      newNode.options.minItems = 1;\n    }\n    if (!hasOwn(newNode.options, 'listItems')) { newNode.options.listItems = 1; }\n    newNode.options.tupleItems = isArray(schema.items) ? schema.items.length : 0;\n    if (newNode.options.maxItems <= newNode.options.tupleItems) {\n      newNode.options.tupleItems = newNode.options.maxItems;\n      newNode.options.listItems = 0;\n    } else if (newNode.options.maxItems <\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.maxItems - newNode.options.tupleItems;\n    } else if (newNode.options.minItems >\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.minItems - newNode.options.tupleItems;\n    }\n    if (!nodeDataMap.has('maxItems')) {\n      nodeDataMap.set('maxItems', newNode.options.maxItems);\n      nodeDataMap.set('minItems', newNode.options.minItems);\n      nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n      nodeDataMap.set('listItems', newNode.options.listItems);\n    }\n    if (!jsf.arrayMap.has(shortDataPointer)) {\n      jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems)\n    }\n    removable = newNode.options.removable !== false;\n    let additionalItemsSchemaPointer: string = null;\n\n    // If 'items' is an array = tuple items\n    if (isArray(schema.items)) {\n      newNode.items = [];\n      for (let i = 0; i < newNode.options.tupleItems; i++) {\n        let newItem: any;\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = !itemRefPointer.length ||\n          itemRefPointer !== shortDataPointer + '/' + i;\n\n        // If removable, add tuple item layout to layoutRefLibrary\n        if (removable && i >= newNode.options.minItems) {\n          if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n            // Set to null first to prevent recursive reference from causing endless loop\n            jsf.layoutRefLibrary[itemRefPointer] = null;\n            jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n              jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n              schemaPointer + '/items/' + i,\n              itemRecursive ? '' : dataPointer + '/' + i,\n              true, 'tuple', true, true, itemRecursive ? dataPointer + '/' + i : ''\n            );\n            if (itemRecursive) {\n              jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n            }\n          }\n          newItem = getLayoutNode({\n            $ref: itemRefPointer,\n            dataPointer: dataPointer + '/' + i,\n            recursiveReference: itemRecursive,\n          }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null);\n        } else {\n          newItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n            schemaPointer + '/items/' + i,\n            dataPointer + '/' + i,\n            true, 'tuple', false, forRefLibrary, dataPointerPrefix\n          );\n        }\n        if (newItem) { newNode.items.push(newItem); }\n      }\n\n      // If 'additionalItems' is an object = additional list items, after tuple items\n      if (isObject(schema.additionalItems)) {\n        additionalItemsSchemaPointer = schemaPointer + '/additionalItems';\n      }\n\n    // If 'items' is an object = list items only (no tuple items)\n    } else if (isObject(schema.items)) {\n      additionalItemsSchemaPointer = schemaPointer + '/items';\n    }\n\n    if (additionalItemsSchemaPointer) {\n      const itemRefPointer = removeRecursiveReferences(\n        shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const itemRecursive = !itemRefPointer.length ||\n        itemRefPointer !== shortDataPointer + '/-';\n      const itemSchemaPointer = removeRecursiveReferences(\n        additionalItemsSchemaPointer, jsf.schemaRecursiveRefMap, jsf.arrayMap\n      );\n      // Add list item layout to layoutRefLibrary\n      if (itemRefPointer.length && !hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[itemRefPointer] = null;\n        jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n          jsf, widgetLibrary, null,\n          itemSchemaPointer,\n          itemRecursive ? '' : dataPointer + '/-',\n          true, 'list', removable, true, itemRecursive ? dataPointer + '/-' : ''\n        );\n        if (itemRecursive) {\n          jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n        }\n      }\n\n      // Add any additional default items\n      if (!itemRecursive || newNode.options.required) {\n        const arrayLength = Math.min(Math.max(\n          itemRecursive ? 0 :\n            newNode.options.tupleItems + newNode.options.listItems,\n          isArray(nodeValue) ? nodeValue.length : 0\n        ), newNode.options.maxItems);\n        if (newNode.items.length < arrayLength) {\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: dataPointer + '/-',\n              recursiveReference: itemRecursive,\n            }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null));\n          }\n        }\n      }\n\n      // If needed, add button to add items to array\n      if (newNode.options.addable !== false &&\n        newNode.options.minItems < newNode.options.maxItems &&\n        (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n      ) {\n        let buttonText =\n          ((jsf.layoutRefLibrary[itemRefPointer] || {}).options || {}).title;\n        const prefix = buttonText ? 'Add ' : 'Add to ';\n        if (!buttonText) {\n          buttonText = schema.title || fixTitle(JsonPointer.toKey(dataPointer));\n        }\n        if (!/^add\\b/i.test(buttonText)) { buttonText = prefix + buttonText; }\n        newNode.items.push({\n          _id: _.uniqueId(),\n          arrayItem: true,\n          arrayItemType: 'list',\n          dataPointer: newNode.dataPointer + '/-',\n          options: {\n            listItems: newNode.options.listItems,\n            maxItems: newNode.options.maxItems,\n            minItems: newNode.options.minItems,\n            removable: false,\n            title: buttonText,\n            tupleItems: newNode.options.tupleItems,\n          },\n          recursiveReference: itemRecursive,\n          type: '$ref',\n          widget: widgetLibrary.getWidget('$ref'),\n          $ref: itemRefPointer,\n        });\n      }\n    }\n\n  } else if (newNode.dataType === '$ref') {\n    const schemaRef = JsonPointer.compile(schema.$ref);\n    const dataRef = JsonPointer.toDataPointer(schemaRef, jsf.schema);\n    let buttonText = '';\n\n    // Get newNode title\n    if (newNode.options.add) {\n      buttonText = newNode.options.add;\n    } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n      buttonText =\n        (/^add\\b/i.test(newNode.name) ? '' : 'Add ') + fixTitle(newNode.name);\n\n    // If newNode doesn't have a title, look for title of parent array item\n    } else {\n      const parentSchema =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1);\n      if (hasOwn(parentSchema, 'title')) {\n        buttonText = 'Add to ' + parentSchema.title;\n      } else {\n        const pointerArray = JsonPointer.parse(newNode.dataPointer);\n        buttonText = 'Add to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n      }\n    }\n    Object.assign(newNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n      $ref: dataRef,\n    });\n    Object.assign(newNode.options, {\n      removable: false,\n      title: buttonText,\n    });\n    if (isNumber(JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems)) {\n      newNode.options.maxItems =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems;\n    }\n\n    // Add layout template to layoutRefLibrary\n    if (dataRef.length) {\n      if (!hasOwn(jsf.layoutRefLibrary, dataRef)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[dataRef] = null;\n        const newLayout = buildLayoutFromSchema(\n          jsf, widgetLibrary, null, schemaRef, '',\n          newNode.arrayItem, newNode.arrayItemType, true, true, dataPointer\n        );\n        if (newLayout) {\n          newLayout.recursiveReference = true;\n          jsf.layoutRefLibrary[dataRef] = newLayout;\n        } else {\n          delete jsf.layoutRefLibrary[dataRef];\n        }\n      } else if (!jsf.layoutRefLibrary[dataRef].recursiveReference) {\n        jsf.layoutRefLibrary[dataRef].recursiveReference = true;\n      }\n    }\n  }\n  return newNode;\n}\n\n/**\n * 'mapLayout' function\n *\n * Creates a new layout by running each element in an existing layout through\n * an iteratee. Recursively maps within array elements 'items' and 'tabs'.\n * The iteratee is invoked with four arguments: (value, index, layout, path)\n *\n * The returned layout may be longer (or shorter) then the source layout.\n *\n * If an item from the source layout returns multiple items (as '*' usually will),\n * this function will keep all returned items in-line with the surrounding items.\n *\n * If an item from the source layout causes an error and returns null, it is\n * skipped without error, and the function will still return all non-null items.\n *\n * //   layout - the layout to map\n * //  { (v: any, i?: number, l?: any, p?: string) => any }\n *   function - the funciton to invoke on each element\n * //  { string|string[] = '' } layoutPointer - the layoutPointer to layout, inside rootLayout\n * //  { any[] = layout } rootLayout - the root layout, which conatins layout\n * // \n */\nexport function mapLayout(layout, fn, layoutPointer = '', rootLayout = layout) {\n  let indexPad = 0;\n  let newLayout: any[] = [];\n  forEach(layout, (item, index) => {\n    let realIndex = +index + indexPad;\n    let newLayoutPointer = layoutPointer + '/' + realIndex;\n    let newNode: any = copy(item);\n    let itemsArray: any[] = [];\n    if (isObject(item)) {\n      if (hasOwn(item, 'tabs')) {\n        item.items = item.tabs;\n        delete item.tabs;\n      }\n      if (hasOwn(item, 'items')) {\n        itemsArray = isArray(item.items) ? item.items : [item.items];\n      }\n    }\n    if (itemsArray.length) {\n      newNode.items = mapLayout(itemsArray, fn, newLayoutPointer + '/items', rootLayout);\n    }\n    newNode = fn(newNode, realIndex, newLayoutPointer, rootLayout);\n    if (!isDefined(newNode)) {\n      indexPad--;\n    } else {\n      if (isArray(newNode)) { indexPad += newNode.length - 1; }\n      newLayout = newLayout.concat(newNode);\n    }\n  });\n  return newLayout;\n};\n\n/**\n * 'getLayoutNode' function\n * Copy a new layoutNode from layoutRefLibrary\n *\n * //   refNode -\n * //   layoutRefLibrary -\n * //  { any = null } widgetLibrary -\n * //  { any = null } nodeValue -\n * //  copied layoutNode\n */\nexport function getLayoutNode(\n  refNode, jsf, widgetLibrary: any = null, nodeValue: any = null\n) {\n\n  // If recursive reference and building initial layout, return Add button\n  if (refNode.recursiveReference && widgetLibrary) {\n    const newLayoutNode = _.cloneDeep(refNode);\n    if (!newLayoutNode.options) { newLayoutNode.options = {}; }\n    Object.assign(newLayoutNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n    });\n    Object.assign(newLayoutNode.options, {\n      removable: false,\n      title: 'Add ' + newLayoutNode.$ref,\n    });\n    return newLayoutNode;\n\n  // Otherwise, return referenced layout\n} else {\n    let newLayoutNode = jsf.layoutRefLibrary[refNode.$ref];\n    // If value defined, build new node from schema (to set array lengths)\n    if (isDefined(nodeValue)) {\n      newLayoutNode = buildLayoutFromSchema(\n        jsf, widgetLibrary, nodeValue,\n        JsonPointer.toSchemaPointer(refNode.$ref, jsf.schema),\n        refNode.$ref, newLayoutNode.arrayItem,\n        newLayoutNode.arrayItemType, newLayoutNode.options.removable, false\n      );\n    } else {\n      // If value not defined, copy node from layoutRefLibrary\n      newLayoutNode = _.cloneDeep(newLayoutNode);\n      JsonPointer.forEachDeep(newLayoutNode, (subNode, pointer) => {\n\n        // Reset all _id's in newLayoutNode to unique values\n        if (hasOwn(subNode, '_id')) { subNode._id = _.uniqueId(); }\n\n        // If adding a recursive item, prefix current dataPointer\n        // to all dataPointers in new layoutNode\n        if (refNode.recursiveReference && hasOwn(subNode, 'dataPointer')) {\n          subNode.dataPointer = refNode.dataPointer + subNode.dataPointer;\n        }\n      });\n    }\n    return newLayoutNode;\n  }\n}\n\n/**\n * 'buildTitleMap' function\n *\n * //   titleMap -\n * //   enumList -\n * //  { boolean = true } fieldRequired -\n * //  { boolean = true } flatList -\n * // { TitleMapItem[] }\n */\nexport function buildTitleMap(\n  titleMap, enumList, fieldRequired = true, flatList = true\n) {\n  let newTitleMap: TitleMapItem[] = [];\n  let hasEmptyValue = false;\n  if (titleMap) {\n    if (isArray(titleMap)) {\n      if (enumList) {\n        for (let i of Object.keys(titleMap)) {\n          if (isObject(titleMap[i])) { // JSON Form style\n            const value = titleMap[i].value;\n            if (enumList.includes(value)) {\n              const name = titleMap[i].name;\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          } else if (isString(titleMap[i])) { // React Jsonschema Form style\n            if (i < enumList.length) {\n              const name = titleMap[i];\n              const value = enumList[i];\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          }\n        }\n      } else { // If array titleMap and no enum list, just return the titleMap - Angular Schema Form style\n        newTitleMap = titleMap;\n        if (!fieldRequired) {\n          hasEmptyValue = !!newTitleMap\n            .filter(i => i.value === undefined || i.value === null)\n            .length;\n        }\n      }\n    } else if (enumList) { // Alternate JSON Form style, with enum list\n      for (let i of Object.keys(enumList)) {\n        let value = enumList[i];\n        if (hasOwn(titleMap, value)) {\n          let name = titleMap[value];\n          newTitleMap.push({ name, value });\n          if (value === undefined || value === null) { hasEmptyValue = true; }\n        }\n      }\n    } else { // Alternate JSON Form style, without enum list\n      for (let value of Object.keys(titleMap)) {\n        let name = titleMap[value];\n        newTitleMap.push({ name, value });\n        if (value === undefined || value === null) { hasEmptyValue = true; }\n      }\n    }\n  } else if (enumList) { // Build map from enum list alone\n    for (let i of Object.keys(enumList)) {\n      let name = enumList[i];\n      let value = enumList[i];\n      newTitleMap.push({ name, value});\n      if (value === undefined || value === null) { hasEmptyValue = true; }\n    }\n  } else { // If no titleMap and no enum list, return default map of boolean values\n    newTitleMap = [ { name: 'True', value: true }, { name: 'False', value: false } ];\n  }\n\n  // Does titleMap have groups?\n  if (newTitleMap.some(title => hasOwn(title, 'group'))) {\n    hasEmptyValue = false;\n\n    // If flatList = true, flatten items & update name to group: name\n    if (flatList) {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (isArray(title.items)) {\n            groupTitleMap = [\n              ...groupTitleMap,\n              ...title.items.map(item =>\n                ({ ...item, ...{ name: `${title.group}: ${item.name}` } })\n              )\n            ];\n            if (title.items.some(item => item.value === undefined || item.value === null)) {\n              hasEmptyValue = true;\n            }\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            title.name = `${title.group}: ${title.name}`;\n            delete title.group;\n            groupTitleMap.push(title);\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n\n    // If flatList = false, combine items from matching groups\n    } else {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (title.group !== (groupTitleMap[groupTitleMap.length - 1] || {}).group) {\n            groupTitleMap.push({ group: title.group, items: title.items || [] });\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            groupTitleMap[groupTitleMap.length - 1].items\n              .push({ name: title.name, value: title.value });\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n    }\n  }\n  if (!fieldRequired && !hasEmptyValue) {\n    newTitleMap.unshift({ name: '<em>None</em>', value: null });\n  }\n  return newTitleMap;\n}\n","export const enValidationMessages: any = { // Default English error messages\n  required: 'This field is required.',\n  minLength: 'Must be {{minimumLength}} characters or longer (current length: {{currentLength}})',\n  maxLength: 'Must be {{maximumLength}} characters or shorter (current length: {{currentLength}})',\n  pattern: 'Must match pattern: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Must be a date, like \"2000-12-31\"';\n      case 'time':\n        return 'Must be a time, like \"16:20\" or \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Must be a date-time, like \"2000-03-14T01:59\" or \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Must be an email address, like \"name@example.com\"';\n      case 'hostname':\n        return 'Must be a hostname, like \"example.com\"';\n      case 'ipv4':\n        return 'Must be an IPv4 address, like \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Must be an IPv6 address, like \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Must be a url, like \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Must be a uuid, like \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Must be a color, like \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Must be a JSON Pointer, like \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Must be a relative JSON Pointer, like \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Must be a regular expression, like \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Must be a correctly formatted ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Must be {{minimumValue}} or more',\n  exclusiveMinimum: 'Must be more than {{exclusiveMinimumValue}}',\n  maximum: 'Must be {{maximumValue}} or less',\n  exclusiveMaximum: 'Must be less than {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Must have ${decimals} or fewer decimal places.`;\n    } else {\n      return `Must be a multiple of ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Must have {{minimumProperties}} or more items (current items: {{currentProperties}})',\n  maxProperties: 'Must have {{maximumProperties}} or fewer items (current items: {{currentProperties}})',\n  minItems: 'Must have {{minimumItems}} or more items (current items: {{currentItems}})',\n  maxItems: 'Must have {{maximumItems}} or fewer items (current items: {{currentItems}})',\n  uniqueItems: 'All items must be unique',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const frValidationMessages: any = { // French error messages\n  required: 'Est obligatoire.',\n  minLength: 'Doit avoir minimum {{minimumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  maxLength: 'Doit avoir maximum {{maximumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  pattern: 'Doit respecter: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Doit Ãªtre une date, tel que \"2000-12-31\"';\n      case 'time':\n        return 'Doit Ãªtre une heure, tel que \"16:20\" ou \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Doit Ãªtre une date et une heure, tel que \"2000-03-14T01:59\" ou \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Doit Ãªtre une adresse e-mail, tel que \"name@example.com\"';\n      case 'hostname':\n        return 'Doit Ãªtre un nom de domaine, tel que \"example.com\"';\n      case 'ipv4':\n        return 'Doit Ãªtre une adresse IPv4, tel que \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Doit Ãªtre une adresse IPv6, tel que \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Doit Ãªtre une URL, tel que \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Doit Ãªtre un UUID, tel que \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Doit Ãªtre une couleur, tel que \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Doit Ãªtre un JSON Pointer, tel que \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Doit Ãªtre un relative JSON Pointer, tel que \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Doit Ãªtre une expression rÃ©guliÃ¨re, tel que \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Doit Ãªtre avoir le format correct: ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Doit Ãªtre supÃ©rieur Ã  {{minimumValue}}',\n  exclusiveMinimum: 'Doit avoir minimum {{exclusiveMinimumValue}} charactÃ¨res',\n  maximum: 'Doit Ãªtre infÃ©rieur Ã  {{maximumValue}}',\n  exclusiveMaximum: 'Doit avoir maximum {{exclusiveMaximumValue}} charactÃ¨res',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Doit comporter ${decimals} ou moins de decimales.`;\n    } else {\n      return `Doit Ãªtre un multiple de ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Doit comporter au minimum {{minimumProperties}} Ã©lÃ©ments',\n  maxProperties: 'Doit comporter au maximum {{maximumProperties}} Ã©lÃ©ments',\n  minItems: 'Doit comporter au minimum {{minimumItems}} Ã©lÃ©ments',\n  maxItems: 'Doit comporter au maximum {{minimumItems}} Ã©lÃ©ments',\n  uniqueItems: 'Tous les Ã©lÃ©ments doivent Ãªtre uniques',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport { filter } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport * as Ajv from 'ajv';\nimport * as _ from 'lodash';\n\nimport {\n  hasValue, isArray, isDefined, isEmpty, isObject, isString\n} from './shared/validator.functions';\nimport {\n  fixTitle, forEach, hasOwn, toTitleCase\n} from './shared/utility.functions';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport {\n  buildSchemaFromData, buildSchemaFromLayout, removeRecursiveReferences,\n  resolveSchemaReferences\n} from './shared/json-schema.functions';\nimport {\n  buildFormGroup, buildFormGroupTemplate, formatFormData, getControl\n} from './shared/form-group.functions';\nimport { buildLayout, getLayoutNode } from './shared/layout.functions';\nimport { enValidationMessages } from './locale/en-validation-messages';\nimport { frValidationMessages } from './locale/fr-validation-messages';\n\nexport interface TitleMapItem {\n  name?: string, value?: any, checked?: boolean, group?: string, items?: TitleMapItem[]\n};\nexport interface ErrorMessages {\n  [control_name: string]: { message: string|Function|Object, code: string }[]\n};\n\n\n@Injectable()\nexport class JsonSchemaFormService {\n  JsonFormCompatibility = false;\n  ReactJsonSchemaFormCompatibility = false;\n  AngularSchemaFormCompatibility = false;\n  tpldata: any = {};\n\n  ajvOptions: any = { allErrors: true, jsonPointers: true, unknownFormats: 'ignore' };\n  ajv: any = new Ajv(this.ajvOptions); // AJV: Another JSON Schema Validator\n  validateFormData: any = null; // Compiled AJV function to validate active form's schema\n\n  formValues: any = {}; // Internal form data (may not have correct types)\n  data: any = {}; // Output form data (formValues, formatted with correct data types)\n  schema: any = {}; // Internal JSON Schema\n  layout: any[] = []; // Internal form layout\n  formGroupTemplate: any = {}; // Template used to create formGroup\n  formGroup: any = null; // Angular formGroup, which powers the reactive form\n  framework: any = null; // Active framework component\n  formOptions: any; // Active options, used to configure the form\n\n  validData: any = null; // Valid form data (or null) (=== isValid ? data : null)\n  isValid: boolean = null; // Is current form data valid?\n  ajvErrors: any = null; // Ajv errors for current data\n  validationErrors: any = null; // Any validation errors for current data\n  dataErrors: any = new Map(); //\n  formValueSubscription: any = null; // Subscription to formGroup.valueChanges observable (for un- and re-subscribing)\n  dataChanges: Subject<any> = new Subject(); // Form data observable\n  isValidChanges: Subject<any> = new Subject(); // isValid observable\n  validationErrorChanges: Subject<any> = new Subject(); // validationErrors observable\n\n  arrayMap: Map<string, number> = new Map(); // Maps arrays in data object and number of tuple values\n  dataMap: Map<string, any> = new Map(); // Maps paths in form data to schema and formGroup paths\n  dataRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in form data\n  schemaRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in schema\n  schemaRefLibrary: any = {}; // Library of schemas for resolving schema $refs\n  layoutRefLibrary: any = { '': null }; // Library of layout nodes for adding to form\n  templateRefLibrary: any = {}; // Library of formGroup templates for adding to form\n  hasRootReference = false; // Does the form include a recursive reference to itself?\n\n  language = 'en-US'; // Does the form include a recursive reference to itself?\n\n  // Default global form options\n  defaultFormOptions: any = {\n    addSubmit: 'auto', // Add a submit button if layout does not have one?\n      // for addSubmit: true = always, false = never,\n      // 'auto' = only if layout is undefined (form is built from schema alone)\n    debug: false, // Show debugging output?\n    disableInvalidSubmit: true, // Disable submit if form invalid?\n    formDisabled: false, // Set entire form as disabled? (not editable, and disables outputs)\n    formReadonly: false, // Set entire form as read only? (not editable, but outputs still enabled)\n    fieldsRequired: false, // (set automatically) Are there any required fields in the form?\n    framework: 'no-framework', // The framework to load\n    loadExternalAssets: false, // Load external css and JavaScript for framework?\n    pristine: { errors: true, success: true },\n    supressPropertyTitles: false,\n    setSchemaDefaults: 'auto', // Set fefault values from schema?\n      // true = always set (unless overridden by layout default or formValues)\n      // false = never set\n      // 'auto' = set in addable components, and everywhere if formValues not set\n    setLayoutDefaults: 'auto', // Set fefault values from layout?\n      // true = always set (unless overridden by formValues)\n      // false = never set\n      // 'auto' = set in addable components, and everywhere if formValues not set\n    validateOnRender: 'auto', // Validate fields immediately, before they are touched?\n      // true = validate all fields immediately\n      // false = only validate fields after they are touched by user\n      // 'auto' = validate fields with values immediately, empty fields after they are touched\n    widgets: {}, // Any custom widgets to load\n    defautWidgetOptions: { // Default options for form control widgets\n      listItems: 1, // Number of list items to initially add to arrays with no default value\n      addable: true, // Allow adding items to an array or $ref point?\n      orderable: true, // Allow reordering items within an array?\n      removable: true, // Allow removing items from an array or $ref point?\n      enableErrorState: true, // Apply 'has-error' class when field fails validation?\n      // disableErrorState: false, // Don't apply 'has-error' class when field fails validation?\n      enableSuccessState: true, // Apply 'has-success' class when field validates?\n      // disableSuccessState: false, // Don't apply 'has-success' class when field validates?\n      feedback: false, // Show inline feedback icons?\n      feedbackOnRender: false, // Show errorMessage on Render?\n      notitle: false, // Hide title?\n      disabled: false, // Set control as disabled? (not editable, and excluded from output)\n      readonly: false, // Set control as read only? (not editable, but included in output)\n      returnEmptyFields: true, // return values for fields that contain no data?\n      validationMessages: {} // set by setLanguage()\n    },\n  };\n\n  constructor() {\n    this.setLanguage(this.language);\n  }\n\n  setLanguage(language: string = 'en-US') {\n    this.language = language;\n    const validationMessages = language.slice(0, 2) === 'fr' ?\n      frValidationMessages : enValidationMessages;\n    this.defaultFormOptions.defautWidgetOptions.validationMessages =\n      _.cloneDeep(validationMessages);\n  }\n\n  getData() { return this.data; }\n\n  getSchema() { return this.schema; }\n\n  getLayout() { return this.layout; }\n\n  resetAllValues() {\n    this.JsonFormCompatibility = false;\n    this.ReactJsonSchemaFormCompatibility = false;\n    this.AngularSchemaFormCompatibility = false;\n    this.tpldata = {};\n    this.validateFormData = null;\n    this.formValues = {};\n    this.schema = {};\n    this.layout = [];\n    this.formGroupTemplate = {};\n    this.formGroup = null;\n    this.framework = null;\n    this.data = {};\n    this.validData = null;\n    this.isValid = null;\n    this.validationErrors = null;\n    this.arrayMap = new Map();\n    this.dataMap = new Map();\n    this.dataRecursiveRefMap = new Map();\n    this.schemaRecursiveRefMap = new Map();\n    this.layoutRefLibrary = {};\n    this.schemaRefLibrary = {};\n    this.templateRefLibrary = {};\n    this.formOptions = _.cloneDeep(this.defaultFormOptions);\n  }\n\n  /**\n   * 'buildRemoteError' function\n   *\n   * Example errors:\n   * {\n   *   last_name: [ {\n   *     message: 'Last name must by start with capital letter.',\n   *     code: 'capital_letter'\n   *   } ],\n   *   email: [ {\n   *     message: 'Email must be from example.com domain.',\n   *     code: 'special_domain'\n   *   }, {\n   *     message: 'Email must contain an @ symbol.',\n   *     code: 'at_symbol'\n   *   } ]\n   * }\n   * //{ErrorMessages} errors\n   */\n  buildRemoteError(errors: ErrorMessages) {\n    forEach(errors, (value, key) => {\n      if (key in this.formGroup.controls) {\n        for (const error of value) {\n          const err = {};\n          err[error['code']] = error['message'];\n          this.formGroup.get(key).setErrors(err, { emitEvent: true });\n        }\n      }\n    });\n  }\n\n  validateData(newValue: any, updateSubscriptions = true): void {\n\n    // Format raw form data to correct data types\n    this.data = formatFormData(\n      newValue, this.dataMap, this.dataRecursiveRefMap,\n      this.arrayMap, this.formOptions.returnEmptyFields\n    );\n    this.isValid = this.validateFormData(this.data);\n    this.validData = this.isValid ? this.data : null;\n    const compileErrors = errors => {\n      const compiledErrors = {};\n      (errors || []).forEach(error => {\n        if (!compiledErrors[error.dataPath]) { compiledErrors[error.dataPath] = []; }\n        compiledErrors[error.dataPath].push(error.message);\n      });\n      return compiledErrors;\n    };\n    this.ajvErrors = this.validateFormData.errors;\n    this.validationErrors = compileErrors(this.validateFormData.errors);\n    if (updateSubscriptions) {\n      this.dataChanges.next(this.data);\n      this.isValidChanges.next(this.isValid);\n      this.validationErrorChanges.next(this.ajvErrors);\n    }\n  }\n\n  buildFormGroupTemplate(formValues: any = null, setValues = true) {\n    this.formGroupTemplate = buildFormGroupTemplate(this, formValues, setValues);\n  }\n\n  buildFormGroup() {\n    this.formGroup = <FormGroup>buildFormGroup(this.formGroupTemplate);\n    if (this.formGroup) {\n      this.compileAjvSchema();\n      this.validateData(this.formGroup.value);\n\n      // Set up observables to emit data and validation info when form data changes\n      if (this.formValueSubscription) { this.formValueSubscription.unsubscribe(); }\n      this.formValueSubscription = this.formGroup.valueChanges\n        .subscribe(formValue => this.validateData(formValue));\n    }\n  }\n\n  buildLayout(widgetLibrary: any) {\n    this.layout = buildLayout(this, widgetLibrary);\n  }\n\n  setOptions(newOptions: any) {\n    if (isObject(newOptions)) {\n      const addOptions = _.cloneDeep(newOptions);\n      // Backward compatibility for 'defaultOptions' (renamed 'defautWidgetOptions')\n      if (isObject(addOptions.defaultOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defaultOptions);\n        delete addOptions.defaultOptions;\n      }\n      if (isObject(addOptions.defautWidgetOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defautWidgetOptions);\n        delete addOptions.defautWidgetOptions;\n      }\n      Object.assign(this.formOptions, addOptions);\n\n      // convert disableErrorState / disableSuccessState to enable...\n      const globalDefaults = this.formOptions.defautWidgetOptions;\n      ['ErrorState', 'SuccessState']\n        .filter(suffix => hasOwn(globalDefaults, 'disable' + suffix))\n        .forEach(suffix => {\n          globalDefaults['enable' + suffix] = !globalDefaults['disable' + suffix];\n          delete globalDefaults['disable' + suffix];\n        });\n    }\n  }\n\n  compileAjvSchema() {\n    if (!this.validateFormData) {\n\n      // if 'ui:order' exists in properties, move it to root before compiling with ajv\n      if (Array.isArray(this.schema.properties['ui:order'])) {\n        this.schema['ui:order'] = this.schema.properties['ui:order'];\n        delete this.schema.properties['ui:order'];\n      }\n      this.ajv.removeSchema(this.schema);\n      this.validateFormData = this.ajv.compile(this.schema);\n    }\n  }\n\n  buildSchemaFromData(data?: any, requireAllFields = false): any {\n    if (data) { return buildSchemaFromData(data, requireAllFields); }\n    this.schema = buildSchemaFromData(this.formValues, requireAllFields);\n  }\n\n  buildSchemaFromLayout(layout?: any): any {\n    if (layout) { return buildSchemaFromLayout(layout); }\n    this.schema = buildSchemaFromLayout(this.layout);\n  }\n\n\n  setTpldata(newTpldata: any = {}): void {\n    this.tpldata = newTpldata;\n  }\n\n  parseText(\n    text = '', value: any = {}, values: any = {}, key: number|string = null\n  ): string {\n    if (!text || !/{{.+?}}/.test(text)) { return text; }\n    return text.replace(/{{(.+?)}}/g, (...a) =>\n      this.parseExpression(a[1], value, values, key, this.tpldata)\n    );\n  }\n\n  parseExpression(\n    expression = '', value: any = {}, values: any = {},\n    key: number|string = null, tpldata: any = null\n  ) {\n    if (typeof expression !== 'string') { return ''; }\n    const index = typeof key === 'number' ? (key + 1) + '' : (key || '');\n    expression = expression.trim();\n    if ((expression[0] === \"'\" || expression[0] === '\"') &&\n      expression[0] === expression[expression.length - 1] &&\n      expression.slice(1, expression.length - 1).indexOf(expression[0]) === -1\n    ) {\n      return expression.slice(1, expression.length - 1);\n    }\n    if (expression === 'idx' || expression === '$index') { return index; }\n    if (expression === 'value' && !hasOwn(values, 'value')) { return value; }\n    if (['\"', \"'\", ' ', '||', '&&', '+'].every(delim => expression.indexOf(delim) === -1)) {\n      const pointer = JsonPointer.parseObjectPath(expression);\n      return pointer[0] === 'value' && JsonPointer.has(value, pointer.slice(1)) ?\n          JsonPointer.get(value, pointer.slice(1)) :\n        pointer[0] === 'values' && JsonPointer.has(values, pointer.slice(1)) ?\n          JsonPointer.get(values, pointer.slice(1)) :\n        pointer[0] === 'tpldata' && JsonPointer.has(tpldata, pointer.slice(1)) ?\n          JsonPointer.get(tpldata, pointer.slice(1)) :\n        JsonPointer.has(values, pointer) ? JsonPointer.get(values, pointer) : '';\n    }\n    if (expression.indexOf('[idx]') > -1) {\n      expression = expression.replace(/\\[idx\\]/g, <string>index);\n    }\n    if (expression.indexOf('[$index]') > -1) {\n      expression = expression.replace(/\\[$index\\]/g, <string>index);\n    }\n    // TODO: Improve expression evaluation by parsing quoted strings first\n    // let expressionArray = expression.match(/([^\"']+|\"[^\"]+\"|'[^']+')/g);\n    if (expression.indexOf('||') > -1) {\n      return expression.split('||').reduce((all, term) =>\n        all || this.parseExpression(term, value, values, key, tpldata), ''\n      );\n    }\n    if (expression.indexOf('&&') > -1) {\n      return expression.split('&&').reduce((all, term) =>\n        all && this.parseExpression(term, value, values, key, tpldata), ' '\n      ).trim();\n    }\n    if (expression.indexOf('+') > -1) {\n      return expression.split('+')\n        .map(term => this.parseExpression(term, value, values, key, tpldata))\n        .join('');\n    }\n    return '';\n  }\n\n  setArrayItemTitle(\n    parentCtx: any = {}, childNode: any = null, index: number = null\n  ): string {\n    const parentNode = parentCtx.layoutNode;\n    const parentValues: any = this.getFormControlValue(parentCtx);\n    const isArrayItem =\n      (parentNode.type || '').slice(-5) === 'array' && isArray(parentValues);\n    const text = JsonPointer.getFirst(\n      isArrayItem && childNode.type !== '$ref' ? [\n        [childNode, '/options/legend'],\n        [childNode, '/options/title'],\n        [parentNode, '/options/title'],\n        [parentNode, '/options/legend'],\n      ] : [\n        [childNode, '/options/title'],\n        [childNode, '/options/legend'],\n        [parentNode, '/options/title'],\n        [parentNode, '/options/legend']\n      ]\n    );\n    if (!text) { return text; }\n    const childValue = isArray(parentValues) && index < parentValues.length ?\n      parentValues[index] : parentValues;\n    return this.parseText(text, childValue, parentValues, index);\n  }\n\n  setItemTitle(ctx: any) {\n    return !ctx.options.title && /^(\\d+|-)$/.test(ctx.layoutNode.name) ?\n      null :\n      this.parseText(\n        ctx.options.title || toTitleCase(ctx.layoutNode.name),\n        this.getFormControlValue(this),\n        (this.getFormControlGroup(this) || <any>{}).value,\n        ctx.dataIndex[ctx.dataIndex.length - 1]\n      );\n  }\n\n  evaluateCondition(layoutNode: any, dataIndex: number[]): boolean {\n    const arrayIndex = dataIndex && dataIndex[dataIndex.length - 1];\n    let result = true;\n    if (hasValue((layoutNode.options || {}).condition)) {\n      if (typeof layoutNode.options.condition === 'string') {\n        let pointer = layoutNode.options.condition\n        if (hasValue(arrayIndex)) {\n          pointer = pointer.replace('[arrayIndex]', `[${arrayIndex}]`);\n        }\n        pointer = JsonPointer.parseObjectPath(pointer);\n        result = !!JsonPointer.get(this.data, pointer);\n        if (!result && pointer[0] === 'model') {\n          result = !!JsonPointer.get({ model: this.data }, pointer);\n        }\n      } else if (typeof layoutNode.options.condition === 'function') {\n        result = layoutNode.options.condition(this.data);\n      } else if (typeof layoutNode.options.condition.functionBody === 'string') {\n        try {\n          const dynFn = new Function(\n            'model', 'arrayIndices', layoutNode.options.condition.functionBody\n          );\n          result = dynFn(this.data, dataIndex);\n        } catch (e) {\n          result = true;\n          console.error(\"condition functionBody errored out on evaluation: \" + layoutNode.options.condition.functionBody);\n        }\n      }\n    }\n    return result;\n  }\n\n  initializeControl(ctx: any, bind = true): boolean {\n    if (!isObject(ctx)) { return false; }\n    if (isEmpty(ctx.options)) {\n      ctx.options = !isEmpty((ctx.layoutNode || {}).options) ?\n        ctx.layoutNode.options : _.cloneDeep(this.formOptions);\n    }\n    ctx.formControl = this.getFormControl(ctx);\n    ctx.boundControl = bind && !!ctx.formControl;\n    if (ctx.formControl) {\n      ctx.controlName = this.getFormControlName(ctx);\n      ctx.controlValue = ctx.formControl.value;\n      ctx.controlDisabled = ctx.formControl.disabled;\n      ctx.options.errorMessage = ctx.formControl.status === 'VALID' ? null :\n        this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages);\n      ctx.options.showErrors = this.formOptions.validateOnRender === true ||\n        (this.formOptions.validateOnRender === 'auto' && hasValue(ctx.controlValue));\n      ctx.formControl.statusChanges.subscribe(status =>\n        ctx.options.errorMessage = status === 'VALID' ? null :\n          this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages)\n      );\n      ctx.formControl.valueChanges.subscribe(value => {\n        if (!_.isEqual(ctx.controlValue, value)) { ctx.controlValue = value }\n      });\n    } else {\n      ctx.controlName = ctx.layoutNode.name;\n      ctx.controlValue = ctx.layoutNode.value || null;\n      const dataPointer = this.getDataPointer(ctx);\n      if (bind && dataPointer) {\n        console.error(`warning: control \"${dataPointer}\" is not bound to the Angular FormGroup.`);\n      }\n    }\n    return ctx.boundControl;\n  }\n\n  formatErrors(errors: any, validationMessages: any = {}): string {\n    if (isEmpty(errors)) { return null; }\n    if (!isObject(validationMessages)) { validationMessages = {}; }\n    const addSpaces = string => string[0].toUpperCase() + (string.slice(1) || '')\n      .replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' ');\n    const formatError = (error) => typeof error === 'object' ?\n      Object.keys(error).map(key =>\n        error[key] === true ? addSpaces(key) :\n        error[key] === false ? 'Not ' + addSpaces(key) :\n        addSpaces(key) + ': ' + formatError(error[key])\n      ).join(', ') :\n      addSpaces(error.toString());\n    const messages = [];\n    return Object.keys(errors)\n      // Hide 'required' error, unless it is the only one\n      .filter(errorKey => errorKey !== 'required' || Object.keys(errors).length === 1)\n      .map(errorKey =>\n        // If validationMessages is a string, return it\n        typeof validationMessages === 'string' ? validationMessages :\n        // If custom error message is a function, return function result\n        typeof validationMessages[errorKey] === 'function' ?\n          validationMessages[errorKey](errors[errorKey]) :\n        // If custom error message is a string, replace placeholders and return\n        typeof validationMessages[errorKey] === 'string' ?\n          // Does error message have any {{property}} placeholders?\n          !/{{.+?}}/.test(validationMessages[errorKey]) ?\n            validationMessages[errorKey] :\n            // Replace {{property}} placeholders with values\n            Object.keys(errors[errorKey])\n              .reduce((errorMessage, errorProperty) => errorMessage.replace(\n                new RegExp('{{' + errorProperty + '}}', 'g'),\n                errors[errorKey][errorProperty]\n              ), validationMessages[errorKey]) :\n          // If no custom error message, return formatted error data instead\n          addSpaces(errorKey) + ' Error: ' + formatError(errors[errorKey])\n      ).join('<br>');\n  }\n\n  updateValue(ctx: any, value: any): void {\n\n    // Set value of current control\n    ctx.controlValue = value;\n    if (ctx.boundControl) {\n      ctx.formControl.setValue(value);\n      ctx.formControl.markAsDirty();\n    }\n    ctx.layoutNode.value = value;\n\n    // Set values of any related controls in copyValueTo array\n    if (isArray(ctx.options.copyValueTo)) {\n      for (const item of ctx.options.copyValueTo) {\n        const targetControl = getControl(this.formGroup, item);\n        if (isObject(targetControl) && typeof targetControl.setValue === 'function') {\n          targetControl.setValue(value);\n          targetControl.markAsDirty();\n        }\n      }\n    }\n  }\n\n  updateArrayCheckboxList(ctx: any, checkboxList: TitleMapItem[]): void {\n    const formArray = <FormArray>this.getFormControl(ctx);\n\n    // Remove all existing items\n    while (formArray.value.length) { formArray.removeAt(0); }\n\n    // Re-add an item for each checked box\n    const refPointer = removeRecursiveReferences(\n      ctx.layoutNode.dataPointer + '/-', this.dataRecursiveRefMap, this.arrayMap\n    );\n    for (const checkboxItem of checkboxList) {\n      if (checkboxItem.checked) {\n        const newFormControl = buildFormGroup(this.templateRefLibrary[refPointer]);\n        newFormControl.setValue(checkboxItem.value);\n        formArray.push(newFormControl);\n      }\n    }\n    formArray.markAsDirty();\n  }\n\n  getFormControl(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx));\n  }\n\n  getFormControlValue(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    const control = getControl(this.formGroup, this.getDataPointer(ctx));\n    return control ? control.value : null;\n  }\n\n  getFormControlGroup(ctx: any): FormArray | FormGroup {\n    if (!ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer)) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx), true);\n  }\n\n  getFormControlName(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toKey(this.getDataPointer(ctx));\n  }\n\n  getLayoutArray(ctx: any): any[] {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -1);\n  }\n\n  getParentNode(ctx: any): any {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -2);\n  }\n\n  getDataPointer(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toIndexedPointer(\n      ctx.layoutNode.dataPointer, ctx.dataIndex, this.arrayMap\n    );\n  }\n\n  getLayoutPointer(ctx: any): string {\n    if (!hasValue(ctx.layoutIndex)) { return null; }\n    return '/' + ctx.layoutIndex.join('/items/');\n  }\n\n  isControlBound(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return false; }\n    const controlGroup = this.getFormControlGroup(ctx);\n    const name = this.getFormControlName(ctx);\n    return controlGroup ? hasOwn(controlGroup.controls, name) : false;\n  }\n\n  addItem(ctx: any, name?: string): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.$ref) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Create a new Angular form control from a template in templateRefLibrary\n    const newFormGroup = buildFormGroup(this.templateRefLibrary[ctx.layoutNode.$ref]);\n\n    // Add the new form control to the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Add new array item to formArray\n      (<FormArray>this.getFormControlGroup(ctx)).push(newFormGroup);\n    } else { // Add new $ref item to formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .addControl(name || this.getFormControlName(ctx), newFormGroup);\n    }\n\n    // Copy a new layoutNode from layoutRefLibrary\n    const newLayoutNode = getLayoutNode(ctx.layoutNode, this);\n    newLayoutNode.arrayItem = ctx.layoutNode.arrayItem;\n    if (ctx.layoutNode.arrayItemType) {\n      newLayoutNode.arrayItemType = ctx.layoutNode.arrayItemType;\n    } else {\n      delete newLayoutNode.arrayItemType;\n    }\n    if (name) {\n      newLayoutNode.name = name;\n      newLayoutNode.dataPointer += '/' + JsonPointer.escape(name);\n      newLayoutNode.options.title = fixTitle(name);\n    }\n\n    // Add the new layoutNode to the form layout\n    JsonPointer.insert(this.layout, this.getLayoutPointer(ctx), newLayoutNode);\n\n    return true;\n  }\n\n  moveArrayItem(ctx: any, oldIndex: number, newIndex: number): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex) ||\n      !isDefined(oldIndex) || !isDefined(newIndex) || oldIndex === newIndex\n    ) { return false; }\n\n    // Move item in the formArray\n    const formArray = <FormArray>this.getFormControlGroup(ctx);\n    const arrayItem = formArray.at(oldIndex);\n    formArray.removeAt(oldIndex);\n    formArray.insert(newIndex, arrayItem);\n    formArray.updateValueAndValidity();\n\n    // Move layout item\n    const layoutArray = this.getLayoutArray(ctx);\n    layoutArray.splice(newIndex, 0, layoutArray.splice(oldIndex, 1)[0]);\n    return true;\n  }\n\n  removeItem(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Remove the Angular form control from the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Remove array item from formArray\n      (<FormArray>this.getFormControlGroup(ctx))\n        .removeAt(ctx.dataIndex[ctx.dataIndex.length - 1]);\n    } else { // Remove $ref item from formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .removeControl(this.getFormControlName(ctx));\n    }\n\n    // Remove layoutNode from layout\n    JsonPointer.remove(this.layout, this.getLayoutPointer(ctx));\n    return true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'add-reference-widget',\n  template: `\n    <button *ngIf=\"showAddButton\"\n      [class]=\"options?.fieldHtmlClass || ''\"\n      [disabled]=\"options?.readonly\"\n      (click)=\"addItem($event)\">\n      <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n      <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n    </button>`,\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class AddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this)\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'one-of-widget',\n  template: ``,\n})\nexport class OneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'button-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <span *ngIf=\"options?.icon || options?.title\"\n          [class]=\"options?.icon\"\n          [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n})\nexport class ButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'checkbox-widget',\n  template: `\n    <label\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.itemLabelHtmlClass || ''\">\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        type=\"checkbox\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [checked]=\"isChecked ? 'checked' : null\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [value]=\"controlValue\"\n        type=\"checkbox\"\n        (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </label>`,\n})\nexport class CheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    event.preventDefault();\n    this.jsf.updateValue(this, event.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","import * as _ from 'lodash';\n\n/**\n * 'convertSchemaToDraft6' function\n *\n * Converts a JSON Schema from draft 1 through 4 format to draft 6 format\n *\n * Inspired by on geraintluff's JSON Schema 3 to 4 compatibility function:\n *   https://github.com/geraintluff/json-schema-compatibility\n * Also uses suggestions from AJV's JSON Schema 4 to 6 migration guide:\n *   https://github.com/epoberezkin/ajv/releases/tag/5.0.0\n * And additional details from the official JSON Schema documentation:\n *   http://json-schema.org\n *\n * //  { object } originalSchema - JSON schema (draft 1, 2, 3, 4, or 6)\n * //  { OptionObject = {} } options - options: parent schema changed?, schema draft number?\n * // { object } - JSON schema (draft 6)\n */\nexport interface OptionObject { changed?: boolean, draft?: number };\nexport function convertSchemaToDraft6(schema, options: OptionObject = {}) {\n  let draft: number = options.draft || null;\n  let changed: boolean = options.changed || false;\n\n  if (typeof schema !== 'object') { return schema; }\n  if (typeof schema.map === 'function') {\n    return [ ...schema.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) ];\n  }\n  let newSchema = { ...schema };\n  const simpleTypes = ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string'];\n\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0\\d\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    draft = newSchema.$schema[30];\n  }\n\n  // Convert v1-v2 'contentEncoding' to 'media.binaryEncoding'\n  // Note: This is only used in JSON hyper-schema (not regular JSON schema)\n  if (newSchema.contentEncoding) {\n    newSchema.media = { binaryEncoding: newSchema.contentEncoding };\n    delete newSchema.contentEncoding;\n    changed = true;\n  }\n\n  // Convert v1-v3 'extends' to 'allOf'\n  if (typeof newSchema.extends === 'object') {\n    newSchema.allOf = typeof newSchema.extends.map === 'function' ?\n      newSchema.extends.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) :\n      [ convertSchemaToDraft6(newSchema.extends, { changed, draft }) ];\n    delete newSchema.extends;\n    changed = true;\n  }\n\n  // Convert v1-v3 'disallow' to 'not'\n  if (newSchema.disallow) {\n    if (typeof newSchema.disallow === 'string') {\n      newSchema.not = { type: newSchema.disallow };\n    } else if (typeof newSchema.disallow.map === 'function') {\n      newSchema.not = {\n        anyOf: newSchema.disallow\n          .map(type => typeof type === 'object' ? type : { type })\n      };\n    }\n    delete newSchema.disallow;\n    changed = true;\n  }\n\n  // Convert v3 string 'dependencies' properties to arrays\n  if (typeof newSchema.dependencies === 'object' &&\n    Object.keys(newSchema.dependencies)\n      .some(key => typeof newSchema.dependencies[key] === 'string')\n  ) {\n    newSchema.dependencies = { ...newSchema.dependencies };\n    Object.keys(newSchema.dependencies)\n      .filter(key => typeof newSchema.dependencies[key] === 'string')\n      .forEach(key => newSchema.dependencies[key] = [ newSchema.dependencies[key] ]);\n    changed = true;\n  }\n\n  // Convert v1 'maxDecimal' to 'multipleOf'\n  if (typeof newSchema.maxDecimal === 'number') {\n    newSchema.multipleOf = 1 / Math.pow(10, newSchema.maxDecimal);\n    delete newSchema.divisibleBy;\n    changed = true;\n    if (!draft || draft === 2) { draft = 1; }\n  }\n\n  // Convert v2-v3 'divisibleBy' to 'multipleOf'\n  if (typeof newSchema.divisibleBy === 'number') {\n    newSchema.multipleOf = newSchema.divisibleBy;\n    delete newSchema.divisibleBy;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'minimumCanEqual' to 'exclusiveMinimum'\n  if (typeof newSchema.minimum === 'number' && newSchema.minimumCanEqual === false) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.minimumCanEqual === 'boolean') {\n    delete newSchema.minimumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMinimum' to numeric\n  if (typeof newSchema.minimum === 'number' && newSchema.exclusiveMinimum === true) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMinimum === 'boolean') {\n    delete newSchema.exclusiveMinimum;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'maximumCanEqual' to 'exclusiveMaximum'\n  if (typeof newSchema.maximum === 'number' && newSchema.maximumCanEqual === false) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.maximumCanEqual === 'boolean') {\n    delete newSchema.maximumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMaximum' to numeric\n  if (typeof newSchema.maximum === 'number' && newSchema.exclusiveMaximum === true) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMaximum === 'boolean') {\n    delete newSchema.exclusiveMaximum;\n    changed = true;\n  }\n\n  // Search object 'properties' for 'optional', 'required', and 'requires' items,\n  // and convert them into object 'required' arrays and 'dependencies' objects\n  if (typeof newSchema.properties === 'object') {\n    const properties = { ...newSchema.properties };\n    const requiredKeys = Array.isArray(newSchema.required) ?\n      new Set(newSchema.required) : new Set();\n\n    // Convert v1-v2 boolean 'optional' properties to 'required' array\n    if (draft === 1 || draft === 2 ||\n      Object.keys(properties).some(key => properties[key].optional === true)\n    ) {\n      Object.keys(properties)\n        .filter(key => properties[key].optional !== true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    // Convert v3 boolean 'required' properties to 'required' array\n    if (Object.keys(properties).some(key => properties[key].required === true)) {\n      Object.keys(properties)\n        .filter(key => properties[key].required === true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n    }\n\n    if (requiredKeys.size) { newSchema.required = Array.from(requiredKeys); }\n\n    // Convert v1-v2 array or string 'requires' properties to 'dependencies' object\n    if (Object.keys(properties).some(key => properties[key].requires)) {\n      const dependencies = typeof newSchema.dependencies === 'object' ?\n        { ...newSchema.dependencies } : {};\n      Object.keys(properties)\n        .filter(key => properties[key].requires)\n        .forEach(key => dependencies[key] =\n          typeof properties[key].requires === 'string' ?\n            [ properties[key].requires ] : properties[key].requires\n        );\n      newSchema.dependencies = dependencies;\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    newSchema.properties = properties;\n  }\n\n  // Revove v1-v2 boolean 'optional' key\n  if (typeof newSchema.optional === 'boolean') {\n    delete newSchema.optional;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Revove v1-v2 'requires' key\n  if (newSchema.requires) {\n    delete newSchema.requires;\n  }\n\n  // Revove v3 boolean 'required' key\n  if (typeof newSchema.required === 'boolean') {\n    delete newSchema.required;\n  }\n\n  // Convert id to $id\n  if (typeof newSchema.id === 'string' && !newSchema.$id) {\n    if (newSchema.id.slice(-1) === '#') {\n      newSchema.id = newSchema.id.slice(0, -1);\n    }\n    newSchema.$id = newSchema.id + '-CONVERTED-TO-DRAFT-06#';\n    delete newSchema.id;\n    changed = true;\n  }\n\n  // Check if v1-v3 'any' or object types will be converted\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    changed = true;\n  }\n\n  // If schema changed, update or remove $schema identifier\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0[1-4]\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    newSchema.$schema = 'http://json-schema.org/draft-06/schema#';\n    changed = true;\n  } else if (changed && typeof newSchema.$schema === 'string') {\n    const addToDescription = 'Converted to draft 6 from ' + newSchema.$schema;\n    if (typeof newSchema.description === 'string' && newSchema.description.length) {\n      newSchema.description += '\\n' + addToDescription;\n    } else {\n      newSchema.description = addToDescription\n    }\n    delete newSchema.$schema;\n  }\n\n  // Convert v1-v3 'any' and object types\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    if (newSchema.type.length === 1) { newSchema.type = newSchema.type[0]; }\n    if (typeof newSchema.type === 'string') {\n      // Convert string 'any' type to array of all standard types\n      if (newSchema.type === 'any') {\n        newSchema.type = simpleTypes;\n      // Delete non-standard string type\n      } else {\n        delete newSchema.type;\n      }\n    } else if (typeof newSchema.type === 'object') {\n      if (typeof newSchema.type.every === 'function') {\n        // If array of strings, only allow standard types\n        if (newSchema.type.every(type => typeof type === 'string')) {\n          newSchema.type = newSchema.type.some(type => type === 'any') ?\n            newSchema.type = simpleTypes :\n            newSchema.type.filter(type => simpleTypes.includes(type));\n        // If type is an array with objects, convert the current schema to an 'anyOf' array\n        } else if (newSchema.type.length > 1) {\n          const arrayKeys = [ 'additionalItems', 'items', 'maxItems', 'minItems', 'uniqueItems', 'contains'];\n          const numberKeys = [ 'multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum'];\n          const objectKeys = [ 'maxProperties', 'minProperties', 'required', 'additionalProperties',\n            'properties', 'patternProperties', 'dependencies', 'propertyNames'];\n          const stringKeys = [ 'maxLength', 'minLength', 'pattern', 'format'];\n          const filterKeys = {\n            'array':   [ ...numberKeys, ...objectKeys, ...stringKeys ],\n            'integer': [  ...arrayKeys, ...objectKeys, ...stringKeys ],\n            'number':  [  ...arrayKeys, ...objectKeys, ...stringKeys ],\n            'object':  [  ...arrayKeys, ...numberKeys, ...stringKeys ],\n            'string':  [  ...arrayKeys, ...numberKeys, ...objectKeys ],\n            'all':     [  ...arrayKeys, ...numberKeys, ...objectKeys, ...stringKeys ],\n          };\n          const anyOf = [];\n          for (const type of newSchema.type) {\n            const newType = typeof type === 'string' ? { type } : { ...type };\n            Object.keys(newSchema)\n              .filter(key => !newType.hasOwnProperty(key) &&\n                ![ ...(filterKeys[newType.type] || filterKeys.all), 'type', 'default' ]\n                  .includes(key)\n              )\n              .forEach(key => newType[key] = newSchema[key]);\n            anyOf.push(newType);\n          }\n          newSchema = newSchema.hasOwnProperty('default') ?\n            { anyOf, default: newSchema.default } : { anyOf };\n        // If type is an object, merge it with the current schema\n        } else {\n          const typeSchema = newSchema.type;\n          delete newSchema.type;\n          Object.assign(newSchema, typeSchema);\n        }\n      }\n    } else {\n      delete newSchema.type;\n    }\n  }\n\n  // Convert sub schemas\n  Object.keys(newSchema)\n    .filter(key => typeof newSchema[key] === 'object')\n    .forEach(key => {\n      if (\n        [ 'definitions', 'dependencies', 'properties', 'patternProperties' ]\n          .includes(key) && typeof newSchema[key].map !== 'function'\n      ) {\n        const newKey = {};\n        Object.keys(newSchema[key]).forEach(subKey => newKey[subKey] =\n          convertSchemaToDraft6(newSchema[key][subKey], { changed, draft })\n        );\n        newSchema[key] = newKey;\n      } else if (\n        [ 'items', 'additionalItems', 'additionalProperties',\n          'allOf', 'anyOf', 'oneOf', 'not' ].includes(key)\n      ) {\n        newSchema[key] = convertSchemaToDraft6(newSchema[key], { changed, draft });\n      } else {\n        newSchema[key] = _.cloneDeep(newSchema[key]);\n      }\n    });\n\n  return newSchema;\n}\n","/**\n * 'dateToString' function\n *\n * //  { Date | string } date\n * //   options\n * // { string }\n */\nexport function dateToString(date, options: any = {}) {\n  const dateFormat = options.dateFormat || 'YYYY-MM-DD';\n  // TODO: Use options.locale to change default format and names\n  // const locale = options.locale || 'en-US';\n  if (typeof date === 'string') { date = stringToDate(date); }\n  if (Object.prototype.toString.call(date) !== '[object Date]') { return null; }\n  const longMonths = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\n  const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const shortDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dateFormat\n    .replace(/YYYY/ig, date.getFullYear() + '')\n    .replace(/YY/ig, (date.getFullYear() + '').slice(-2))\n    .replace(/MMMM/ig, longMonths[date.getMonth()])\n    .replace(/MMM/ig, shortMonths[date.getMonth()])\n    .replace(/MM/ig, ('0' + (date.getMonth() + 1)).slice(-2))\n    .replace(/M/ig, (date.getMonth() + 1) + '')\n    .replace(/DDDD/ig, longDays[date.getDay()])\n    .replace(/DDD/ig, shortDays[date.getDay()])\n    .replace(/DD/ig, ('0' + date.getDate()).slice(-2))\n    .replace(/D/ig, date.getDate() + '')\n    .replace(/S/ig, ordinal(date.getDate()));\n}\n\nexport function ordinal(number: number|string): string {\n  if (typeof number === 'number') { number = number + ''; }\n  const last = number.slice(-1);\n  const nextToLast = number.slice(-2, 1);\n  return (nextToLast !== '1' && { '1': 'st', '2': 'nd', '3': 'rd' }[last]) || 'th';\n}\n\n/**\n * 'stringToDate' function\n *\n * //  { string } dateString\n * // { Date }\n */\nexport function stringToDate(dateString) {\n  const getDate: string = findDate(dateString);\n  if (!getDate) { return null; }\n  let dateParts: number[] = [];\n  // Split x-y-z to [x, y, z]\n  if (/^\\d+[^\\d]\\d+[^\\d]\\d+$/.test(getDate)) {\n    dateParts = getDate.split(/[^\\d]/).map(part => +part);\n  // Split xxxxyyzz to [xxxx, yy, zz]\n  } else if (/^\\d{8}$/.test(getDate)) {\n    dateParts = [+getDate.slice(0, 4), +getDate.slice(4, 6), +getDate.slice(6)];\n  }\n  const thisYear = +(new Date().getFullYear() + '').slice(-2);\n  // Check for [YYYY, MM, DD]\n  if (dateParts[0] > 1000 && dateParts[0] < 2100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    return new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);\n  // Check for [MM, DD, YYYY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] > 1000 && dateParts[2] < 2100) {\n    return new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);\n  // Check for [MM, DD, YY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] < 100) {\n    const year = (dateParts[2] <= thisYear ? 2000 : 1900) + dateParts[2];\n    return new Date(year, dateParts[0] - 1, dateParts[1]);\n  // Check for [YY, MM, DD]\n  } else if (dateParts[0] < 100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    const year = (dateParts[0] <= thisYear ? 2000 : 1900) + dateParts[0];\n    return new Date(year, dateParts[1] - 1, dateParts[2]);\n  }\n  return null;\n}\n\n/**\n * 'findDate' function\n *\n * //  { string } text\n * // { string }\n */\nexport function findDate(text) {\n  if (!text) { return null; }\n  let foundDate: any[];\n  // Match ...YYYY-MM-DD...\n  foundDate = text.match(/(?:19|20)\\d\\d[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:[012]?\\d|3[01])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match ...MM-DD-YYYY...\n  foundDate = text.match(/(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:19|20)\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match MM-DD-YY...\n  foundDate = text.match(/^(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ]\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YY-MM-DD...\n  foundDate = text.match(/^\\d\\d[-_\\\\\\/\\. ](?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YYYYMMDD...\n  foundDate = text.match(/^(?:19|20)\\d\\d(?:0\\d|1[012])(?:[012]\\d|3[01])/);\n  if (foundDate) { return foundDate[0]; }\n}\n","import { Directive, ElementRef, HostListener, Input, NgZone, OnInit } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { JsonPointer } from '../shared/jsonpointer.functions';\n\n/**\n * OrderableDirective\n *\n * Enables array elements to be reordered by dragging and dropping.\n *\n * Only works for arrays that have at least two elements.\n *\n * Also detects arrays-within-arrays, and correctly moves either\n * the child array element or the parent array element,\n * depending on the drop targert.\n *\n * Listeners for movable element being dragged:\n * - dragstart: add 'dragging' class to element, set effectAllowed = 'move'\n * - dragover: set dropEffect = 'move'\n * - dragend: remove 'dragging' class from element\n *\n * Listeners for stationary items being dragged over:\n * - dragenter: add 'drag-target-...' classes to element\n * - dragleave: remove 'drag-target-...' classes from element\n * - drop: remove 'drag-target-...' classes from element, move dropped array item\n */\n@Directive({\n  selector: '[orderable]',\n})\nexport class OrderableDirective implements OnInit {\n  arrayLayoutIndex: string;\n  element: any;\n  overParentElement = false;\n  overChildElement = false;\n  @Input() orderable: boolean;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private elementRef: ElementRef,\n    private jsf: JsonSchemaFormService,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n    if (this.orderable && this.layoutNode && this.layoutIndex && this.dataIndex) {\n      this.element = this.elementRef.nativeElement;\n      this.element.draggable = true;\n      this.arrayLayoutIndex = 'move:' + this.layoutIndex.slice(0, -1).toString();\n\n      this.ngZone.runOutsideAngular(() => {\n\n        // Listeners for movable element being dragged:\n\n        this.element.addEventListener('dragstart', (event) => {\n          event.dataTransfer.effectAllowed = 'move';\n          // Hack to bypass stupid HTML drag-and-drop dataTransfer protection\n          // so drag source info will be available on dragenter\n          const sourceArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          sessionStorage.setItem(this.arrayLayoutIndex, sourceArrayIndex + '');\n        });\n\n        this.element.addEventListener('dragover', (event) => {\n          if (event.preventDefault) { event.preventDefault(); }\n          event.dataTransfer.dropEffect = 'move';\n          return false;\n        });\n\n        // Listeners for stationary items being dragged over:\n\n        this.element.addEventListener('dragenter', (event) => {\n          // Part 1 of a hack, inspired by Dragster, to simulate mouseover and mouseout\n          // behavior while dragging items - http://bensmithett.github.io/dragster/\n          if (this.overParentElement) {\n            return this.overChildElement = true;\n          } else {\n            this.overParentElement = true;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (sourceArrayIndex !== null) {\n            if (this.dataIndex[this.dataIndex.length - 1] < +sourceArrayIndex) {\n              this.element.classList.add('drag-target-top');\n            } else if (this.dataIndex[this.dataIndex.length - 1] > +sourceArrayIndex) {\n              this.element.classList.add('drag-target-bottom');\n            }\n          }\n        });\n\n        this.element.addEventListener('dragleave', (event) => {\n          // Part 2 of the Dragster hack\n          if (this.overChildElement) {\n            this.overChildElement = false;\n          } else if (this.overParentElement) {\n            this.overParentElement = false;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (!this.overParentElement && !this.overChildElement && sourceArrayIndex !== null) {\n            this.element.classList.remove('drag-target-top');\n            this.element.classList.remove('drag-target-bottom');\n          }\n        });\n\n        this.element.addEventListener('drop', (event) => {\n          this.element.classList.remove('drag-target-top');\n          this.element.classList.remove('drag-target-bottom');\n          // Confirm that drop target is another item in the same array as source item\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          const destArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          if (sourceArrayIndex !== null && +sourceArrayIndex !== destArrayIndex) {\n            // Move array item\n            this.jsf.moveArrayItem(this, +sourceArrayIndex, destArrayIndex);\n          }\n          sessionStorage.removeItem(this.arrayLayoutIndex);\n          return false;\n        });\n\n      });\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService, TitleMapItem } from '../json-schema-form.service';\nimport { buildTitleMap } from '../shared';\n\n@Component({\n  selector: 'checkboxes-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = checkboxes-inline or checkboxbuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\" [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let checkboxItem of checkboxList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"checkbox\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"checkboxItem.checked\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [name]=\"checkboxItem?.name\"\n          [readonly]=\"options?.readonly ? 'readonly' : null\"\n          [value]=\"checkboxItem.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"checkboxItem.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular checkboxes -->\n    <div *ngIf=\"layoutOrientation === 'vertical'\">\n      <div *ngFor=\"let checkboxItem of checkboxList\" [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"checkbox\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"checkboxItem.checked\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"options?.name + '/' + checkboxItem.value\"\n            [name]=\"checkboxItem?.name\"\n            [readonly]=\"options?.readonly ? 'readonly' : null\"\n            [value]=\"checkboxItem.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"checkboxItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class CheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation: string;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.layoutOrientation = (this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons') ? 'horizontal' : 'vertical';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      this.checkboxList.forEach(checkboxItem =>\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value)\n      );\n    }\n  }\n\n  updateValue(event) {\n    for (let checkboxItem of this.checkboxList) {\n      if (event.target.value === checkboxItem.value) {\n        checkboxItem.checked = event.target.checked;\n      }\n    }\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'file-widget',\n  template: ``,\n})\nexport class FileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'input-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n        <datalist *ngIf=\"options?.typeahead?.source\"\n          [id]=\"'control' + layoutNode?._id + 'Autocomplete'\">\n          <option *ngFor=\"let word of options?.typeahead?.source\" [value]=\"word\">\n        </datalist>\n    </div>`,\n})\nexport class InputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'message-widget',\n  template: `\n    <span *ngIf=\"message\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [innerHTML]=\"message\"></span>`,\n})\nexport class MessageComponent implements OnInit {\n  options: any;\n  message: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.message = this.options.help || this.options.helpvalue ||\n      this.options.msg || this.options.message;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'none-widget',\n  template: ``,\n})\nexport class NoneComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'number-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n      <span *ngIf=\"layoutNode?.type === 'range'\" [innerHTML]=\"controlValue\"></span>\n    </div>`,\n})\nexport class NumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { buildTitleMap } from '../shared';\n\n@Component({\n  selector: 'radios-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = radios-inline or radiobuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\"\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let radioItem of radiosList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') +\n          ((controlValue + '' === radioItem?.value + '') ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"radio\"\n          [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n          [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"radioItem?.value === controlValue\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [name]=\"controlName\"\n          [value]=\"radioItem?.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"radioItem?.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular radios -->\n    <div *ngIf=\"layoutOrientation !== 'horizontal'\">\n      <div *ngFor=\"let radioItem of radiosList\"\n        [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') +\n            ((controlValue + '' === radioItem?.value + '') ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"radio\"\n            [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n            [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"radioItem?.value === controlValue\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n            [name]=\"controlName\"\n            [value]=\"radioItem?.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class RadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation = 'vertical';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline' ||\n      this.layoutNode.type === 'radiobuttons'\n    ) {\n      this.layoutOrientation = 'horizontal';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, Host } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { hasValue, JsonPointer } from '../shared';\n\n@Component({\n  selector: 'root-widget',\n  template: `\n    <div *ngFor=\"let layoutItem of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.align-self]=\"(layoutItem.options || {})['align-self']\"\n      [style.flex-basis]=\"getFlexAttribute(layoutItem, 'flex-basis')\"\n      [style.flex-grow]=\"getFlexAttribute(layoutItem, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutItem, 'flex-shrink')\"\n      [style.order]=\"(layoutItem.options || {}).order\">\n      <div\n        [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"\n        [orderable]=\"isDraggable(layoutItem)\">\n        <select-framework-widget *ngIf=\"showWidget(layoutItem)\"\n          [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n          [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n          [layoutNode]=\"layoutItem\"></select-framework-widget>\n      </div>\n    </div>`,\n  styles: [`\n    [draggable=true] {\n      transition: all 150ms cubic-bezier(.4, 0, .2, 1);\n    }\n    [draggable=true]:hover {\n      cursor: move;\n      box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n      position: relative; z-index: 10;\n      margin-top: -1px;\n      margin-left: -1px;\n      margin-right: 1px;\n      margin-bottom: 1px;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class RootComponent {\n  options: any;\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isOrderable: boolean;\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  isDraggable(node: any): boolean {\n    return node.arrayItem && node.type !== '$ref' &&\n      node.arrayItemType === 'list' && this.isOrderable !== false;\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { toTitleCase } from '../shared';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n    </div>\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <div *ngIf=\"options?.messageLocation !== 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n      <div *ngIf=\"options?.messageLocation === 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n    </fieldset>`,\n  styles: [`\n    .legend { font-weight: bold; }\n    .expandable > legend:before, .expandable > label:before  { content: 'â¶'; padding-right: .3em; }\n    .expanded > legend:before, .expanded > label:before  { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class SectionComponent implements OnInit {\n  options: any;\n  expanded = true;\n  containerType: string;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'fieldset': case 'array': case 'tab': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n      break;\n      default: // 'div', 'flex', 'section', 'conditional', 'actions', 'tagsinput'\n        this.containerType = 'div';\n      break;\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { buildTitleMap, isArray } from '../shared';\n\n@Component({\n  selector: 'select-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n      <select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n    </div>`,\n})\nexport class SelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'select-framework-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectFrameworkComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && this.jsf.framework) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.jsf.framework)\n      );\n    }\n    if (this.newComponent) {\n      for (let input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'select-widget-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectWidgetComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && (this.layoutNode || {}).widget) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.widget)\n      );\n    }\n    if (this.newComponent) {\n      for (let input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { hasOwn } from '../shared/utility.functions';\n\n@Component({\n  selector: 'submit-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <input\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n    </div>`,\n})\nexport class SubmitComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'tabs-widget',\n  template: `\n    <ul\n      [class]=\"options?.labelHtmlClass || ''\">\n      <li *ngFor=\"let item of layoutNode?.items; let i = index\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (selectedItem === i ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + options?.style?.unselected))\"\n        role=\"presentation\"\n        data-tabs>\n        <a *ngIf=\"showAddTab || item.type !== '$ref'\"\n           [class]=\"'nav-link' + (selectedItem === i ? (' ' + options?.activeClass + ' ' + options?.style?.selected) :\n            (' ' + options?.style?.unselected))\"\n          [innerHTML]=\"setTabTitle(item, i)\"\n          (click)=\"select(i)\"></a>\n      </li>\n    </ul>\n\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') +\n          ' ' + (options?.activeClass || '') +\n          ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class TabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.itemCount = this.layoutNode.items.length;\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    };\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    if (lastItem.type === '$ref' &&\n      this.itemCount >= (lastItem.options.maxItems || 1000)\n    ) {\n      this.showAddTab = false;\n    }\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'template-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class TemplateComponent implements OnInit, OnChanges {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && this.layoutNode.options.template) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.options.template)\n      );\n    }\n    if (this.newComponent) {\n      for (let input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'textarea-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <textarea *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"></textarea>\n      <textarea *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">{{controlValue}}</textarea>\n    </div>`,\n})\nexport class TextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { hasOwn } from '../shared/utility.functions';\n\nimport { AddReferenceComponent } from './add-reference.component';\nimport { OneOfComponent } from './one-of.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { HiddenComponent } from './hidden.component';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabComponent } from './tab.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\n@Injectable()\nexport class WidgetLibraryService {\n\n  defaultWidget = 'text';\n  widgetLibrary: any = {\n\n  // Angular JSON Schema Form administrative widgets\n    'none': NoneComponent, // Placeholder, for development - displays nothing\n    'root': RootComponent, // Form root, renders a complete layout\n    'select-framework': SelectFrameworkComponent, // Applies the selected framework to a specified widget\n    'select-widget': SelectWidgetComponent, // Displays a specified widget\n    '$ref': AddReferenceComponent, // Button to add a new array item or $ref element\n\n  // Free-form text HTML 'input' form control widgets <input type=\"...\">\n    'email': 'text',\n    'integer': 'number', // Note: 'integer' is not a recognized HTML input type\n    'number': NumberComponent,\n    'password': 'text',\n    'search': 'text',\n    'tel': 'text',\n    'text': InputComponent,\n    'url': 'text',\n\n  // Controlled text HTML 'input' form control widgets <input type=\"...\">\n    'color': 'text',\n    'date': 'text',\n    'datetime': 'text',\n    'datetime-local': 'text',\n    'month': 'text',\n    'range': 'number',\n    'time': 'text',\n    'week': 'text',\n\n  // Non-text HTML 'input' form control widgets <input type=\"...\">\n    // 'button': <input type=\"button\"> not used, use <button> instead\n    'checkbox': CheckboxComponent, // TODO: Set ternary = true for 3-state ??\n    'file': FileComponent, // TODO: Finish 'file' widget\n    'hidden': 'text',\n    'image': 'text', // TODO: Figure out how to handle these\n    'radio': 'radios',\n    'reset': 'submit', // TODO: Figure out how to handle these\n    'submit': SubmitComponent,\n\n  // Other (non-'input') HTML form control widgets\n    'button': ButtonComponent,\n    'select': SelectComponent,\n    // 'option': automatically generated by select widgets\n    // 'optgroup': automatically generated by select widgets\n    'textarea': TextareaComponent,\n\n  // HTML form control widget sets\n    'checkboxes': CheckboxesComponent, // Grouped list of checkboxes\n    'checkboxes-inline': 'checkboxes', // Checkboxes in one line\n    'checkboxbuttons': 'checkboxes', // Checkboxes as html buttons\n    'radios': RadiosComponent, // Grouped list of radio buttons\n    'radios-inline': 'radios', // Radio controls in one line\n    'radiobuttons': 'radios', // Radio controls as html buttons\n\n  // HTML Layout widgets\n    // 'label': automatically added to data widgets\n    // 'legend': automatically added to fieldsets\n    'section': SectionComponent, // Just a div <div>\n    'div': 'section', // Still just a div <div>\n    'fieldset': 'section', // A fieldset, with an optional legend <fieldset>\n    'flex': 'section', // A flexbox container <div style=\"display: flex\">\n\n  // Non-HTML layout widgets\n    'one-of': OneOfComponent, // A select box that changes another input\n                              // TODO: Finish 'one-of' widget\n    'array': 'section', // A list you can add, remove and reorder <fieldset>\n    'tabarray': 'tabs', // A tabbed version of array\n    'tab': 'section', // A tab group, similar to a fieldset or section <fieldset>\n    'tabs': TabsComponent, // A tabbed set of panels with different controls\n    'message': MessageComponent, // Insert arbitrary html\n    'help': 'message', // Insert arbitrary html\n    'msg': 'message', // Insert arbitrary html\n    'html': 'message', // Insert arbitrary html\n    'template': TemplateComponent, // Insert a custom Angular component\n\n  // Widgets included for compatibility with JSON Form API\n    'advancedfieldset': 'section', // Adds 'Advanced settings' title <fieldset>\n    'authfieldset': 'section', // Adds 'Authentication settings' title <fieldset>\n    'optionfieldset': 'one-of', // Option control, displays selected sub-item <fieldset>\n    'selectfieldset': 'one-of', // Select control, displays selected sub-item <fieldset>\n    'conditional': 'section', // Identical to 'section' (depeciated) <div>\n    'actions': 'section', // Horizontal button list, can only submit, uses buttons as items <div>\n    'tagsinput': 'section', // For entering short text tags <div>\n    // See: http://ulion.github.io/jsonform/playground/?example=fields-checkboxbuttons\n\n  // Widgets included for compatibility with React JSON Schema Form API\n    'updown': 'number',\n    'date-time': 'datetime-local',\n    'alt-datetime': 'datetime-local',\n    'alt-date': 'date',\n\n  // Widgets included for compatibility with Angular Schema Form API\n    'wizard': 'section', // TODO: Sequential panels with \"Next\" and \"Previous\" buttons\n\n  // Widgets included for compatibility with other libraries\n    'textline': 'text',\n\n  // Recommended 3rd-party add-on widgets (TODO: create wrappers for these...)\n    // 'ng2-select': Select control replacement - http://valor-software.com/ng2-select/\n    // 'flatpickr': Flatpickr date picker - https://github.com/chmln/flatpickr\n    // 'pikaday': Pikaday date picker - https://github.com/dbushell/Pikaday\n    // 'spectrum': Spectrum color picker - http://bgrins.github.io/spectrum\n    // 'bootstrap-slider': Bootstrap Slider range control - https://github.com/seiyria/bootstrap-slider\n    // 'ace': ACE code editor - https://ace.c9.io\n    // 'ckeditor': CKEditor HTML / rich text editor - http://ckeditor.com\n    // 'tinymce': TinyMCE HTML / rich text editor - https://www.tinymce.com\n    // 'imageselect': Bootstrap drop-down image selector - http://silviomoreto.github.io/bootstrap-select\n    // 'wysihtml5': HTML editor - http://jhollingworth.github.io/bootstrap-wysihtml5\n    // 'quill': Quill HTML / rich text editor (?) - https://quilljs.com\n  };\n  registeredWidgets: any = { };\n  frameworkWidgets: any = { };\n  activeWidgets: any = { };\n\n  constructor() {\n    this.setActiveWidgets();\n  }\n\n  setActiveWidgets(): boolean {\n    this.activeWidgets = Object.assign(\n      { }, this.widgetLibrary, this.frameworkWidgets, this.registeredWidgets\n    );\n    for (let widgetName of Object.keys(this.activeWidgets)) {\n      let widget: any = this.activeWidgets[widgetName];\n      // Resolve aliases\n      if (typeof widget === 'string') {\n        let usedAliases: string[] = [];\n        while (typeof widget === 'string' && !usedAliases.includes(widget)) {\n          usedAliases.push(widget);\n          widget = this.activeWidgets[widget];\n        }\n        if (typeof widget !== 'string') {\n          this.activeWidgets[widgetName] = widget;\n        }\n      }\n    }\n    return true;\n  }\n\n  setDefaultWidget(type: string): boolean {\n    if (!this.hasWidget(type)) { return false; }\n    this.defaultWidget = type;\n    return true;\n  }\n\n  hasWidget(type: string, widgetSet = 'activeWidgets'): boolean {\n    if (!type || typeof type !== 'string') { return false; }\n    return hasOwn(this[widgetSet], type);\n  }\n\n  hasDefaultWidget(type: string): boolean {\n    return this.hasWidget(type, 'widgetLibrary');\n  }\n\n  registerWidget(type: string, widget: any): boolean {\n    if (!type || !widget || typeof type !== 'string') { return false; }\n    this.registeredWidgets[type] = widget;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterWidget(type: string): boolean {\n    if (!hasOwn(this.registeredWidgets, type)) { return false; }\n    delete this.registeredWidgets[type];\n    return this.setActiveWidgets();\n  }\n\n  unRegisterAllWidgets(unRegisterFrameworkWidgets = true): boolean {\n    this.registeredWidgets = { };\n    if (unRegisterFrameworkWidgets) { this.frameworkWidgets = { }; }\n    return this.setActiveWidgets();\n  }\n\n  registerFrameworkWidgets(widgets: any): boolean {\n    if (widgets === null || typeof widgets !== 'object') { widgets = { }; }\n    this.frameworkWidgets = widgets;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterFrameworkWidgets(): boolean {\n    if (Object.keys(this.frameworkWidgets).length) {\n      this.frameworkWidgets = { };\n      return this.setActiveWidgets();\n    }\n    return false;\n  }\n\n  getWidget(type?: string, widgetSet = 'activeWidgets'): any {\n    if (this.hasWidget(type, widgetSet)) {\n      return this[widgetSet][type];\n    } else if (this.hasWidget(this.defaultWidget, widgetSet)) {\n      return this[widgetSet][this.defaultWidget];\n    } else {\n      return null;\n    }\n  }\n\n  getAllWidgets(): any {\n    return {\n      widgetLibrary: this.widgetLibrary,\n      registeredWidgets: this.registeredWidgets,\n      frameworkWidgets: this.frameworkWidgets,\n      activeWidgets: this.activeWidgets,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Framework {\n  name: string;\n  framework: any;\n  widgets?: { [key: string]: any } = {};\n  stylesheets?: string[] = [];\n  scripts?: string[] = [];\n};\n","import { Inject, Injectable } from '@angular/core';\n\nimport { WidgetLibraryService } from '../widget-library/widget-library.service';\nimport { hasOwn } from '../shared/utility.functions';\n\nimport { Framework } from './framework';\n\n// Possible future frameworks:\n// - Foundation 6:\n//   http://justindavis.co/2017/06/15/using-foundation-6-in-angular-4/\n//   https://github.com/zurb/foundation-sites\n// - Semantic UI:\n//   https://github.com/edcarroll/ng2-semantic-ui\n//   https://github.com/vladotesanovic/ngSemantic\n\n@Injectable()\nexport class FrameworkLibraryService {\n  activeFramework: Framework = null;\n  stylesheets: (HTMLStyleElement|HTMLLinkElement)[];\n  scripts: HTMLScriptElement[];\n  loadExternalAssets = false;\n  defaultFramework: string;\n  frameworkLibrary: { [name: string]: Framework } = {};\n\n  constructor(\n    @Inject(Framework) private frameworks: any[],\n    @Inject(WidgetLibraryService) private widgetLibrary: WidgetLibraryService\n  ) {\n    this.frameworks.forEach(framework =>\n      this.frameworkLibrary[framework.name] = framework\n    );\n    this.defaultFramework = this.frameworks[0].name;\n    this.setFramework(this.defaultFramework);\n  }\n\n  public setLoadExternalAssets(loadExternalAssets = true): void {\n    this.loadExternalAssets = !!loadExternalAssets;\n  }\n\n  public setFramework(\n    framework: string|Framework = this.defaultFramework,\n    loadExternalAssets = this.loadExternalAssets\n  ): boolean {\n    this.activeFramework =\n      typeof framework === 'string' && this.hasFramework(framework) ?\n        this.frameworkLibrary[framework] :\n      typeof framework === 'object' && hasOwn(framework, 'framework') ?\n        framework :\n        this.frameworkLibrary[this.defaultFramework];\n    return this.registerFrameworkWidgets(this.activeFramework);\n  }\n\n  registerFrameworkWidgets(framework: Framework): boolean {\n    return hasOwn(framework, 'widgets') ?\n      this.widgetLibrary.registerFrameworkWidgets(framework.widgets) :\n      this.widgetLibrary.unRegisterFrameworkWidgets();\n  }\n\n  public hasFramework(type: string): boolean {\n    return hasOwn(this.frameworkLibrary, type);\n  }\n\n  public getFramework(): any {\n    if (!this.activeFramework) { this.setFramework('default', true); }\n    return this.activeFramework.framework;\n  }\n\n  public getFrameworkWidgets(): any {\n    return this.activeFramework.widgets || {};\n  }\n\n  public getFrameworkStylesheets(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.stylesheets) || [];\n  }\n\n  public getFrameworkScripts(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.scripts) || [];\n  }\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n  forwardRef, Input, Output, OnChanges, OnInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\nimport * as _ from 'lodash';\n\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { convertSchemaToDraft6 } from './shared/convert-schema-to-draft6.function';\nimport { resolveSchemaReferences } from './shared/json-schema.functions';\nimport {\n  hasValue, inArray, isArray, isEmpty, isNumber, isObject\n} from './shared/validator.functions';\nimport { forEach, hasOwn } from './shared/utility.functions';\nimport { JsonPointer } from './shared/jsonpointer.functions';\n\nexport const JSON_SCHEMA_FORM_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => JsonSchemaFormComponent),\n  multi: true,\n};\n\n/**\n * @module 'JsonSchemaFormComponent' - Angular JSON Schema Form\n *\n * Root module of the Angular JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library also validates input data by the user, using both validators on\n * individual controls to provide real-time feedback while the user is filling\n * out the form, and then validating the entire input against the schema when\n * the form is submitted to make sure the returned JSON data object is valid.\n *\n * This library is similar to, and mostly API compatible with:\n *\n * - JSON Schema Form's Angular Schema Form library for AngularJs\n *   http://schemaform.io\n *   http://schemaform.io/examples/bootstrap-example.html (examples)\n *\n * - Mozilla's react-jsonschema-form library for React\n *   https://github.com/mozilla-services/react-jsonschema-form\n *   https://mozilla-services.github.io/react-jsonschema-form (examples)\n *\n * - Joshfire's JSON Form library for jQuery\n *   https://github.com/joshfire/jsonform\n *   http://ulion.github.io/jsonform/playground (examples)\n *\n * This library depends on:\n *  - Angular (obviously)                  https://angular.io\n *  - lodash, JavaScript utility library   https://github.com/lodash/lodash\n *  - ajv, Another JSON Schema validator   https://github.com/epoberezkin/ajv\n *\n * In addition, the Example Playground also depends on:\n *  - brace, Browserified Ace editor       http://thlorenz.github.io/brace\n */\n@Component({\n  selector: 'json-schema-form',\n  template: `\n    <div *ngFor=\"let stylesheet of stylesheets\">\n      <link rel=\"stylesheet\" [href]=\"stylesheet\">\n    </div>\n    <div *ngFor=\"let script of scripts\">\n      <script type=\"text/javascript\" [src]=\"script\"></script>\n    </div>\n    <form class=\"json-schema-form\" (ngSubmit)=\"submitForm()\">\n      <root-widget [layout]=\"jsf?.layout\"></root-widget>\n    </form>\n    <div *ngIf=\"debug || jsf?.formOptions?.debug\">\n      Debug output: <pre>{{debugOutput}}</pre>\n    </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // Adding 'JsonSchemaFormService' here, instead of in the module,\n  // creates a separate instance of the service for each component\n  providers:  [ JsonSchemaFormService, JSON_SCHEMA_FORM_VALUE_ACCESSOR ],\n})\nexport class JsonSchemaFormComponent implements ControlValueAccessor, OnChanges, OnInit {\n  debugOutput: any; // Debug information, if requested\n  formValueSubscription: any = null;\n  formInitialized = false;\n  objectWrap = false; // Is non-object input schema wrapped in an object?\n\n  formValuesInput: string; // Name of the input providing the form data\n  previousInputs: { // Previous input values, to detect which input triggers onChanges\n    schema: any, layout: any[], data: any, options: any, framework: any|string,\n    widgets: any, form: any, model: any, JSONSchema: any, UISchema: any,\n    formData: any, loadExternalAssets: boolean, debug: boolean,\n  } = {\n    schema: null, layout: null, data: null, options: null, framework: null,\n    widgets: null, form: null, model: null, JSONSchema: null, UISchema: null,\n    formData: null, loadExternalAssets: null, debug: null,\n  };\n\n  // Recommended inputs\n  @Input() schema: any; // The JSON Schema\n  @Input() layout: any[]; // The form layout\n  @Input() data: any; // The form data\n  @Input() options: any; // The global form options\n  @Input() framework: any|string; // The framework to load\n  @Input() widgets: any; // Any custom widgets to load\n\n  // Alternate combined single input\n  @Input() form: any; // For testing, and JSON Schema Form API compatibility\n\n  // Angular Schema Form API compatibility input\n  @Input() model: any; // Alternate input for form data\n\n  // React JSON Schema Form API compatibility inputs\n  @Input() JSONSchema: any; // Alternate input for JSON Schema\n  @Input() UISchema: any; // UI schema - alternate form layout format\n  @Input() formData: any; // Alternate input for form data\n\n  @Input() ngModel: any; // Alternate input for Angular forms\n\n  @Input() language: string; // Language\n\n  // Development inputs, for testing and debugging\n  @Input() loadExternalAssets: boolean; // Load external framework assets?\n  @Input() debug: boolean; // Show debug information?\n\n  @Input()\n  get value(): any {\n    return this.objectWrap ? this.jsf.data['1'] : this.jsf.data;\n  };\n  set value(value: any) {\n    this.setFormValues(value, false);\n  }\n\n  // Outputs\n  @Output() onChanges = new EventEmitter<any>(); // Live unvalidated internal form data\n  @Output() onSubmit = new EventEmitter<any>(); // Complete validated form data\n  @Output() isValid = new EventEmitter<boolean>(); // Is current data valid?\n  @Output() validationErrors = new EventEmitter<any>(); // Validation errors (if any)\n  @Output() formSchema = new EventEmitter<any>(); // Final schema used to create form\n  @Output() formLayout = new EventEmitter<any>(); // Final layout used to create form\n\n  // Outputs for possible 2-way data binding\n  // Only the one input providing the initial form data will be bound.\n  // If there is no inital data, input '{}' to activate 2-way data binding.\n  // There is no 2-way binding if inital data is combined inside the 'form' input.\n  @Output() dataChange = new EventEmitter<any>();\n  @Output() modelChange = new EventEmitter<any>();\n  @Output() formDataChange = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n\n  onChange: Function;\n  onTouched: Function;\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private frameworkLibrary: FrameworkLibraryService,\n    private widgetLibrary: WidgetLibraryService,\n    public jsf: JsonSchemaFormService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  get stylesheets(): SafeResourceUrl[] {\n    const stylesheets = this.frameworkLibrary.getFrameworkStylesheets();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return stylesheets.map(stylesheet => load(stylesheet));\n  }\n\n  get scripts(): SafeResourceUrl[] {\n    const scripts = this.frameworkLibrary.getFrameworkScripts();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return scripts.map(script => load(script));\n  }\n\n  ngOnInit() {\n    this.updateForm();\n  }\n\n  ngOnChanges() {\n    this.updateForm();\n  }\n\n  writeValue(value: any) {\n    this.setFormValues(value, false);\n    if (!this.formValuesInput) { this.formValuesInput = 'ngModel'; }\n  }\n\n  registerOnChange(fn: Function) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: Function) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.jsf.formOptions.formDisabled !== !!isDisabled) {\n      this.jsf.formOptions.formDisabled = !!isDisabled;\n      this.initializeForm();\n    }\n  }\n\n  updateForm() {\n    if (!this.formInitialized || !this.formValuesInput ||\n      (this.language && this.language !== this.jsf.language)\n    ) {\n      this.initializeForm();\n    } else {\n      if (this.language && this.language !== this.jsf.language) {\n        this.jsf.setLanguage(this.language);\n      }\n\n      // Get names of changed inputs\n      let changedInput = Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input]);\n      let resetFirst = true;\n      if (changedInput.length === 1 && changedInput[0] === 'form' &&\n        this.formValuesInput.startsWith('form.')\n      ) {\n        // If only 'form' input changed, get names of changed keys\n        changedInput = Object.keys(this.previousInputs.form || {})\n          .filter(key => !_.isEqual(this.previousInputs.form[key], this.form[key]))\n          .map(key => `form.${key}`);\n        resetFirst = false;\n      }\n\n      // If only input values have changed, update the form values\n      if (changedInput.length === 1 && changedInput[0] === this.formValuesInput) {\n        if (this.formValuesInput.indexOf('.') === -1) {\n          this.setFormValues(this[this.formValuesInput], resetFirst);\n        } else {\n          const [input, key] = this.formValuesInput.split('.');\n          this.setFormValues(this[input][key], resetFirst);\n        }\n\n      // If anything else has changed, re-render the entire form\n      } else if (changedInput.length) {\n        this.initializeForm();\n        if (this.onChange) { this.onChange(this.jsf.formValues); }\n        if (this.onTouched) { this.onTouched(this.jsf.formValues); }\n      }\n\n      // Update previous inputs\n      Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input])\n        .forEach(input => this.previousInputs[input] = this[input]);\n    }\n  }\n\n  setFormValues(formValues: any, resetFirst = true) {\n    if (formValues) {\n      let newFormValues = this.objectWrap ? formValues['1'] : formValues;\n      if (!this.jsf.formGroup) {\n        this.jsf.formValues = formValues;\n        this.activateForm();\n      } else if (resetFirst) {\n        this.jsf.formGroup.reset();\n      }\n      if (this.jsf.formGroup) {\n        this.jsf.formGroup.patchValue(newFormValues);\n      }\n      if (this.onChange) { this.onChange(newFormValues); }\n      if (this.onTouched) { this.onTouched(newFormValues); }\n    } else {\n      this.jsf.formGroup.reset();\n    }\n  }\n\n  submitForm() {\n    const validData = this.jsf.validData;\n    this.onSubmit.emit(this.objectWrap ? validData['1'] : validData);\n  }\n\n  /**\n   * 'initializeForm' function\n   *\n   * - Update 'schema', 'layout', and 'formValues', from inputs.\n   *\n   * - Create 'schemaRefLibrary' and 'schemaRecursiveRefMap'\n   *   to resolve schema $ref links, including recursive $ref links.\n   *\n   * - Create 'dataRecursiveRefMap' to resolve recursive links in data\n   *   and corectly set output formats for recursively nested values.\n   *\n   * - Create 'layoutRefLibrary' and 'templateRefLibrary' to store\n   *   new layout nodes and formGroup elements to use when dynamically\n   *   adding form components to arrays and recursive $ref points.\n   *\n   * - Create 'dataMap' to map the data to the schema and template.\n   *\n   * - Create the master 'formGroupTemplate' then from it 'formGroup'\n   *   the Angular formGroup used to control the reactive form.\n   */\n  initializeForm() {\n    if (\n      this.schema || this.layout || this.data || this.form || this.model ||\n      this.JSONSchema || this.UISchema || this.formData || this.ngModel ||\n      this.jsf.data\n    ) {\n\n      this.jsf.resetAllValues();  // Reset all form values to defaults\n      this.initializeOptions();   // Update options\n      this.initializeSchema();    // Update schema, schemaRefLibrary,\n                                  // schemaRecursiveRefMap, & dataRecursiveRefMap\n      this.initializeLayout();    // Update layout, layoutRefLibrary,\n      this.initializeData();      // Update formValues\n      this.activateForm();        // Update dataMap, templateRefLibrary,\n                                  // formGroupTemplate, formGroup\n\n      // Uncomment individual lines to output debugging information to console:\n      // (These always work.)\n      // console.log('loading form...');\n      // console.log('schema', this.jsf.schema);\n      // console.log('layout', this.jsf.layout);\n      // console.log('options', this.options);\n      // console.log('formValues', this.jsf.formValues);\n      // console.log('formGroupTemplate', this.jsf.formGroupTemplate);\n      // console.log('formGroup', this.jsf.formGroup);\n      // console.log('formGroup.value', this.jsf.formGroup.value);\n      // console.log('schemaRefLibrary', this.jsf.schemaRefLibrary);\n      // console.log('layoutRefLibrary', this.jsf.layoutRefLibrary);\n      // console.log('templateRefLibrary', this.jsf.templateRefLibrary);\n      // console.log('dataMap', this.jsf.dataMap);\n      // console.log('arrayMap', this.jsf.arrayMap);\n      // console.log('schemaRecursiveRefMap', this.jsf.schemaRecursiveRefMap);\n      // console.log('dataRecursiveRefMap', this.jsf.dataRecursiveRefMap);\n\n      // Uncomment individual lines to output debugging information to browser:\n      // (These only work if the 'debug' option has also been set to 'true'.)\n      if (this.debug || this.jsf.formOptions.debug) {\n        const vars: any[] = [];\n        // vars.push(this.jsf.schema);\n        // vars.push(this.jsf.layout);\n        // vars.push(this.options);\n        // vars.push(this.jsf.formValues);\n        // vars.push(this.jsf.formGroup.value);\n        // vars.push(this.jsf.formGroupTemplate);\n        // vars.push(this.jsf.formGroup);\n        // vars.push(this.jsf.schemaRefLibrary);\n        // vars.push(this.jsf.layoutRefLibrary);\n        // vars.push(this.jsf.templateRefLibrary);\n        // vars.push(this.jsf.dataMap);\n        // vars.push(this.jsf.arrayMap);\n        // vars.push(this.jsf.schemaRecursiveRefMap);\n        // vars.push(this.jsf.dataRecursiveRefMap);\n        this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n');\n      }\n      this.formInitialized = true;\n    }\n  }\n\n  /**\n   * 'initializeOptions' function\n   *\n   * Initialize 'options' (global form options) and set framework\n   * Combine available inputs:\n   * 1. options - recommended\n   * 2. form.options - Single input style\n   */\n  private initializeOptions() {\n    if (this.language && this.language !== this.jsf.language) {\n      this.jsf.setLanguage(this.language);\n    }\n    this.jsf.setOptions({ debug: !!this.debug });\n    let loadExternalAssets: boolean = this.loadExternalAssets || false;\n    let framework: any = this.framework || 'default';\n    if (isObject(this.options)) {\n      this.jsf.setOptions(this.options);\n      loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets;\n      framework = this.options.framework || framework;\n    }\n    if (isObject(this.form) && isObject(this.form.options)) {\n      this.jsf.setOptions(this.form.options);\n      loadExternalAssets = this.form.options.loadExternalAssets || loadExternalAssets;\n      framework = this.form.options.framework || framework;\n    }\n    if (isObject(this.widgets)) {\n      this.jsf.setOptions({ widgets: this.widgets });\n    }\n    this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets);\n    this.frameworkLibrary.setFramework(framework);\n    this.jsf.framework = this.frameworkLibrary.getFramework();\n    if (isObject(this.jsf.formOptions.widgets)) {\n      for (let widget of Object.keys(this.jsf.formOptions.widgets)) {\n        this.widgetLibrary.registerWidget(widget, this.jsf.formOptions.widgets[widget]);\n      }\n    }\n    if (isObject(this.form) && isObject(this.form.tpldata)) {\n      this.jsf.setTpldata(this.form.tpldata);\n    }\n  }\n\n  /**\n   * 'initializeSchema' function\n   *\n   * Initialize 'schema'\n   * Use first available input:\n   * 1. schema - recommended / Angular Schema Form style\n   * 2. form.schema - Single input / JSON Form style\n   * 3. JSONSchema - React JSON Schema Form style\n   * 4. form.JSONSchema - For testing single input React JSON Schema Forms\n   * 5. form - For testing single schema-only inputs\n   *\n   * ... if no schema input found, the 'activateForm' function, below,\n   *     will make two additional attempts to build a schema\n   * 6. If layout input - build schema from layout\n   * 7. If data input - build schema from data\n   */\n  private initializeSchema() {\n\n    // TODO: update to allow non-object schemas\n\n    if (isObject(this.schema)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.schema);\n    } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\n      this.jsf.schema = _.cloneDeep(this.form.schema);\n    } else if (isObject(this.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.JSONSchema);\n    } else if (hasOwn(this.form, 'JSONSchema') && isObject(this.form.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.form.JSONSchema);\n    } else if (hasOwn(this.form, 'properties') && isObject(this.form.properties)) {\n      this.jsf.schema = _.cloneDeep(this.form);\n    } else if (isObject(this.form)) {\n      // TODO: Handle other types of form input\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If other types also allowed, render schema as an object\n      if (inArray('object', this.jsf.schema.type)) {\n        this.jsf.schema.type = 'object';\n      }\n\n      // Wrap non-object schemas in object.\n      if (hasOwn(this.jsf.schema, 'type') && this.jsf.schema.type !== 'object') {\n        this.jsf.schema = {\n          'type': 'object',\n          'properties': { 1: this.jsf.schema }\n        };\n        this.objectWrap = true;\n      } else if (!hasOwn(this.jsf.schema, 'type')) {\n\n        // Add type = 'object' if missing\n        if (isObject(this.jsf.schema.properties) ||\n          isObject(this.jsf.schema.patternProperties) ||\n          isObject(this.jsf.schema.additionalProperties)\n        ) {\n          this.jsf.schema.type = 'object';\n\n        // Fix JSON schema shorthand (JSON Form style)\n        } else {\n          this.jsf.JsonFormCompatibility = true;\n          this.jsf.schema = {\n            'type': 'object',\n            'properties': this.jsf.schema\n          };\n        }\n      }\n\n      // If needed, update JSON Schema to draft 6 format, including\n      // draft 3 (JSON Form style) and draft 4 (Angular Schema Form style)\n      this.jsf.schema = convertSchemaToDraft6(this.jsf.schema);\n\n      // Initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Create schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n      this.jsf.schema = resolveSchemaReferences(\n        this.jsf.schema, this.jsf.schemaRefLibrary, this.jsf.schemaRecursiveRefMap,\n        this.jsf.dataRecursiveRefMap, this.jsf.arrayMap\n      );\n      if (hasOwn(this.jsf.schemaRefLibrary, '')) {\n        this.jsf.hasRootReference = true;\n      }\n\n      // TODO: (?) Resolve external $ref links\n      // // Create schemaRefLibrary & schemaRecursiveRefMap\n      // this.parser.bundle(this.schema)\n      //   .then(schema => this.schema = resolveSchemaReferences(\n      //     schema, this.jsf.schemaRefLibrary,\n      //     this.jsf.schemaRecursiveRefMap, this.jsf.dataRecursiveRefMap\n      //   ));\n    }\n  }\n\n  /**\n   * 'initializeData' function\n   *\n   * Initialize 'formValues'\n   * defulat or previously submitted values used to populate form\n   * Use first available input:\n   * 1. data - recommended\n   * 2. model - Angular Schema Form style\n   * 3. form.value - JSON Form style\n   * 4. form.data - Single input style\n   * 5. formData - React JSON Schema Form style\n   * 6. form.formData - For easier testing of React JSON Schema Forms\n   * 7. (none) no data - initialize data from schema and layout defaults only\n   */\n  private initializeData() {\n    if (hasValue(this.data)) {\n      this.jsf.formValues = _.cloneDeep(this.data);\n      this.formValuesInput = 'data';\n    } else if (hasValue(this.model)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.model);\n      this.formValuesInput = 'model';\n    } else if (hasValue(this.ngModel)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.ngModel);\n      this.formValuesInput = 'ngModel';\n    } else if (isObject(this.form) && hasValue(this.form.value)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.form.value);\n      this.formValuesInput = 'form.value';\n    } else if (isObject(this.form) && hasValue(this.form.data)) {\n      this.jsf.formValues = _.cloneDeep(this.form.data);\n      this.formValuesInput = 'form.data';\n    } else if (hasValue(this.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.formValuesInput = 'formData';\n    } else if (hasOwn(this.form, 'formData') && hasValue(this.form.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.form.formData);\n      this.formValuesInput = 'form.formData';\n    } else {\n      this.formValuesInput = null;\n    }\n  }\n\n  /**\n   * 'initializeLayout' function\n   *\n   * Initialize 'layout'\n   * Use first available array input:\n   * 1. layout - recommended\n   * 2. form - Angular Schema Form style\n   * 3. form.form - JSON Form style\n   * 4. form.layout - Single input style\n   * 5. (none) no layout - set default layout instead\n   *    (full layout will be built later from the schema)\n   *\n   * Also, if alternate layout formats are available,\n   * import from 'UISchema' or 'customFormItems'\n   * used for React JSON Schema Form and JSON Form API compatibility\n   * Use first available input:\n   * 1. UISchema - React JSON Schema Form style\n   * 2. form.UISchema - For testing single input React JSON Schema Forms\n   * 2. form.customFormItems - JSON Form style\n   * 3. (none) no input - don't import\n   */\n  private initializeLayout() {\n\n    // Rename JSON Form-style 'options' lists to\n    // Angular Schema Form-style 'titleMap' lists.\n    const fixJsonFormOptions = (layout: any): any => {\n      if (isObject(layout) || isArray(layout)) {\n        forEach(layout, (value, key) => {\n          if (hasOwn(value, 'options') && isObject(value.options)) {\n            value.titleMap = value.options;\n            delete value.options;\n          }\n        }, 'top-down');\n      }\n      return layout;\n    }\n\n    // Check for layout inputs and, if found, initialize form layout\n    if (isArray(this.layout)) {\n      this.jsf.layout = _.cloneDeep(this.layout);\n    } else if (isArray(this.form)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.layout = _.cloneDeep(this.form);\n    } else if (this.form && isArray(this.form.form)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.layout = fixJsonFormOptions(_.cloneDeep(this.form.form));\n    } else if (this.form && isArray(this.form.layout)) {\n      this.jsf.layout = _.cloneDeep(this.form.layout);\n    } else {\n      this.jsf.layout = ['*'];\n    }\n\n    // Check for alternate layout inputs\n    let alternateLayout: any = null;\n    if (isObject(this.UISchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.UISchema);\n    } else if (hasOwn(this.form, 'UISchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.form.UISchema);\n    } else if (hasOwn(this.form, 'uiSchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.form.uiSchema);\n    } else if (hasOwn(this.form, 'customFormItems')) {\n      this.jsf.JsonFormCompatibility = true;\n      alternateLayout = fixJsonFormOptions(_.cloneDeep(this.form.customFormItems));\n    }\n\n    // if alternate layout found, copy alternate layout options into schema\n    if (alternateLayout) {\n      JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\n        const schemaPointer = pointer\n          .replace(/\\//g, '/properties/')\n          .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\n          .replace(/\\/properties\\/titleMap\\/properties\\//g, '/titleMap/properties/');\n        if (hasValue(value) && hasValue(pointer)) {\n          let key = JsonPointer.toKey(pointer);\n          const groupPointer = (JsonPointer.parse(schemaPointer) || []).slice(0, -2);\n          let itemPointer: string | string[];\n\n          // If 'ui:order' object found, copy into object schema root\n          if (key.toLowerCase() === 'ui:order') {\n            itemPointer = [...groupPointer, 'ui:order'];\n\n          // Copy other alternate layout options to schema 'x-schema-form',\n          // (like Angular Schema Form options) and remove any 'ui:' prefixes\n          } else {\n            if (key.slice(0, 3).toLowerCase() === 'ui:') { key = key.slice(3); }\n            itemPointer = [...groupPointer, 'x-schema-form', key];\n          }\n          if (JsonPointer.has(this.jsf.schema, groupPointer) &&\n            !JsonPointer.has(this.jsf.schema, itemPointer)\n          ) {\n            JsonPointer.set(this.jsf.schema, itemPointer, value);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * 'activateForm' function\n   *\n   * ...continued from 'initializeSchema' function, above\n   * If 'schema' has not been initialized (i.e. no schema input found)\n   * 6. If layout input - build schema from layout input\n   * 7. If data input - build schema from data input\n   *\n   * Create final layout,\n   * build the FormGroup template and the Angular FormGroup,\n   * subscribe to changes,\n   * and activate the form.\n   */\n  private activateForm() {\n\n    // If 'schema' not initialized\n    if (isEmpty(this.jsf.schema)) {\n\n      // TODO: If full layout input (with no '*'), build schema from layout\n      // if (!this.jsf.layout.includes('*')) {\n      //   this.jsf.buildSchemaFromLayout();\n      // } else\n\n      // If data input, build schema from data\n      if (!isEmpty(this.jsf.formValues)) {\n        this.jsf.buildSchemaFromData();\n      }\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If not already initialized, initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Update all layout elements, add values, widgets, and validators,\n      // replace any '*' with a layout built from all schema elements,\n      // and update the FormGroup template with any new validators\n      this.jsf.buildLayout(this.widgetLibrary);\n\n      // Build the Angular FormGroup template from the schema\n      this.jsf.buildFormGroupTemplate(this.jsf.formValues);\n\n      // Build the real Angular FormGroup from the FormGroup template\n      this.jsf.buildFormGroup();\n    }\n\n    if (this.jsf.formGroup) {\n\n      // Reset initial form values\n      if (!isEmpty(this.jsf.formValues) &&\n        this.jsf.formOptions.setSchemaDefaults !== true &&\n        this.jsf.formOptions.setLayoutDefaults !== true\n      ) {\n        this.setFormValues(this.jsf.formValues);\n      }\n\n      // TODO: Figure out how to display calculated values without changing object data\n      // See http://ulion.github.io/jsonform/playground/?example=templating-values\n      // Calculate references to other fields\n      // if (!isEmpty(this.jsf.formGroup.value)) {\n      //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\n      //     if (typeof value === 'string') {\n      //       object[key] = this.jsf.parseText(value, value, rootObject, key);\n      //     }\n      //   }, 'top-down');\n      // }\n\n      // Subscribe to form changes to output live data, validation, and errors\n      this.jsf.dataChanges.subscribe(data => {\n        this.onChanges.emit(this.objectWrap ? data['1'] : data);\n        if (this.formValuesInput && this.formValuesInput.indexOf('.') === -1) {\n          this[`${this.formValuesInput}Change`].emit(this.objectWrap ? data['1'] : data);\n        }\n      });\n\n      // Trigger change detection on statusChanges to show updated errors\n      this.jsf.formGroup.statusChanges.subscribe(() => this.changeDetector.markForCheck());\n      this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid));\n      this.jsf.validationErrorChanges.subscribe(err => this.validationErrors.emit(err));\n\n      // Output final schema, final layout, and initial data\n      this.formSchema.emit(this.jsf.schema);\n      this.formLayout.emit(this.jsf.layout);\n      this.onChanges.emit(this.objectWrap ? this.jsf.data['1'] : this.jsf.data);\n\n      // If validateOnRender, output initial validation and any errors\n      const validateOnRender =\n        JsonPointer.get(this.jsf, '/formOptions/validateOnRender');\n      if (validateOnRender) { // validateOnRender === 'auto' || true\n        const touchAll = (control) => {\n          if (validateOnRender === true || hasValue(control.value)) {\n            control.markAsTouched();\n          }\n          Object.keys(control.controls || {})\n            .forEach(key => touchAll(control.controls[key]));\n        };\n        touchAll(this.jsf.formGroup);\n        this.isValid.emit(this.jsf.isValid);\n        this.validationErrors.emit(this.jsf.ajvErrors);\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'hidden-widget',\n  template: `\n    <input *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [id]=\"'control' + layoutNode?._id\"\n      [name]=\"controlName\"\n      type=\"hidden\">\n    <input *ngIf=\"!boundControl\"\n      [disabled]=\"controlDisabled\"\n      [name]=\"controlName\"\n      [id]=\"'control' + layoutNode?._id\"\n      type=\"hidden\"\n      [value]=\"controlValue\">`,\n})\nexport class HiddenComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'tab-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <root-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layout]=\"layoutNode.items\"></root-widget>\n    </div>`,\n})\nexport class TabComponent implements OnInit {\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { OneOfComponent } from './one-of.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { HiddenComponent } from './hidden.component';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabComponent } from './tab.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\nexport const BASIC_WIDGETS = [\n  AddReferenceComponent, OneOfComponent, ButtonComponent, CheckboxComponent,\n  CheckboxesComponent, FileComponent, HiddenComponent, InputComponent,\n  MessageComponent, NoneComponent, NumberComponent, RadiosComponent,\n  RootComponent, SectionComponent, SelectComponent, SelectFrameworkComponent,\n  SelectWidgetComponent, SubmitComponent, TabComponent, TabsComponent,\n  TemplateComponent, TextareaComponent\n];\n\nexport { AddReferenceComponent } from './add-reference.component';\nexport { OneOfComponent } from './one-of.component';\nexport { ButtonComponent } from './button.component';\nexport { CheckboxComponent } from './checkbox.component';\nexport { CheckboxesComponent } from './checkboxes.component';\nexport { FileComponent } from './file.component';\nexport { HiddenComponent } from './hidden.component';\nexport { InputComponent } from './input.component';\nexport { MessageComponent } from './message.component';\nexport { NoneComponent } from './none.component';\nexport { NumberComponent } from './number.component';\nexport { RadiosComponent } from './radios.component';\nexport { RootComponent } from './root.component';\nexport { SectionComponent } from './section.component';\nexport { SelectComponent } from './select.component';\nexport { SelectFrameworkComponent } from './select-framework.component';\nexport { SelectWidgetComponent } from './select-widget.component';\nexport { SubmitComponent } from './submit.component';\nexport { TabComponent } from './tab.component';\nexport { TabsComponent } from './tabs.component';\nexport { TemplateComponent } from './template.component';\nexport { TextareaComponent } from './textarea.component';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { OrderableDirective } from '../shared/orderable.directive';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\nimport { BASIC_WIDGETS } from './index';\n\n@NgModule({\n  imports:         [ CommonModule, FormsModule, ReactiveFormsModule ],\n  declarations:    [ ...BASIC_WIDGETS, OrderableDirective ],\n  exports:         [ ...BASIC_WIDGETS, OrderableDirective ],\n  entryComponents: [ ...BASIC_WIDGETS ],\n  providers:       [ JsonSchemaFormService ]\n})\nexport class WidgetLibraryModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: WidgetLibraryModule,\n      providers: [ JsonSchemaFormService ]\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'no-framework',\n  template: `\n    <select-widget-widget\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"layoutNode\"></select-widget-widget>`,\n})\nexport class NoFrameworkComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Injectable } from '@angular/core';\n\nimport { Framework } from '../framework';\n\n// No framework - plain HTML controls (styles from form layout only)\nimport { NoFrameworkComponent } from './no-framework.component';\n\n@Injectable()\nexport class NoFramework extends Framework {\n  name = 'no-framework';\n\n  framework = NoFrameworkComponent;\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { Framework } from '../framework';\n// No framework - plain HTML controls (styles from form layout only)\nimport { NoFrameworkComponent } from './no-framework.component';\nimport { NoFramework } from './no.framework';\n\n@NgModule({\n  imports:         [ CommonModule, WidgetLibraryModule ],\n  declarations:    [ NoFrameworkComponent ],\n  exports:         [ NoFrameworkComponent ],\n  entryComponents: [ NoFrameworkComponent ]\n})\nexport class NoFrameworkModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NoFrameworkModule,\n      providers: [\n        { provide: Framework, useClass: NoFramework, multi: true }\n      ]\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\n\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\n\nimport { JsonSchemaFormService } from './json-schema-form.service';\n\nimport { NoFrameworkComponent } from './framework-library/no-framework/no-framework.component';\nimport { Framework } from './framework-library/framework';\nimport { NoFramework } from './framework-library/no-framework/no.framework';\nimport { NoFrameworkModule } from './framework-library/no-framework/no-framework.module';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule,\n    WidgetLibraryModule, NoFrameworkModule\n  ],\n  declarations: [ JsonSchemaFormComponent ],\n  exports: [ JsonSchemaFormComponent, WidgetLibraryModule ]\n})\nexport class JsonSchemaFormModule {\n  static forRoot(...frameworks): ModuleWithProviders {\n    const loadFrameworks = frameworks.length ?\n      frameworks.map(framework => framework.forRoot().providers[0]) :\n      [{ provide: Framework, useClass: NoFramework, multi: true }];\n    return {\n      ngModule: JsonSchemaFormModule,\n      providers: [\n        JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n        ...loadFrameworks\n      ]\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { hasValue, JsonPointer } from '../../shared';\n\n@Component({\n  selector: 'flex-layout-root-widget',\n  template: `\n    <div *ngFor=\"let layoutNode of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.flex-grow]=\"getFlexAttribute(layoutNode, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutNode, 'flex-shrink')\"\n      [style.flex-basis]=\"getFlexAttribute(layoutNode, 'flex-basis')\"\n      [style.align-self]=\"(layoutNode?.options || {})['align-self']\"\n      [style.order]=\"layoutNode?.options?.order\"\n      [fxFlex]=\"layoutNode?.options?.fxFlex\"\n      [fxFlexOrder]=\"layoutNode?.options?.fxFlexOrder\"\n      [fxFlexOffset]=\"layoutNode?.options?.fxFlexOffset\"\n      [fxFlexAlign]=\"layoutNode?.options?.fxFlexAlign\">\n      <select-framework-widget *ngIf=\"showWidget(layoutNode)\"\n        [dataIndex]=\"layoutNode?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutNode\"></select-framework-widget>\n    <div>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class FlexLayoutRootComponent {\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  removeItem(item) {\n    this.jsf.removeItem(item);\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in flex-layout-section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { toTitleCase } from '../../shared';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'flex-layout-section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>\n\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </fieldset>\n\n    <mat-card *ngIf=\"containerType === 'card'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <mat-card-header *ngIf=\"sectionTitle\">\n        <legend\n          [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n          [innerHTML]=\"sectionTitle\"\n          (click)=\"toggleExpanded()\"></legend>\n      </mat-card-header>\n      <mat-card-content *ngIf=\"expanded\">\n        <fieldset [disabled]=\"options?.readonly\">\n          <flex-layout-root-widget *ngIf=\"expanded\"\n            [layout]=\"layoutNode.items\"\n            [dataIndex]=\"dataIndex\"\n            [layoutIndex]=\"layoutIndex\"\n            [isFlexItem]=\"getFlexAttribute('is-flex')\"\n            [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n            [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n            [style.display]=\"getFlexAttribute('display')\"\n            [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n            [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n            [style.justify-content]=\"getFlexAttribute('justify-content')\"\n            [style.align-items]=\"getFlexAttribute('align-items')\"\n            [style.align-content]=\"getFlexAttribute('align-content')\"\n            [fxLayout]=\"getFlexAttribute('layout')\"\n            [fxLayoutGap]=\"options?.fxLayoutGap\"\n            [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n            [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n          </fieldset>\n      </mat-card-content>\n      <mat-card-footer>\n        <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n          [innerHTML]=\"options?.errorMessage\"></mat-error>\n      </mat-card-footer>\n    </mat-card>\n\n    <mat-expansion-panel *ngIf=\"containerType === 'expansion-panel'\"\n      [expanded]=\"expanded\"\n      [hideToggle]=\"!options?.expandable\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <legend *ngIf=\"sectionTitle\"\n            [class]=\"options?.labelHtmlClass\"\n            [innerHTML]=\"sectionTitle\"\n            (click)=\"toggleExpanded()\"></legend>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <fieldset [disabled]=\"options?.readonly\">\n        <flex-layout-root-widget *ngIf=\"expanded\"\n          [layout]=\"layoutNode.items\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"\n          [isFlexItem]=\"getFlexAttribute('is-flex')\"\n          [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n          [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n          [style.display]=\"getFlexAttribute('display')\"\n          [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n          [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n          [style.justify-content]=\"getFlexAttribute('justify-content')\"\n          [style.align-items]=\"getFlexAttribute('align-items')\"\n          [style.align-content]=\"getFlexAttribute('align-content')\"\n          [fxLayout]=\"getFlexAttribute('layout')\"\n          [fxLayoutGap]=\"options?.fxLayoutGap\"\n          [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n          [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      </fieldset>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </mat-expansion-panel>`,\n  styles: [`\n    fieldset { border: 0; margin: 0; padding: 0; }\n    .legend { font-weight: bold; }\n    .expandable > .legend:before { content: 'â¶'; padding-right: .3em; }\n    .expanded > .legend:before { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class FlexLayoutSectionComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  expanded = true;\n  containerType = 'div';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'section': case 'array': case 'fieldset': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n        break;\n      case 'card':\n        this.containerType = 'card';\n        break;\n      case 'expansion-panel':\n        this.containerType = 'expansion-panel';\n        break;\n      default: // 'div', 'flex', 'tab', 'conditional', 'actions'\n        this.containerType = 'div';\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in flex-layout-root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    // if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n      case 'layout':\n        return (this.options.fxLayout || 'row') +\n          this.options.fxLayoutWrap ? ' ' + this.options.fxLayoutWrap : '';\n\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-add-reference-widget',\n  template: `\n    <section [class]=\"options?.htmlClass || ''\" align=\"end\">\n      <button mat-raised-button *ngIf=\"showAddButton\"\n        [color]=\"options?.color || 'accent'\"\n        [disabled]=\"options?.readonly\"\n        (click)=\"addItem($event)\">\n        <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n      </button>\n    </section>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MaterialAddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this),\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-one-of-widget',\n  template: ``,\n})\nexport class MaterialOneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { hasOwn } from '../../shared/utility.functions';\n\n@Component({\n  selector: 'material-button-widget',\n  template: `\n    <div class=\"button-row\" [class]=\"options?.htmlClass || ''\">\n      <button mat-raised-button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <mat-icon *ngIf=\"options?.icon\" class=\"mat-24\">{{options?.icon}}</mat-icon>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n    styles: [` button { margin-top: 10px; } `],\n})\nexport class MaterialButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { buildTitleMap } from '../../shared';\n\n@Component({\n  selector: 'material-button-group-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-button-toggle-group\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        [vertical]=\"!!options.vertical\">\n        <mat-button-toggle *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialButtonGroupComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  radiosList: any[] = [];\n  vertical = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { hasOwn } from './../../shared/utility.functions';\n\n@Component({\n  selector: 'material-checkbox-widget',\n  template: `\n    <mat-checkbox *ngIf=\"boundControl && !showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-checkbox *ngIf=\"!boundControl && !showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-slide-toggle *ngIf=\"boundControl && showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-slide-toggle *ngIf=\"!boundControl && showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  showSlideToggle = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = false;\n      this.jsf.updateValue(this, this.falseValue);\n    }\n    if (this.layoutNode.type === 'slide-toggle' ||\n      this.layoutNode.format === 'slide-toggle'\n    ) {\n      this.showSlideToggle = true;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService, TitleMapItem } from '../../json-schema-form.service';\nimport { buildFormGroup, buildTitleMap, hasOwn, JsonPointer } from '../../shared';\n\n// TODO: Change this to use a Selection List instead?\n// https://material.angular.io/components/list/overview\n\n@Component({\n  selector: 'material-checkboxes-widget',\n  template: `\n    <div>\n      <mat-checkbox type=\"checkbox\"\n        [checked]=\"allChecked\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [indeterminate]=\"someChecked\"\n        [name]=\"options?.name\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateAllValues($event)\">\n        <span class=\"checkbox-name\" [innerHTML]=\"options?.name\"></span>\n      </mat-checkbox>\n      <label *ngIf=\"options?.title\"\n        class=\"title\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <ul class=\"checkbox-list\" [class.horizontal-list]=\"horizontalList\">\n        <li *ngFor=\"let checkboxItem of checkboxList\"\n          [class]=\"options?.htmlClass || ''\">\n          <mat-checkbox type=\"checkbox\"\n            [(ngModel)]=\"checkboxItem.checked\"\n            [color]=\"options?.color || 'primary'\"\n            [disabled]=\"controlDisabled || options?.readonly\"\n            [name]=\"checkboxItem?.name\"\n            (blur)=\"options.showErrors = true\"\n            (change)=\"updateValue()\">\n            <span class=\"checkbox-name\" [innerHTML]=\"checkboxItem?.name\"></span>\n          </mat-checkbox>\n        </li>\n      </ul>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    .title { font-weight: bold; }\n    .checkbox-list { list-style-type: none; }\n    .horizontal-list > li { display: inline-block; margin-right: 10px; zoom: 1; }\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  horizontalList = false;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.horizontalList = this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      for (let checkboxItem of this.checkboxList) {\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value);\n      }\n    }\n  }\n\n  get allChecked(): boolean {\n    return this.checkboxList.filter(t => t.checked).length === this.checkboxList.length;\n  }\n\n  get someChecked(): boolean {\n    const checkedItems = this.checkboxList.filter(t => t.checked).length;\n    return checkedItems > 0 && checkedItems < this.checkboxList.length;\n  }\n\n  updateValue() {\n    this.options.showErrors = true;\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n\n  updateAllValues(event: any) {\n    this.options.showErrors = true;\n    this.checkboxList.forEach(t => t.checked = event.checked);\n    this.updateValue();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-chip-list-widget',\n  template: ``,\n})\nexport class MaterialChipListComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { dateToString, hasOwn, stringToDate } from '../../shared';\n\n@Component({\n  selector: 'material-datepicker-widget',\n  template: `\n    <mat-form-field [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"dateValue\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateValue($event)\"\n        (input)=\"updateValue($event)\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    </mat-form-field>\n    <mat-datepicker #picker\n      (selectedChanged)=\"updateValue($event)\"></mat-datepicker>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialDatepickerComponent implements OnInit, OnChanges {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  dateValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    this.setControlDate(this.controlValue);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  ngOnChanges() {\n    this.setControlDate(this.controlValue);\n  }\n\n  setControlDate(dateString: string) {\n    this.dateValue = stringToDate(dateString);\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, dateToString(event, this.options));\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-file-widget',\n  template: ``,\n})\nexport class MaterialFileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-input-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-autocomplete *ngIf=\"options?.typeahead?.source\">\n        <mat-option *ngFor=\"let word of options?.typeahead?.source\"\n          [value]=\"word\">{{word}}</mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialInputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-number-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"layoutNode?.type === 'range'\" align=\"start\"\n        [innerHTML]=\"controlValue\"></mat-hint>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialNumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { buildTitleMap } from '../../shared';\n\n@Component({\n  selector: 'material-radios-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-radio-group *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [name]=\"controlName\"\n        (blur)=\"options.showErrors = true\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    mat-radio-group { display: inline-flex; }\n    mat-radio-button { margin: 2px; }\n    mat-error { font-size: 75%; }\n  `]\n})\nexport class MaterialRadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  flexDirection = 'column';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline') {\n      this.flexDirection = 'row';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { buildTitleMap, isArray } from '../../shared';\n\n@Component({\n  selector: 'material-select-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <mat-select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <mat-select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [attr.selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialSelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-slider-widget',\n  template: `\n    <mat-slider thumbLabel *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      (blur)=\"options.showErrors = true\"></mat-slider>\n    <mat-slider thumbLabel *ngIf=\"!boundControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      [value]=\"controlValue\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\"></mat-slider>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialSliderComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-stepper-widget',\n  template: ``,\n})\nexport class MaterialStepperComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-tabs-widget',\n  template: `\n    <nav mat-tab-nav-bar\n      [attr.aria-label]=\"options?.label || options?.title || ''\"\n      [style.width]=\"'100%'\">\n        <a mat-tab-link *ngFor=\"let item of layoutNode?.items; let i = index\"\n          [active]=\"selectedItem === i\"\n          (click)=\"select(i)\">\n          <span *ngIf=\"showAddTab || item.type !== '$ref'\"\n            [innerHTML]=\"setTabTitle(item, i)\"></span>\n        </a>\n    </nav>\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') + ' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class MaterialTabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    };\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    this.itemCount = this.layoutNode.items.length - 1;\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    this.showAddTab = lastItem.type === '$ref' &&\n      this.itemCount < (lastItem.options.maxItems || 1000);\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-textarea-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <textarea matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <textarea matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialTextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { hasOwn, isArray, isDefined, toTitleCase } from '../../shared';\n\n@Component({\n  selector: 'material-design-framework',\n  template: `\n    <div\n      [class.array-item]=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"\n      [orderable]=\"isOrderable\"\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"widgetLayoutNode\">\n      <svg *ngIf=\"showRemoveButton\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"18\" width=\"18\" viewBox=\"0 0 24 24\"\n        class=\"close-button\"\n        (click)=\"removeItem()\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/>\n      </svg>\n      <select-widget-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layoutNode]=\"widgetLayoutNode\"></select-widget-widget>\n    </div>\n    <div class=\"spacer\" *ngIf=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"></div>`,\n  styles: [`\n    .array-item {\n      border-radius: 2px;\n      box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),\n                  0 2px 2px  0   rgba(0,0,0,.14),\n                  0 1px 5px  0   rgba(0,0,0,.12);\n      padding: 6px;\n      position: relative;\n      transition: all 280ms cubic-bezier(.4, 0, .2, 1);\n    }\n    .close-button {\n      cursor: pointer;\n      position: absolute;\n      top: 6px;\n      right: 6px;\n      fill: rgba(0,0,0,.4);\n      visibility: hidden;\n      z-index: 500;\n    }\n    .close-button:hover { fill: rgba(0,0,0,.8); }\n    .array-item:hover > .close-button { visibility: visible; }\n    .spacer { margin: 6px 0; }\n    [draggable=true]:hover {\n      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2),\n                  0 8px 10px 1px rgba(0,0,0,.14),\n                  0 3px 14px 2px rgba(0,0,0,.12);\n      cursor: move;\n      z-index: 10;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class MaterialDesignFrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  inputType: string;\n  options: any; // Options used in this framework\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  widgetOptions: any; // Options passed to child widget\n  formControl: any = null;\n  parentArray: any = null;\n  isOrderable = false;\n  dynamicTitle: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.layoutNode || !this.widgetOptions.removable ||\n      this.widgetOptions.readonly || this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n    if (this.dynamicTitle) { this.updateTitle(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options || {});\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options || {})\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      if (\n        isDefined(this.widgetOptions.minimum) &&\n        isDefined(this.widgetOptions.maximum) &&\n        this.widgetOptions.multipleOf >= 1\n      ) {\n        this.layoutNode.type = 'range';\n      }\n\n      if (\n        !['$ref', 'advancedfieldset', 'authfieldset', 'button', 'card',\n          'checkbox', 'expansion-panel', 'help', 'message', 'msg', 'section',\n          'submit', 'tabarray', 'tabs'].includes(this.layoutNode.type) &&\n        /{{.+?}}/.test(this.widgetOptions.title || '')\n      ) {\n        this.dynamicTitle = this.widgetOptions.title;\n        this.updateTitle();\n      }\n\n      if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n        this.parentArray = this.jsf.getParentNode(this);\n        if (this.parentArray) {\n          this.isOrderable =\n            this.parentArray.type.slice(0, 3) !== 'tab' &&\n            this.layoutNode.arrayItemType === 'list' &&\n            !this.widgetOptions.readonly &&\n            this.parentArray.options.orderable;\n        }\n      }\n\n      this.frameworkInitialized = true;\n    } else {\n      this.options = {};\n    }\n  }\n\n  updateTitle() {\n    this.widgetLayoutNode.options.title = this.jsf.parseText(\n      this.dynamicTitle,\n      this.jsf.getFormControlValue(this),\n      this.jsf.getFormControlGroup(this).value,\n      this.dataIndex[this.dataIndex.length - 1]\n    );\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Framework } from '../framework';\n\n// Material Design Framework\n// https://github.com/angular/material2\nimport { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n\n@Injectable()\nexport class MaterialDesignFramework extends Framework {\n  name = 'material-design';\n\n  framework = MaterialDesignFrameworkComponent;\n\n  stylesheets = [\n    '//fonts.googleapis.com/icon?family=Material+Icons',\n    '//fonts.googleapis.com/css?family=Roboto:300,400,500,700',\n  ];\n\n  widgets = {\n    'root':            FlexLayoutRootComponent,\n    'section':         FlexLayoutSectionComponent,\n    '$ref':            MaterialAddReferenceComponent,\n    'button':          MaterialButtonComponent,\n    'button-group':    MaterialButtonGroupComponent,\n    'checkbox':        MaterialCheckboxComponent,\n    'checkboxes':      MaterialCheckboxesComponent,\n    'chip-list':       MaterialChipListComponent,\n    'date':            MaterialDatepickerComponent,\n    'file':            MaterialFileComponent,\n    'number':          MaterialNumberComponent,\n    'one-of':          MaterialOneOfComponent,\n    'radios':          MaterialRadiosComponent,\n    'select':          MaterialSelectComponent,\n    'slider':          MaterialSliderComponent,\n    'stepper':         MaterialStepperComponent,\n    'tabs':            MaterialTabsComponent,\n    'text':            MaterialInputComponent,\n    'textarea':        MaterialTextareaComponent,\n    'alt-date':        'date',\n    'any-of':          'one-of',\n    'card':            'section',\n    'color':           'text',\n    'expansion-panel': 'section',\n    'hidden':          'none',\n    'image':           'none',\n    'integer':         'number',\n    'radiobuttons':    'button-group',\n    'range':           'slider',\n    'submit':          'button',\n    'tagsinput':       'chip-list',\n    'wizard':          'stepper',\n  };\n}\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\n\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n\nexport const MATERIAL_FRAMEWORK_COMPONENTS = [\n  FlexLayoutRootComponent, FlexLayoutSectionComponent,\n  MaterialAddReferenceComponent, MaterialOneOfComponent,\n  MaterialButtonComponent, MaterialButtonGroupComponent,\n  MaterialCheckboxComponent, MaterialCheckboxesComponent,\n  MaterialChipListComponent, MaterialDatepickerComponent,\n  MaterialFileComponent, MaterialInputComponent, MaterialNumberComponent,\n  MaterialRadiosComponent, MaterialSelectComponent, MaterialSliderComponent,\n  MaterialStepperComponent, MaterialTabsComponent, MaterialTextareaComponent,\n  MaterialDesignFrameworkComponent\n];\n\nexport { FlexLayoutRootComponent } from './flex-layout-root.component';\nexport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nexport { MaterialAddReferenceComponent } from './material-add-reference.component';\nexport { MaterialOneOfComponent } from './material-one-of.component';\nexport { MaterialButtonComponent } from './material-button.component';\nexport { MaterialButtonGroupComponent } from './material-button-group.component';\nexport { MaterialCheckboxComponent } from './material-checkbox.component';\nexport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nexport { MaterialChipListComponent } from './material-chip-list.component';\nexport { MaterialDatepickerComponent } from './material-datepicker.component';\nexport { MaterialFileComponent } from './material-file.component';\nexport { MaterialInputComponent } from './material-input.component';\nexport { MaterialNumberComponent } from './material-number.component';\nexport { MaterialRadiosComponent } from './material-radios.component';\nexport { MaterialSelectComponent } from './material-select.component';\nexport { MaterialSliderComponent } from './material-slider.component';\nexport { MaterialStepperComponent } from './material-stepper.component';\nexport { MaterialTabsComponent } from './material-tabs.component';\nexport { MaterialTextareaComponent } from './material-textarea.component';\n\nexport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\n  MatFormFieldModule, MatIconModule, MatInputModule, MatNativeDateModule,\n  MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule,\n  MatStepperModule, MatTabsModule, MatTooltipModule,\n} from '@angular/material';\nexport const ANGULAR_MATERIAL_MODULES = [\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\n  MatFormFieldModule, MatIconModule, MatInputModule, MatNativeDateModule,\n  MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule,\n  MatStepperModule, MatTabsModule, MatTooltipModule,\n];\n/**\n * unused @angular/material modules:\n * MatDialogModule, MatGridListModule, MatListModule, MatMenuModule,\n * MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule,\n * MatSidenavModule, MatSnackBarModule, MatSortModule, MatTableModule,\n * MatToolbarModule,\n */\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { Framework } from '../framework';\nimport { MATERIAL_FRAMEWORK_COMPONENTS } from './index';\nimport { MaterialDesignFramework } from './material-design.framework';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, FlexLayoutModule,\n    ...ANGULAR_MATERIAL_MODULES, WidgetLibraryModule\n  ],\n  declarations:    [ ...MATERIAL_FRAMEWORK_COMPONENTS ],\n  exports:         [ ...MATERIAL_FRAMEWORK_COMPONENTS ],\n  entryComponents: [ ...MATERIAL_FRAMEWORK_COMPONENTS ]\n})\nexport class MaterialDesignFrameworkModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MaterialDesignFrameworkModule,\n      providers: [\n        { provide: Framework, useClass: MaterialDesignFramework, multi: true }\n      ]\n    };\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport {\n  addClasses, hasOwn, inArray, isArray, JsonPointer, toTitleCase\n} from '../../shared';\n\n/**\n * Bootstrap 3 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  selector: 'bootstrap-3-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n          <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap3FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      if (this.layoutNode.type !== 'flex')  {\n          this.options.htmlClass =\n            this.layoutNode.type === 'array' ?\n              addClasses(this.options.htmlClass, 'list-group') :\n            this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n              addClasses(this.options.htmlClass, 'list-group-item') :\n              addClasses(this.options.htmlClass, 'form-group');\n      }\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n        break;\n        // Radio controls\n        case 'radio': case 'radios':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n        break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          let vars: any[] = [];\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Framework } from '../framework';\n\n// Bootstrap 3 Framework\n// https://github.com/valor-software/ng2-bootstrap\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\n\n@Injectable()\nexport class Bootstrap3Framework extends Framework {\n  name = 'bootstrap-3';\n\n  framework = Bootstrap3FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css',\n  ];\n\n  scripts = [\n    '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',\n    '//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js',\n  ];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { Framework } from '../framework';\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\nimport { Bootstrap3Framework } from './bootstrap-3.framework';\n\n@NgModule({\n  imports:         [ CommonModule, WidgetLibraryModule ],\n  declarations:    [ Bootstrap3FrameworkComponent ],\n  exports:         [ Bootstrap3FrameworkComponent ],\n  entryComponents: [ Bootstrap3FrameworkComponent ]\n})\nexport class Bootstrap3FrameworkModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Bootstrap3FrameworkModule,\n      providers: [\n        { provide: Framework, useClass: Bootstrap3Framework, multi: true }\n      ]\n    };\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport {\n  addClasses, hasOwn, inArray, isArray, JsonPointer, toTitleCase\n} from '../../shared';\n\n/**\n * Bootstrap 4 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  selector: 'bootstrap-4-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40px; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap4FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n        // For removable tuple items, only allow removing last item in list\n        this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      this.options.htmlClass =\n        this.layoutNode.type === 'array' ?\n          addClasses(this.options.htmlClass, 'list-group') :\n          this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n            addClasses(this.options.htmlClass, 'list-group-item') :\n            addClasses(this.options.htmlClass, 'form-group');\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n          break;\n        // Radio controls\n        case 'radio': case 'radios':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n          break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          let vars: any[] = [];\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Framework } from '../framework';\n\n// Bootstrap 4 Framework\n// https://github.com/ng-bootstrap/ng-bootstrap\nimport { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\n\n\n@Injectable()\nexport class Bootstrap4Framework extends Framework {\n  name = 'bootstrap-4';\n\n  framework = Bootstrap4FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css'\n  ];\n\n  scripts = [\n    '//code.jquery.com/jquery-3.2.1.slim.min.js',\n    '//cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js',\n  ];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { Framework } from '../framework';\nimport { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\nimport { Bootstrap4Framework } from './bootstrap-4.framework';\n\n@NgModule({\n  imports:         [ CommonModule, WidgetLibraryModule ],\n  declarations:    [ Bootstrap4FrameworkComponent ],\n  exports:         [ Bootstrap4FrameworkComponent ],\n  entryComponents: [ Bootstrap4FrameworkComponent ]\n})\nexport class Bootstrap4FrameworkModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Bootstrap4FrameworkModule,\n      providers: [\n        { provide: Framework, useClass: Bootstrap4Framework, multi: true }\n      ]\n    };\n  }\n}\n"]}